{"version":3,"sources":["slices/loginSlice.js","slices/modalSlice.js","hooks/useMessage.js","styles/theme/palette.js","common/button/DefaultButton.js","common/modal/MessageModal.js","features/login/index.js","slices/menuSlice.js","slices/searchSlice.js","layout/sidebar/Data.js","utils/common.js","layout/sidebar/index.js","layout/Header.js","styles/customize/layout/LayoutStyles.js","layout/container/Container.js","layout/container/PageContainer.js","api/index.js","hooks/useMenu.js","hooks/usePageMove.js","hooks/useSearch.js","hooks/useSearchParams.js","components/Data.js","hooks/useGetList.js","hooks/useGetLists.js","hooks/useExcelDownload.js","styles/theme/typography.js","styles/theme/search.js","styles/customize/components/SearchStyles.js","common/search/SearchSelect.js","common/search/DatePicker.js","common/search/DateTermButton.js","common/search/SearchRadio.js","common/search/SearchField.js","components/search/Search.js","styles/customize/table/SearchTableStyles.js","common/table/Button.js","styles/customize/select/TableSelectStyles.js","common/table/Select.js","styles/theme/textfield.js","common/table/TextField.js","common/excel/index.js","components/table/Pagination.js","components/table/SelectionTable.js","features/summary/Dashboard.js","hooks/useGetById.js","styles/customize/table/DetailTableStyles.js","layout/page/Header.js","layout/page/Heading.js","common/button/PageButton.js","common/button/SubmitButton.js","layout/page/Buttons.js","styles/customize/components/ImageCarouselStyles.js","components/image/ImageCarousel.js","common/modal/DetailModal.js","features/summary/DashboardDetail.js","styles/theme/form.js","components/image/UploadImageCarousel.js","components/image/UploadImage.js","common/form/Input.js","styles/customize/select/FormSelectStyles.js","common/form/Select.js","common/form/CheckBox.js","common/form/RadioButton.js","common/form/ErrorMessage.js","features/summary/DashboardUpload.js","features/summary/DashboardEdit.js","components/search/DateTermSearch.js","components/table/Table.js","styles/customize/components/ModalFormStyles.js","common/table/SingleTextField.js","common/table/SingleSelect.js","common/table/RadioButton.js","common/table/CheckBox.js","common/editor/index.js","features/example/ExampleUpload.js","features/example/ExampleDetail.js","features/example/Example.js","components/search/ChartSearch.js","common/chart/LineChart.js","common/chart/PieChart.js","common/chart/DoughnutChart.js","common/chart/BubbleChart.js","common/chart/StackedBarChart.js","common/chart/BarChart.js","features/chart/components/Charts.js","features/chart/Chart.js","features/chart/components/Search.js","components/table/ChartTable.js","features/chart/ChartTable.js","features/admin/ChangeInfo.js","features/admin/ChangePassword.js","features/404/index.js","features/components/Search.js","features/components/Table.js","common/form/DatePicker.js","features/components/Form.js","features/components/Button.js","features/components/Modal.js","features/components/Typography.js","routes/Router.js","app/App.js","app/rootReducer.js","app/store.js","styles/theme/theme.js","serviceWorker.js","index.js"],"names":["loginSlice","createSlice","name","initialState","isLogin","hasErrors","data","reducers","setIsLogin","state","setLogOut","userName","localStorage","clear","extraReducers","actions","loginSelector","login","msgOpen","messageType","message","imgOpen","imgData","modalSlice","detailOpen","detailData","editOpen","editData","setMessage","payload","open","type","setDetail","setImage","setEdit","setClose","setDetailClose","setEditClose","modalSelector","modal","useMessage","dispatch","useDispatch","statusCode","parseInt","window","location","reload","palette","primary","light","main","red","secondary","background","active","neutral","white","dark","border","text","label","shadow","disabled","DefaultButton","size","color","variant","onClick","Button","MessageModal","handleConfirm","useSelector","onClose","Dialog","sx","p","DialogTitle","DialogContent","Typography","style","minWidth","DialogActions","py","px","useStyles","makeStyles","theme","loginContainer","width","height","halfContainer","display","alignItems","justifyContent","borderRadius","backgroundColor","contents","marginBottom","textAlign","fontWeight","fontSize","lineHeight","letterSpacing","input","borderBottom","outline","checkbox","marginTop","loginButton","cursor","Login","classes","useState","email","setEmail","password","setPassword","checked","setChecked","isFocused","setFocused","handleMessage","Grid","container","direction","className","item","placeholder","value","onChange","e","target","onFocus","onBlur","FormControlLabel","control","Checkbox","menuSlice","menu","menuTitle","menuNum","setMenu","menuSelector","useYn","gender","dessert","sweets","food","drink","searchType","searchKeyword","sort","pageNumber","pageShow","dateType","term","startDate","endDate","dessertTerm","dessertStartDate","dessertEndDate","foodTerm","foodStartDate","foodEndDate","searchSlice","setSearchFilter","setSearchFilters","reset","searchSelector","search","MenuData","private","setCaption","caption","siblings","num","icon","Dashboard","path","Article","Settings","subMenus","Build","SettingsSuggest","BarChart","TableChart","public","queryToString","query","keys","Object","result","forEach","q","encodeURIComponent","substr","length","format","date","datefm","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","join","handleDateClick","months","curDate","prevDate","dateObj","setDate","today","caltoday","setMonth","calculateDate","isEmpty","undefined","Array","isArray","getMessageText","getBase64Image","imgUrl","Promise","resolve","reject","img","Image","onload","canvas","document","createElement","getContext","drawImage","dataURL","toDataURL","replace","onerror","setAttribute","src","handleZipDownload","images","a","zip","require","i","errorMessage","extension","img_detail","endsWith","then","file","base64","catch","err","generateAsync","content","saveAs","drawer","boxSizing","scrollHeight","drawerPaper","top","paddingTop","borderRight","list","margin","listItem","paddingBottom","opacity","collapsedList","copyright","padding","divider","withRouter","adminType","history","useHistory","setOpen","menuType","handlePageChange","push","useEffect","initMenu","map","group","menus","some","Number","Box","component","aria-label","Drawer","paper","anchor","index","Fragment","List","menuName","subheader","ListItem","button","selected","subMenu","prev","handleToggleMenu","ListItemIcon","ListItemText","Collapse","in","unmountOnExit","paddingLeft","Divider","root","toolbar","dense","minHeight","appBar","left","zIndex","title","flexGrow","logoContainer","marginRight","logoButton","userButton","boxShadow","userImage","paddingRight","paddingleft","props","handleLogOut","AppBar","position","elevation","Toolbar","ButtonBase","disableRipple","Link","to","popupId","popupState","startIcon","bindHover","bindPopover","popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","withContainer","Component","layoutStyles","Container","maxWidth","withPageContainer","Paper","BASE_URL","process","returnData","res","catchError","response","status","getData","url","params","instance","axios","create","baseURL","headers","Accept","token","getItem","get","postData","fileYn","body","post","putData","put","deleteData","delete","useMenu","page","menuState","_","isEqual","usePageMove","baseUrl","useLocation","idx","useParams","pathInfo","pathname","param","useSearch","searchStates","searchItems","searchParams","currentList","key","getCurrentSearchParams","useSearchParams","chartSearchParams","newParams","setNewParams","handleSearchParams","useCallback","newObject","keywords","split","variable","pair","decodeURIComponent","queryToObject","reduxStateName","currentReduxState","currentSearchParam","assign","dailyFormat","monthlyFormat","searchComponent","dateSelect","radio","selects","Example","SearchComponent","Chart","ChartTable","searchCaption","searchRadioRow","searchSelect","searchOption","headCell","id","ExampleDetail","from","tableSelectOptions","viewYn","buttons","schema","yup","shape","category","required","description","quantity","min","positive","ChangeInfo","phone","image","test","sampleRowData","calories","fat","carbs","protein","useYnText","viewYnText","sortOrder","regdate","sampleChartData","sampleDetailData","sampleData","ingredients","regDate","useGetList","prevParams","ref","useRef","current","usePrevious","useQuery","enabled","rest","isError","error","useGetLists","apiList","useQueries","api","queryKey","queryFn","useExcelDownload","onSuccess","event","MouseEvent","view","bubbles","cancelable","querySelector","dispatchEvent","onError","excelLoading","isLoading","excelList","refetch","typography","fontFamily","h1","h2","h3","h4","h5","h6","overline","body1","body2","createTheme","components","MuiTextField","styleOverrides","MuiInputBase","MuiOutlinedInput","borderColor","borderWidth","notchedOutline","MuiButton","transition","contained","sizeLarge","MuiSelect","select","MuiMenuItem","MuiList","MuiListItem","termSearchRoot","table","borderTop","searchTextField","spacer","dash","btnContainer","SearchSelect","dataList","handleChange","searchState","options","option","selectOptions","Select","IconComponent","KeyboardArrowDownIcon","displayEmpty","MenuItem","DateSearchPicker","dates","handleDate","DatePicker","disableCloseOnSelect","mask","views","maxDate","inputFormat","inputProps","renderInput","TextField","minDate","DateTermButton","handleClick","dateFormat","SearchRadio","radioOptions","RadioGroup","row","Radio","SearchField","handleKeyword","InputLabelProps","shrink","onKeyDown","Search","heading","total","handleSearch","onAddButtonClick","addTopButton","setSearchType","keyword","setKeyword","setDates","handleSearchFilter","handleRadioChange","handleSubmit","obj","ThemeProvider","autoComplete","noValidate","colSpan","spacing","pb","breakpoints","tableHead","underlinedContent","textDecoration","up","visuallyHidden","clip","overflow","StyledButton","styled","TableButton","pageType","rowIndex","customStyles","provided","isSelected","valueContainer","singleValue","dropdownIndicator","indicatorsContainer","indicatorSeparator","alignSelf","menuList","TableSelect","handleSelect","isClearable","isSearchable","styles","defaultValue","TextInput","inputType","ExcelExport","loading","excelData","onExcelClick","DashboardExcel","filename","element","Sheet","Column","ExampleExcel","CircularProgress","TablePaginationActions","count","rowsPerPage","onPageChange","onAddClick","onDeleteClick","addButton","excelButton","deleteButton","totalCount","Math","ceil","Pagination","showFirstButton","showLastButton","SelectionTable","setSelected","onPageClick","DashboardData","TableCell","align","handlePage","paging","numSelected","rowCount","TableContainer","Table","aria-labelledby","toLowerCase","TableHead","TableRow","indeterminate","newSelecteds","n","cell","TableBody","labelId","isItemSelected","indexOf","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","slice","TablePagination","ActionsComponent","SelectProps","labelDisplayedRows","rowsPerPageOptions","newPage","onRowsPerPageChange","queryClient","useQueryClient","setSelectedIndex","handlePageClick","refetchList","brandList","categoryList","useMutation","includes","setQueryData","old","updateLoading","updateMutation","mutate","updateReset","console","log","deleteLoading","deleteMutation","deleteReset","brand","useGetById","header","contentContainer","contentImage","flex","uploadContainer","flexWrap","uploadPreviewContainer","bottom","right","transform","uploadButton","tableContainer","detailTable","selectContainer","statusText","marginLeft","form","Header","Heading","buttonText","ButtonHeading","PageButton","SubmitButton","Buttons","onConfirm","DetailEditButtons","UploadButtons","mr","imageContainer","imagePreviewContainer","proImg","noImage","textTransform","imageButtonContainer","imageButton","ImageCarousel","alt","imageIndex","setImageIndex","prevState","endIcon","onImageClick","DetailModal","QuantityTable","toLocaleString","DashboardDetail","downloading","setDownloading","isSuccess","handleUpdateData","handleDownload","selectContent","sizeSmall","sizeMedium","MuiIconButton","UploadImageCarousel","imageFiles","preview","UploadImage","setImageFiles","handleDeleteImageFile","imageLoading","setImageLoading","handleImageFile","files","reader","FileReader","onloadend","readAsDataURL","IconButton","handleDelete","multiple","accept","htmlFor","Input","fullWidth","multiline","rows","render","FormSelect","as","CheckBox","RadioButton","ErrorMessage","DashboardUpload","useForm","resolver","yupResolver","errors","clearErrors","getValues","actionType","setActionType","handleReset","ingredients_1","ingredients_2","ingredients_3","ingredients_4","formData","createMutation","onSubmit","filter","FormData","append","deleteImage","setDeleteImage","mutation","DateTermSearch","setTerm","starDate","mb","SearchTable","onEditClick","onDetailClick","ExampleData","editorRow","SingleTextField","SingleSelect","editorContainer","Editor","setContents","quillRef","React","imageCallBack","click","onchange","quill","getEditor","range","getSelection","imageSrc","insertEmbed","alert","modules","useMemo","handlers","clipboard","matchVisual","formats","ExampleUpload","setLoading","setCategory","newData","setNewData","ingredients1","ingredients2","ingredients3","setIngredients","reason","modalStatus","JSON","stringify","closeIcon","pagination","setPageNumber","defaultPage","siblingCount","boundaryCount","ChartSearch","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","responsive","maintainAspectRatio","scales","y","ticks","stepSize","animation","duration","elements","line","tension","plugins","legend","labels","getRandom","max","floor","random","datasets","LineChart","lineLoading","lineChartData","Skeleton","ArcElement","PieChart","pieLoading","pieChartData","DoughnutChart","doughnutLoading","doughnutChartData","beginAtZero","x","r","BubbleChart","bubbleLoading","bubbleChartData","BarElement","stacked","StackedBarChart","stackedBarLoading","stackedBarChartData","barLoading","barChartData","Charts","rowSpacing","columnSpacing","xs","gutterBottom","overflowX","sticky","scope","setDessert","setFood","handleFood","handleDessert","dataset1Loading","dataset1","dataset2Loading","dataset2","grid","curPassword","newPassword","pwCheck","submitContainer","submitButton","ChangePassword","pw","setPw","newPw","setNewPw","setPwCheck","Page404","flexDirection","componentContainer","borderCollapse","handleDemo","Form","ButtonComponent","Modal","usage","TypographyComponent","Router","exact","DashboardEdit","TableComponent","FormComponent","ModalComponent","App","PrivateRoutes","PublicRoutes","rootReducer","combineReducers","loginReducer","menuReducer","modalReducer","searchReducer","configureStore","reducer","action","middleware","getDefaultMiddleware","devTools","MuiCssBaseline","html","MuiTableContainer","MuiTableRow","MuiTableHead","MuiTableCell","head","MuiTablePagination","MuiSvgIcon","koKR","Boolean","hostname","match","QueryClient","defaultOptions","queries","retry","cacheTime","staleTime","refetchOnWindowFocus","refetchOnmount","refetchOnReconnect","ReactDOM","StrictMode","StyledEngineProvider","injectFirst","store","CssBaseline","client","LocalizationProvider","dateAdapter","AdapterDateFns","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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uBACA,wBAAOwE,UAAWd,EAAQ4a,MAA1B,UACI,gCACI,+BACI,sCACA,sCACA,4CACA,yCACA,kDAGR,kCACI,+BACI,sCACA,wCACA,oCACA,yCACA,mEAEJ,+BACI,uCACA,wCACA,oCACA,2CACA,wEAEJ,+BACI,yCACA,wCACA,oCACA,4CACA,8DAEJ,+BACI,0CACA,yCACA,oCACA,uCACA,kDAEJ,+BACI,sCACA,wCACA,qCACA,mCACA,yFAEJ,+BACI,yCACA,0CACA,qCACA,mCACA,0EAtDhB,yDA2DI,uBACA,wBAAO9Z,UAAWd,EAAQ4a,MAA1B,UACI,gCACI,+BACI,sCACA,sCACA,4CACA,yCACA,kDAGR,kCACI,+BACI,sCACA,wCACA,oCACA,0CACA,yDAEJ,+BACI,sCACA,wCACA,oCACA,6CACA,wEAEJ,+BACI,yCACA,yCACA,oCACA,uCACA,kDAEJ,+BACI,0CACA,yCACA,oCACA,uCACA,kDAEJ,+BACI,sCACA,wCACA,qCACA,mCACA,wEAEJ,+BACI,yCACA,wCACA,oCACA,mCACA,mFA/GhB,qDAoHI,uBACA,wBAAO9Z,UAAWd,EAAQ4a,MAA1B,UACI,gCACI,+BACI,sCACA,sCACA,4CACA,yCACA,kDAGR,kCACI,+BACI,uCACA,wCACA,oCACA,2CACA,wEAEJ,+BACI,0CACA,yCACA,oCACA,uCACA,kDAEJ,+BACI,sCACA,wCACA,qCACA,uBACA,wEAEJ,+BACI,0CACA,wCACA,oCACA,0CACA,0DAEJ,+BACI,yCACA,0CACA,qCACA,uBACA,yEAjKhB,0CAsKI,uBACA,wBAAO9Z,UAAWd,EAAQ4a,MAA1B,UACI,gCACI,+BACI,sCACA,sCACA,kDAGR,kCACI,+BACI,sCACA,wCACA,gEAEJ,+BACI,yCACA,yCACA,kDAEJ,+BACI,0CACA,yCACA,kDAEJ,+BACI,2CACA,uCACA,iEAEJ,+BACI,8CACA,0CACA,6FAvMhB,iDA4MI,uBACA,wBAAO9Z,UAAWd,EAAQ4a,MAA1B,UACI,gCACI,+BACI,sCACA,sCACA,4CACA,yCACA,kDAGR,kCACI,+BACI,0CACA,yC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","file":"static/js/main.006e2d64.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const loginSlice = createSlice({\n    name: \"login\",\n    initialState: {\n        isLogin: true,\n        hasErrors: false,\n        data: \"\"\n    },\n    reducers: {\n        setIsLogin: (state) => {\n            state.isLogin = true;\n        },\n        setLogOut: (state) => {\n            state.isLogin = false;\n            state.userName = \"\";\n            localStorage.clear();\n        }\n    },\n    extraReducers: {}\n});\n\nexport const { setIsLogin, setLogOut } = loginSlice.actions;\n\nexport const loginSelector = (state) => state.login;\n\nexport default loginSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    // 메시지 모달\n    msgOpen: false,\n    messageType: \"\",\n    message: \"\",\n\n    // 이미지 모달\n    imgOpen: false,\n    imgData: null\n};\n\nexport const modalSlice = createSlice({\n    name: \"modal\",\n    initialState: {\n        ...initialState,\n        // 상세 모달\n        detailOpen: false,\n        detailData: null,\n        // 추가/수정 모달\n        editOpen: false,\n        editData: null\n    },\n    reducers: {\n        // 메시지 모달 띄우기\n        setMessage: (state, { payload }) => {\n            state.msgOpen = payload.open;\n            state.messageType = payload.type;\n            state.message = payload.message;\n        },\n        // 상세 모달 띄우기\n        setDetail: (state, { payload }) => {\n            state.detailOpen = payload.open;\n            state.detailData = payload.data;\n        },\n        // 이미지 모달 띄우기\n        setImage: (state, { payload }) => {\n            state.imgOpen = payload.open;\n            state.imgData = payload.data;\n        },\n        // 추가/수정 모달 띄우기\n        setEdit: (state, { payload }) => {\n            state.editOpen = payload.open;\n            state.editData = payload.data;\n        },\n        // 메시지, Confirm, 상세, 이미지 모달 닫기\n        setClose: (state) => {\n            return { ...state, ...initialState };\n        },\n        // 상세 모달 닫기\n        setDetailClose: (state, { payload }) => {\n            state.detailOpen = false;\n            state.detailData = null;\n        },\n        // 추가/수정 모달 닫기\n        setEditClose: (state, { payload }) => {\n            state.editOpen = false;\n            state.editData = null;\n        }\n    }\n});\n\nexport const { setMessage, setDetail, setImage, setEdit, setClose, setDetailClose, setEditClose } = modalSlice.actions;\n\nexport const modalSelector = (state) => state.modal;\n\nexport default modalSlice.reducer;\n","import { useDispatch } from \"react-redux\";\nimport { setMessage } from \"slices/modalSlice\";\nimport { setLogOut } from \"slices/loginSlice\";\n\nconst useMessage = () => {\n    const dispatch = useDispatch();\n\n    const handleMessage = ({ type, statusCode, message }) => {\n        dispatch(setMessage({ open: true, type, message }));\n\n        if (parseInt(statusCode) === 401) {\n            dispatch(setLogOut());\n            window.location.reload();\n        }\n    };\n\n    return handleMessage;\n};\n\nexport default useMessage;\n","export const palette = {\n    primary: {\n        light: \"#039be508\",\n        \"opacity0.2\": \"#039be533\",\n        main: \"#039BE5\",\n        red: \"#DE5D5D\"\n    },\n    secondary: {\n        main: \"#3D3935\"\n    },\n    background: {\n        light: \"#fbfbfb\",\n        \"lightOpacity0.7\": \"#f3f3f3b3\",\n        main: \"#f3f3f3\",\n        active: \"#e7e7e7\"\n    },\n    neutral: {\n        white: \"#ffffff\",\n        dark: \"#3D3935\",\n        main: \"#222222\"\n    },\n    border: {\n        light: \"#00000033\",\n        \"opacity0.1\": \"#3d39351a\",\n        \"opacity0.2\": \"#3d393533\",\n        main: \"#3D393534\",\n        dark: \"#3D3935\"\n    },\n    text: {\n        primary: \"#333333\",\n        secondary: \"#333333\",\n        label: \"#333333b3\"\n    },\n    shadow: {\n        primary: \"#E8E8E888\"\n    },\n    disabled: {\n        primary: \"#0000001f\"\n    }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"@mui/material/Button\";\n\nfunction DefaultButton({ size = \"large\", color = \"primary\", variant = \"outlined\", disabled = false, text, onClick }) {\n    return (\n        <Button size={size} color={color} variant={variant} disabled={disabled} onClick={onClick}>\n            {text}\n        </Button>\n    );\n}\n\nDefaultButton.propTypes = {\n    size: PropTypes.string,\n    color: PropTypes.string,\n    variant: PropTypes.string,\n    disabled: PropTypes.bool,\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default DefaultButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { modalSelector, setClose } from \"slices/modalSlice\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Typography from \"@mui/material/Typography\";\n\nimport ModalButton from \"common/button/DefaultButton\";\n\nfunction MessageModal({ handleConfirm }) {\n    const dispatch = useDispatch();\n    const { msgOpen, messageType, message } = useSelector(modalSelector);\n\n    const onConfirm = () => {\n        dispatch(setClose());\n        handleConfirm();\n    };\n\n    // 모달 닫기\n    const onClose = () => dispatch(setClose());\n\n    return (\n        <>\n            {msgOpen && (\n                <Dialog open={msgOpen} onClose={onClose} sx={{ p: 10 }}>\n                    <DialogTitle>{messageType === \"message\" ? \"알림\" : \"확인\"}</DialogTitle>\n                    <DialogContent>\n                        <Typography variant=\"body2\" style={{ minWidth: 320 }}>\n                            {message}\n                        </Typography>\n                    </DialogContent>\n                    {messageType === \"message\" ? (\n                        <DialogActions sx={{ py: 2, px: 2.5 }}>\n                            <ModalButton size=\"small\" text=\"확인\" onClick={onClose} />\n                        </DialogActions>\n                    ) : (\n                        <DialogActions sx={{ py: 2, px: 2.5 }}>\n                            <ModalButton size=\"small\" text=\"확인\" onClick={onConfirm} />\n                            <ModalButton size=\"small\" color=\"error\" text=\"취소\" onClick={onClose} />\n                        </DialogActions>\n                    )}\n                </Dialog>\n            )}\n        </>\n    );\n}\n\nMessageModal.propTypes = {\n    handleConfirm: PropTypes.func\n};\n\nexport default MessageModal;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setIsLogin } from \"slices/loginSlice\";\nimport useMessage from \"hooks/useMessage\";\n\nimport { palette } from \"styles/theme/palette\";\nimport { makeStyles } from \"@mui/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nimport MessageModal from \"common/modal/MessageModal\";\n\nconst useStyles = makeStyles((theme) => ({\n    loginContainer: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    halfContainer: {\n        width: 480,\n        height: 560,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 4,\n        backgroundColor: theme.palette.neutral[\"white\"]\n    },\n    contents: {\n        display: \"block\",\n        width: 305\n    },\n    text: {\n        marginBottom: 36,\n        textAlign: \"left\",\n        fontWeight: 300,\n        fontSize: 20,\n        lineHeight: \"26px\",\n        letterSpacing: \"-0.8px\"\n    },\n    input: {\n        width: 300,\n        height: 56,\n        fontWeight: 500,\n        fontSize: 13,\n        lineHeight: \"56px\",\n        border: \"none\",\n        borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`,\n        outline: \"none\"\n    },\n    checkbox: {\n        marginTop: 20,\n        fontSize: 13,\n        lineHeight: \"20px\",\n        color: theme.palette.text[\"label\"],\n        letterSpacing: \"-0.48px\"\n    },\n    loginButton: {\n        width: \"100%\",\n        height: 48,\n        marginTop: 42,\n        backgroundColor: theme.palette.primary[\"main\"],\n        cursor: \"pointer\",\n        fontSize: 13,\n        letterSpacing: \"-0.26px\",\n        fontWeight: 600,\n        color: theme.palette.neutral[\"white\"],\n        border: \"none\",\n        borderRadius: 24,\n        outline: \"none\"\n    },\n    message: {\n        marginBottom: 30,\n        textAlign: \"center\",\n        fontSize: 13,\n        fontWeight: 400,\n        letterSpacing: \"-0.26px\"\n    }\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [checked, setChecked] = useState(true);\n    const [isFocused, setFocused] = useState(null);\n\n    const handleMessage = useMessage();\n\n    // 로그인\n    const handleSubmit = () => {\n        handleMessage({ type: \"message\", message: \"로그인\" });\n        dispatch(setIsLogin());\n    };\n\n    return (\n        <Grid container justifyContent=\"center\" alignItems=\"center\" direction=\"row\" className={classes.loginContainer}>\n            <Grid item className={classes.halfContainer}>\n                Img\n            </Grid>\n            <Grid item className={classes.halfContainer}>\n                <div className={classes.contents}>\n                    <div className={classes.text}>\n                        BLOCKODYSSEY\n                        <div>bo-admin-starter</div>\n                    </div>\n                    <input\n                        className={classes.input}\n                        type=\"text\"\n                        size=\"30\"\n                        placeholder=\"이메일 입력\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        onFocus={() => setFocused(\"email\")}\n                        onBlur={() => setFocused(null)}\n                        style={isFocused === \"email\" ? { borderBottom: `2px solid ${palette.primary[\"main\"]}` } : null}\n                    />\n                    <input\n                        className={classes.input}\n                        type=\"password\"\n                        size=\"30\"\n                        placeholder=\"비밀번호 입력\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        onFocus={() => setFocused(\"password\")}\n                        onBlur={() => setFocused(null)}\n                        style={isFocused === \"password\" ? { borderBottom: `2px solid ${palette.primary[\"main\"]}` } : null}\n                    />\n                    <FormControlLabel className={classes.checkbox} control={<Checkbox checked={checked} name=\"checked\" onChange={(e) => setChecked(e.target.checked)} />} label=\"자동 로그인\" />\n                    <div>\n                        <button type=\"button\" className={classes.loginButton} onClick={handleSubmit}>\n                            로그인\n                        </button>\n                    </div>\n                    <MessageModal />\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const menuSlice = createSlice({\n    name: \"menu\",\n    initialState: {\n        menu: \"\",\n        menuTitle: \"\",\n        menuNum: 1\n    },\n    reducers: {\n        setMenu: (state, { payload }) => {\n            state.menu = payload.menu;\n            state.menuTitle = payload.menuTitle;\n            state.menuNum = payload.menuNum;\n        }\n    }\n});\n\nexport const { setMenu } = menuSlice.actions;\n\nexport const menuSelector = (state) => state.menu;\n\nexport default menuSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    useYn: \"\",\n    gender: \"\",\n    dessert: \"\",\n    sweets: \"\",\n    food: \"\",\n    drink: \"\",\n\n    searchType: \"\",\n    searchKeyword: \"\",\n\n    sort: \"latest\",\n    pageNumber: 1,\n    pageShow: 10,\n\n    dateType: \"regDate\",\n    term: \"daily\",\n    startDate: null,\n    endDate: null,\n\n    dessertTerm: \"daily\",\n    dessertStartDate: null,\n    dessertEndDate: null,\n\n    foodTerm: \"monthly\",\n    foodStartDate: null,\n    foodEndDate: null\n};\n\nexport const searchSlice = createSlice({\n    name: \"search\",\n    initialState,\n    reducers: {\n        setSearchFilter: (state, { payload }) => {\n            state[payload.type] = payload.value;\n        },\n        setSearchFilters: (state, { payload }) => {\n            return { ...state, ...payload };\n        },\n        reset: () => initialState\n    }\n});\n\nexport const { setSearchFilter, setSearchFilters, reset } = searchSlice.actions;\n\nexport const searchSelector = (state) => state.search;\n\nexport default searchSlice.reducer;\n","import { Dashboard, Article, Settings, Build, BarChart, TableChart, SettingsSuggest } from \"@mui/icons-material\";\r\n\r\nconst MenuData = {\r\n    private: [\r\n        {\r\n            setCaption: true,\r\n            caption: \"홈\",\r\n            menu: [\"dashboard\"],\r\n            siblings: [\r\n                {\r\n                    num: 0,\r\n                    menu: \"dashboard\",\r\n                    menuTitle: \"Dashboard\",\r\n                    icon: <Dashboard />,\r\n                    path: \"/\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            setCaption: true,\r\n            caption: \"예시\",\r\n            menu: [\"example\"],\r\n            siblings: [\r\n                {\r\n                    num: 1,\r\n                    menu: \"example\",\r\n                    menuTitle: \"Example\",\r\n                    icon: <Article />,\r\n                    path: \"/example\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            setCaption: true,\r\n            caption: \"컴포넌트\",\r\n            menu: [\"components\", \"common\"],\r\n            siblings: [\r\n                {\r\n                    num: null,\r\n                    menu: \"components\",\r\n                    menuTitle: \"Components\",\r\n                    icon: <Settings />,\r\n                    subMenus: [\r\n                        {\r\n                            num: 2,\r\n                            menuTitle: \"Search\",\r\n                            icon: <Build />,\r\n                            path: \"/search\"\r\n                        },\r\n                        {\r\n                            num: 3,\r\n                            menuTitle: \"Table\",\r\n                            icon: <Build />,\r\n                            path: \"/table\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    num: null,\r\n                    menu: \"common\",\r\n                    menuTitle: \"Common\",\r\n                    icon: <SettingsSuggest />,\r\n                    subMenus: [\r\n                        {\r\n                            num: 4,\r\n                            menuTitle: \"Form\",\r\n                            icon: <Build />,\r\n                            path: \"/form\"\r\n                        },\r\n                        {\r\n                            num: 5,\r\n                            menuTitle: \"Modal\",\r\n                            icon: <Build />,\r\n                            path: \"/modal\"\r\n                        },\r\n                        {\r\n                            num: 6,\r\n                            menuTitle: \"Typography\",\r\n                            icon: <Build />,\r\n                            path: \"/typography\"\r\n                        },\r\n                        {\r\n                            num: 7,\r\n                            menuTitle: \"Button\",\r\n                            icon: <Build />,\r\n                            path: \"/button\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            setCaption: true,\r\n            caption: \"차트\",\r\n            menu: [\"chart\"],\r\n            siblings: [\r\n                {\r\n                    num: 8,\r\n                    menu: \"chart\",\r\n                    menuTitle: \"Chart\",\r\n                    icon: <BarChart />,\r\n                    path: \"/chart\"\r\n                },\r\n                {\r\n                    num: 9,\r\n                    menu: \"chart\",\r\n                    menuTitle: \"Chart with Table\",\r\n                    icon: <TableChart />,\r\n                    path: \"/chart-table\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    public: [\r\n        {\r\n            setCaption: true,\r\n            caption: \"홈\",\r\n            menu: [\"dashboard\"],\r\n            siblings: [\r\n                {\r\n                    num: 0,\r\n                    menu: \"dashboard\",\r\n                    menuTitle: \"Dashboard\",\r\n                    icon: <Dashboard />,\r\n                    path: \"/\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MenuData;\r\n","import { saveAs } from \"file-saver\";\n\nexport const queryToString = (query) => {\n    const keys = Object.keys(query);\n\n    let result = \"?\";\n    keys.forEach((q) => {\n        if (query[q]) {\n            result += `${q}=${encodeURIComponent(query[q])}&`;\n        }\n    });\n\n    result = result.substr(0, result.length - 1);\n    return result;\n};\n\nexport const queryToObject = (search) => {\n    let params = {};\n    let keywords = search.split(\"?\");\n\n    keywords = keywords[1];\n    keywords = keywords && keywords.split(\"&\");\n\n    if (keywords) {\n        keywords.forEach((variable) => {\n            let pair = variable.split(\"=\");\n            params[pair[0]] = decodeURIComponent(pair[1]);\n        });\n    }\n\n    return params;\n};\n\n// 현재 메뉴에서 사용되는 검색 필터 리스트 구하기\n// searchStates : 현재 searchSlice에 있는 모든 값\n// searchParams : 현재 메뉴에서 사용할 검색 필터 이름들\nexport const getCurrentSearchParams = (searchStates, searchParams) => {\n    let currentList = {};\n\n    Object.keys(searchStates).map((key) => {\n        if (!isEmpty(searchParams[key])) {\n            currentList[key] = searchStates[key];\n        }\n        return currentList;\n    });\n\n    // 현재 메뉴에서 사용할 검색 필터 object\n    return currentList;\n};\n\n// 날짜 형식 변환\nexport const format = (type, date) => {\n    const datefm = new Date(date);\n    let formattedDate = \"\";\n\n    let day = \"\" + datefm.getDate();\n    let month = \"\" + (datefm.getMonth() + 1);\n    let year = \"\" + datefm.getFullYear();\n\n    if (day.length < 2) day = \"0\" + day;\n    if (month.length < 2) month = \"0\" + month;\n\n    let hour = \"\" + datefm.getHours();\n    let minutes = \"\" + datefm.getMinutes();\n    let seconds = \"\" + datefm.getSeconds();\n\n    if (hour.length < 2) hour = \"0\" + hour;\n    if (minutes.length < 2) minutes = \"0\" + minutes;\n    if (seconds.length < 2) seconds = \"0\" + seconds;\n\n    if (type === \"monthly\") {\n        formattedDate = [year, month].join(\"-\");\n    } else if (type === \"time\") {\n        formattedDate = [year, month, day].join(\"-\") + \" \" + [hour, minutes, seconds].join(\":\");\n    } else if (type === \"excel\") {\n        formattedDate = [year, month, day, hour, minutes, seconds].join(\"\");\n    } else {\n        formattedDate = [year, month, day].join(\"-\");\n    }\n\n    return formattedDate;\n};\n\n// 날짜 계산\nexport const calculateDate = (today, month) => {\n    let caltoday = new Date(today);\n    caltoday.setMonth(caltoday.getMonth() - month);\n\n    if (today.getDate() !== caltoday.getDate()) {\n        caltoday.setDate(0);\n    }\n\n    return caltoday;\n};\n\n// 기간 검색 버튼 클릭 (오늘, 1주일, 1개월, 3개월, 6개월, 기간 초기화)\nexport const handleDateClick = (name, months) => {\n    const curDate = new Date();\n    let prevDate = \"\";\n    let dateObj = { startDate: null, endDate: null };\n\n    if (name === \"today\") {\n        dateObj.startDate = format(\"daily\", curDate);\n        dateObj.endDate = format(\"daily\", curDate);\n    } else if (name === \"week\") {\n        prevDate = new Date(curDate).setDate(curDate.getDate() - 7);\n    } else if (name === \"month\") {\n        prevDate = calculateDate(curDate, months);\n    } else if (name === \"reset\") {\n        dateObj.startDate = null;\n        dateObj.endDate = null;\n    }\n\n    if (name === \"week\" || name === \"month\") {\n        dateObj.startDate = format(\"daily\", prevDate);\n        dateObj.endDate = format(\"daily\", curDate);\n    }\n\n    return dateObj;\n};\n\nexport const isEmpty = (value) => {\n    if (\n        value === \"\" ||\n        value === null ||\n        value === \"null\" ||\n        value === undefined ||\n        value === \"undefined\" ||\n        value === \"INVALID\" ||\n        (value !== null && Array.isArray(value) && value.length === 0) ||\n        (value !== null && typeof value === \"object\" && Object.keys(value).length === 0)\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Form 에서 사용하는 메시지들\nexport const getMessageText = (type) => {\n    let message = \"\";\n    if (type === \"delete\") {\n        message = \"이미지를 삭제하시겠습니까?\";\n    } else if (type === \"editCancel\") {\n        message = \"목록으로 돌아가시겠습니까? 입력된 정보는 수정되지 않습니다.\";\n    } else if (type === \"uploadCancel\") {\n        message = \"목록으로 돌아가시겠습니까? 입력된 정보는 저장되지 않습니다.\";\n    } else if (type === \"reset\") {\n        message = \"입력한 내용을 삭제하시겠습니까?\";\n    } else if (type === \"image download\" || type === \"excel download\") {\n        message = \"파일 다운로드 요청 중 문제가 발생하였습니다. 잠시 후 다시 시도해주세요.\";\n    } else if (type === \"fail\") {\n        message = \"잘못된 요청입니다.\";\n    } else if (type === \"submit\") {\n        message = \"입력한 정보를 등록하시겠습니까?\";\n    } else if (type === \"editSubmit\") {\n        message = \"정보를 수정하시겠습니까?\";\n    } else if (type === \"no image\") {\n        message = \"하나 이상의 이미지 파일을 선택해주세요\";\n    }\n\n    return message;\n};\n\n// 이미지 URL로부터 이미지 파일을 가지고 와서 Base 64 String으로 변환하기\nconst getBase64Image = (imgUrl) => {\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n\n        img.onload = () => {\n            let canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            canvas.getContext(\"2d\").drawImage(img, 0, 0, img.width, img.height);\n\n            let dataURL = canvas.toDataURL(\"image/jpeg\").replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\");\n            resolve(dataURL); // return the base64 string\n        };\n        img.onerror = () => reject(imgUrl);\n\n        img.setAttribute(\"crossOrigin\", \"anonymous\");\n        img.src = imgUrl;\n    });\n};\n\n// 이미지 Zip File 다운로드하기\nexport const handleZipDownload = async (images) => {\n    let zip = require(\"jszip\")();\n    let message = \"\";\n\n    for (let i in images) {\n        let errorMessage = \"\";\n        if (images[i]) {\n            // File Extension 확인 (.jpg, .png)\n            let extension = \".jpg\";\n            if (images[i].img_detail.endsWith(\".jpg\")) {\n                extension = \".jpg\";\n            } else if (images[i].img_detail.endsWith(\".png\")) {\n                extension = \".png\";\n            }\n\n            // 이미지 주소를 넘기고 base 64 string 값을 zip 파일에 추가하기\n            await getBase64Image(images[i].img_detail)\n                .then((imgData) => {\n                    zip.file(`사진_${parseInt(i) + 1}${extension}`, imgData, { base64: true });\n                })\n                .catch((err) => {\n                    errorMessage = `${parseInt(i) + 1}번째 사진 다운로드에 실패하였습니다.`;\n                });\n            message += errorMessage;\n        }\n    }\n\n    // 생성한 Zip 파일 다운로드\n    zip.generateAsync({ type: \"blob\" }).then(function (content) {\n        saveAs(content, \"이미지_파일.zip\");\n    });\n\n    return message;\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { menuSelector } from \"slices/menuSlice\";\r\nimport { reset } from \"slices/searchSlice\";\r\n\r\nimport MenuData from \"layout/sidebar/Data\";\r\nimport { isEmpty } from \"utils/common\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(({ palette }) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        boxSizing: \"border-box\"\r\n    },\r\n    scrollHeight: {\r\n        height: \"calc(100% - 145px)\"\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        top: 80,\r\n        paddingTop: 20,\r\n        color: palette.neutral[\"white\"],\r\n        background: palette.neutral[\"main\"],\r\n        borderRight: \"none\"\r\n    },\r\n    list: {\r\n        \"& .MuiListItem-root.Mui-selected\": {\r\n            backgroundColor: palette.background[\"main\"],\r\n            \"& p\": {\r\n                color: palette.text[\"primary\"]\r\n            },\r\n            \"& svg\": {\r\n                color: palette.text[\"primary\"]\r\n            }\r\n        }\r\n    },\r\n    caption: {\r\n        width: \"90%\",\r\n        margin: \"0 auto\",\r\n        color: palette.neutral[\"white\"],\r\n        fontSize: 14,\r\n        lineHeight: \"32px\",\r\n        fontWeight: 500\r\n    },\r\n    listItem: {\r\n        width: \"90%\",\r\n        height: 43,\r\n        margin: \"5px auto 0\",\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n        backgroundColor: palette.neutral[\"main\"],\r\n        borderRadius: 4,\r\n        \"&:hover\": {\r\n            borderRadius: 4,\r\n            backgroundColor: palette.background[\"main\"],\r\n            \"& p\": {\r\n                color: palette.text[\"primary\"]\r\n            },\r\n            \"& svg\": {\r\n                color: palette.text[\"primary\"]\r\n            }\r\n        },\r\n        \"& > div:first-child\": {\r\n            minWidth: 30\r\n        },\r\n        \"& svg\": {\r\n            minWidth: 20,\r\n            color: palette.neutral[\"white\"],\r\n            width: 20,\r\n            height: 20\r\n        },\r\n        \"& p\": {\r\n            fontSize: 15,\r\n            fontWeight: 500,\r\n            lineHeight: \"22px\",\r\n            letterSpacing: \"-0.45px\",\r\n            textAlign: \"left\",\r\n            color: palette.neutral[\"white\"],\r\n            opacity: 0.7\r\n        }\r\n    },\r\n    collapsedList: {\r\n        \"&& > .MuiListItem-root.Mui-selected\": {\r\n            backgroundColor: palette.background[\"lightOpacity0.7\"],\r\n            \"& p\": {\r\n                color: palette.text[\"primary\"]\r\n            },\r\n            \"& svg\": {\r\n                color: palette.text[\"primary\"]\r\n            },\r\n            opacity: 0.7\r\n        },\r\n        \"& .MuiListItem-root.Mui-selected\": {\r\n            backgroundColor: palette.background[\"main\"],\r\n            \"& p\": {\r\n                color: palette.text[\"primary\"]\r\n            },\r\n            \"& svg\": {\r\n                color: palette.text[\"primary\"]\r\n            }\r\n        }\r\n    },\r\n    copyright: {\r\n        width: \"100%\",\r\n        padding: \"10px 0 20px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \"& p\": {\r\n            textAlign: \"left\",\r\n            fontSize: 12,\r\n            lineHeight: \"18px\",\r\n            fontWeight: 400,\r\n            letterSpacing: \"-0.12px\",\r\n            color: palette.neutral[\"white\"],\r\n            opacity: 0.5\r\n        }\r\n    },\r\n    divider: {\r\n        width: \"90%\",\r\n        margin: \"10px auto\",\r\n        backgroundColor: \"rgba(255,255,255,0.5)\"\r\n    }\r\n}));\r\n\r\nfunction SideBar({ adminType = \"private\" }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { menuNum } = useSelector(menuSelector);\r\n    const [open, setOpen] = useState({});\r\n\r\n    const menuType = (() => {\r\n        switch (adminType) {\r\n            case \"public\":\r\n                return \"public\";\r\n            case \"private\":\r\n                return \"private\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    })();\r\n\r\n    const handleToggleMenu = (menu) => setOpen((prev) => ({ ...prev, [menu]: !prev[menu] }));\r\n\r\n    const handlePageChange = (path) => {\r\n        dispatch(reset());\r\n        return history.push(path);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isEmpty(menuNum)) {\r\n            let initMenu = {};\r\n            MenuData[menuType]?.map((group) => {\r\n                group?.siblings?.map((menus) => {\r\n                    if (menus.subMenus) {\r\n                        initMenu[menus.menu] = menus.subMenus.some((menu) => menu.num === Number(menuNum));\r\n                    } else {\r\n                        initMenu[menus.menu] = false;\r\n                    }\r\n                    return initMenu;\r\n                });\r\n                return initMenu;\r\n            });\r\n            setOpen(initMenu);\r\n        }\r\n    }, [menuNum, menuType]);\r\n\r\n    return (\r\n        <Box component=\"nav\" sx={{ display: \"flex\" }} aria-label=\"mailbox folders\">\r\n            <Drawer className={classes.drawer} classes={{ paper: classes.drawerPaper }} variant=\"permanent\" anchor=\"left\">\r\n                <PerfectScrollbar component=\"div\" className={classes.scrollHeight}>\r\n                    {MenuData[menuType]?.map((group, index) => (\r\n                        <React.Fragment key={`navigation-${index}`}>\r\n                            <List\r\n                                component=\"div\"\r\n                                className={group.menu.some((menuName) => open[menuName]) ? classes.collapsedList : classes.list}\r\n                                subheader={\r\n                                    <>\r\n                                        {group.setCaption ? (\r\n                                            <Typography className={classes.caption} variant=\"caption\" display=\"block\">\r\n                                                {group.caption}\r\n                                            </Typography>\r\n                                        ) : (\r\n                                            <></>\r\n                                        )}\r\n                                    </>\r\n                                }>\r\n                                {group?.siblings?.map((menu, index) => (\r\n                                    <React.Fragment key={`collapsed-menu-${index}`}>\r\n                                        {menu?.subMenus ? (\r\n                                            <React.Fragment key={`list-${index}`}>\r\n                                                <ListItem\r\n                                                    button\r\n                                                    disabled={menu.disabled}\r\n                                                    selected={menu.subMenus.some((subMenu) => subMenu.num === Number(menuNum))}\r\n                                                    className={classes.listItem}\r\n                                                    onClick={() => handleToggleMenu(menu.menu)}>\r\n                                                    <ListItemIcon>{menu.icon}</ListItemIcon>\r\n                                                    <ListItemText\r\n                                                        primary={\r\n                                                            <Typography component=\"p\" variant=\"h5\">\r\n                                                                {menu.menuTitle}\r\n                                                            </Typography>\r\n                                                        }\r\n                                                    />\r\n                                                    {open[menu.menu] ? <ExpandLess /> : <ExpandMore />}\r\n                                                </ListItem>\r\n                                                <Collapse in={open[menu.menu]} unmountOnExit>\r\n                                                    <List component=\"div\">\r\n                                                        {menu.subMenus.map((subMenu, index) => (\r\n                                                            <ListItem\r\n                                                                button\r\n                                                                key={`sub-menu-${index}`}\r\n                                                                disabled={subMenu.disabled}\r\n                                                                selected={menuNum === subMenu.num}\r\n                                                                className={classes.listItem}\r\n                                                                sx={{ borderRadius: `12px`, paddingLeft: `46px` }}\r\n                                                                onClick={() => handlePageChange(subMenu.path)}>\r\n                                                                <ListItemIcon>{subMenu.icon}</ListItemIcon>\r\n                                                                <ListItemText\r\n                                                                    primary={\r\n                                                                        <Typography component=\"p\" variant=\"h5\">\r\n                                                                            {subMenu.menuTitle}\r\n                                                                        </Typography>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                        ))}\r\n                                                    </List>\r\n                                                </Collapse>\r\n                                            </React.Fragment>\r\n                                        ) : (\r\n                                            <ListItem button disabled={menu.disabled} className={classes.listItem} selected={menuNum === menu.num} onClick={() => handlePageChange(menu.path)}>\r\n                                                <ListItemIcon>{menu.icon}</ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        <Typography component=\"p\" variant=\"h5\">\r\n                                                            {menu.menuTitle}\r\n                                                        </Typography>\r\n                                                    }\r\n                                                />\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </List>\r\n                            <Divider className={classes.divider} />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </PerfectScrollbar>\r\n                <Box className={classes.copyright}>\r\n                    <p>\r\n                        Copyright © BlockOdyssey Corp. <br />\r\n                        All rights reserved.\r\n                    </p>\r\n                </Box>\r\n            </Drawer>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuSelector } from \"slices/menuSlice\";\nimport { setLogOut } from \"slices/loginSlice\";\n\nimport { makeStyles } from \"@mui/styles\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Box from \"@mui/material/Box\";\nimport ButtonBase from \"@mui/material/ButtonBase\";\nimport Typography from \"@mui/material/Typography\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\n\nimport Popover from \"material-ui-popup-state/HoverPopover\";\nimport PopupState, { bindHover, bindPopover } from \"material-ui-popup-state\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(({ palette }) => ({\n    root: {\n        display: \"flex\"\n    },\n    toolbar: {\n        paddingLeft: 0\n    },\n    dense: {\n        minHeight: 80\n    },\n    appBar: {\n        width: \"100%\",\n        height: 80,\n        minWidth: 1175,\n        top: 0,\n        left: 0,\n        zIndex: 10,\n        color: palette.text[\"primary\"],\n        backgroundColor: palette.neutral[\"white\"]\n    },\n    title: {\n        flexGrow: 1\n    },\n    logoContainer: {\n        height: \"100%\",\n        width: drawerWidth,\n        marginRight: \"24px\",\n        backgroundColor: palette.neutral[\"main\"]\n    },\n    logoButton: {\n        height: \"100%\",\n        fontSize: 48,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: palette.neutral[\"white\"]\n    },\n    userButton: {\n        border: \"none\",\n        boxShadow: \"unset\",\n        backgroundColor: palette.neutral[\"white\"],\n        \"&:hover\": {\n            border: \"none\",\n            boxShadow: \"unset\",\n            backgroundColor: palette.neutral[\"white\"]\n        },\n        \"& svg\": {\n            width: 30,\n            height: 30,\n            color: palette.primary[\"main\"]\n        }\n    },\n    userImage: {\n        marginRight: 9.5\n    },\n    listItem: {\n        width: 140,\n        height: 32,\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingRight: 30,\n        paddingleft: 0,\n        textAlign: \"right\",\n        borderBottom: `1px solid ${palette.border[\"opacity0.1\"]}`,\n        \"&:last-child\": {\n            borderBottom: \"none\"\n        }\n    }\n}));\n\nfunction Header(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { menuTitle } = useSelector(menuSelector);\n\n    const handlePageChange = (path) => props.history.push(path);\n\n    const handleLogOut = () => dispatch(setLogOut());\n\n    return (\n        <AppBar position=\"fixed\" elevation={0} className={classes.appBar}>\n            <Toolbar variant=\"dense\" className={classes.toolbar} classes={{ dense: classes.dense }}>\n                <Box component=\"div\" className={classes.logoContainer}>\n                    <ButtonBase disableRipple className={classes.logoButton} component={Link} to=\"/\">\n                        {/* <img src={`${LogoImage}`} alt=\"logo\" /> */}\n                        ADMIN\n                    </ButtonBase>\n                </Box>\n                <Typography component=\"h2\" variant=\"h2\" color=\"inherit\" className={classes.title}>\n                    {menuTitle}\n                </Typography>\n                <PopupState variant=\"popover\" popupId=\"filterPopover\">\n                    {(popupState) => (\n                        <div>\n                            <Button startIcon={<AccountCircleIcon />} {...bindHover(popupState)} variant=\"contained\" className={classes.userButton}>\n                                <Typography variant=\"button\" display=\"block\">\n                                    블록오디세이님\n                                </Typography>\n                            </Button>\n                            <Popover\n                                {...bindPopover(popupState)}\n                                className={classes.popover}\n                                classes={{\n                                    paper: classes.paper\n                                }}\n                                anchorOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"center\"\n                                }}\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"center\"\n                                }}\n                                disableRestoreFocus>\n                                <List component=\"nav\" aria-label=\"admin menu\">\n                                    <ListItem classes={{ root: classes.listItem }} button onClick={() => handlePageChange(\"/password\")}>\n                                        <ListItemText primary=\"비밀번호 수정\" />\n                                    </ListItem>\n                                    <ListItem classes={{ root: classes.listItem }} button onClick={() => handlePageChange(\"/info\")}>\n                                        <ListItemText primary=\"정보 수정\" />\n                                    </ListItem>\n                                    <ListItem classes={{ root: classes.listItem }} button onClick={handleLogOut}>\n                                        <ListItemText primary=\"로그아웃\" />\n                                    </ListItem>\n                                </List>\n                            </Popover>\n                        </div>\n                    )}\n                </PopupState>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default withRouter(Header);\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n    root: {\n        minHeight: \"100%\",\n        display: \"flex\"\n    },\n    main: {\n        flexGrow: 1,\n        width: \"calc(100% - 240px)\",\n        height: \"calc(100vh - 80px)\",\n        marginTop: 80\n    },\n    container: {\n        minWidth: 1145,\n        width: \"calc(100% - 40px)\",\n        margin: 20,\n        padding: \"0 0 20px\",\n        borderRadius: 4\n    },\n    paper: {\n        width: \"100%\",\n        height: \"100%\",\n        paddingBottom: 30,\n        backgroundColor: palette.neutral[\"white\"]\n    }\n}));\n\nexport default useStyles;\n","import React from \"react\";\n\nimport Menu from \"layout/sidebar\";\nimport Header from \"layout/Header\";\n\nimport layoutStyles from \"styles/customize/layout/LayoutStyles\";\nimport Container from \"@mui/material/Container\";\n\nexport default function withContainer(Component) {\n    const classes = layoutStyles();\n\n    const BaseContainer = () => {\n        return (\n            <div className={classes.root}>\n                <Header />\n                <Menu />\n                <main className={classes.main}>\n                    <Container maxWidth={false} className={classes.container}>\n                        <Component />\n                    </Container>\n                </main>\n            </div>\n        );\n    };\n\n    return BaseContainer;\n}\n","import React from \"react\";\n\nimport Menu from \"layout/sidebar\";\nimport Header from \"layout/Header\";\n\nimport layoutStyles from \"styles/customize/layout/LayoutStyles\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\n\nexport default function withPageContainer(Component) {\n    const classes = layoutStyles();\n\n    const BaseContainer = () => {\n        return (\n            <div className={classes.root}>\n                <Header />\n                <Menu />\n                <main className={classes.main}>\n                    <Container maxWidth={false} className={classes.container}>\n                        <Paper className={classes.paper} elevation={0}>\n                            <Component />\n                        </Paper>\n                    </Container>\n                </main>\n            </div>\n        );\n    };\n\n    return BaseContainer;\n}\n","import axios from \"axios\";\nconst BASE_URL = `${process.env.REACT_APP_BASE_URL}`;\n\nconst returnData = (res) => res.data;\n\nconst catchError = (err) => Promise.reject({ statusCode: err.response?.status || 500, message: err.response?.status ? err.message : \"네트워크 에러\" });\n\nexport const getData = async (url, params) => {\n    const instance = axios.create({\n        baseURL: `${BASE_URL}`,\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json; charset=UTF-8;\",\n            token: localStorage.getItem(\"token\")\n        },\n        params: params || {}\n    });\n\n    return await instance.get(`${url}`).then(returnData).catch(catchError);\n};\n\nexport const postData = async (url, fileYn, body) => {\n    const instance = axios.create({\n        baseURL: `${BASE_URL}`,\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": fileYn ? \"multipart/form-data\" : \"application/json; charset=UTF-8;\",\n            token: localStorage.getItem(\"token\")\n        }\n    });\n\n    return await instance.post(`${url}`, body).then(returnData).catch(catchError);\n};\n\nexport const putData = async (url, fileYn, body) => {\n    const instance = axios.create({\n        baseURL: `${BASE_URL}`,\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": fileYn ? \"multipart/form-data\" : \"application/json; charset=UTF-8;\",\n            token: localStorage.getItem(\"token\")\n        }\n    });\n\n    return await instance.put(`${url}`, body).then(returnData).catch(catchError);\n};\n\nexport const deleteData = async (url, body) => {\n    const instance = axios.create({\n        baseURL: `${BASE_URL}`,\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json; charset=UTF-8;\",\n            token: localStorage.getItem(\"token\")\n        }\n    });\n\n    return await instance.delete(`${url}`, { data: body }).then(returnData).catch(catchError);\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { menuSelector, setMenu } from \"slices/menuSlice\";\n\nimport _ from \"lodash\";\n\nconst useMenu = ({ page, menu, menuTitle, menuNum }) => {\n    const dispatch = useDispatch();\n    const menuState = useSelector(menuSelector);\n\n    useEffect(() => {\n        if (!_.isEqual(menuState, { menu, menuTitle, menuNum })) {\n            dispatch(setMenu({ menu, menuTitle, menuNum }));\n        }\n    }, [dispatch, menuState, menu, menuTitle, menuNum]);\n\n    return page;\n};\n\nexport default useMenu;\n","import { useHistory, useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst usePageMove = ({ baseUrl }) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { idx } = useParams();\r\n\r\n    const handlePageClick = (url, index) => {\r\n        let pathInfo = {};\r\n        const pathname = baseUrl === \"/\" ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\r\n        const param = index || idx;\r\n\r\n        if (url === \"list\") {\r\n            pathInfo = { pathname: `${baseUrl}`, search: location.search };\r\n        } else if (url === \"detail\") {\r\n            pathInfo = { pathname: `${pathname}/${param}`, search: location.search };\r\n        } else if (url === \"upload\") {\r\n            pathInfo = { pathname: `${pathname}` };\r\n        } else if (url === \"edit\") {\r\n            pathInfo = { pathname: `${pathname}/${param}`, search: location.search };\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        return history.push(pathInfo);\r\n    };\r\n\r\n    return handlePageClick;\r\n};\r\n\r\nexport default usePageMove;\r\n","import { useHistory, useLocation } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { searchSelector } from \"slices/searchSlice\";\r\nimport { getCurrentSearchParams, queryToString } from \"utils/common\";\r\n\r\nconst useSearch = ({ params }) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const searchStates = useSelector(searchSelector);\r\n\r\n    // 검색하기 (location.search 값 변경)\r\n    const handleSearch = (searchItems) => {\r\n        const searchParams = getCurrentSearchParams(searchStates, params);\r\n        return history.push({\r\n            pathname: location.pathname,\r\n            search: queryToString({ ...searchParams, ...searchItems })\r\n        });\r\n    };\r\n\r\n    return handleSearch;\r\n};\r\n\r\nexport default useSearch;\r\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\nimport { isEmpty, queryToObject } from \"utils/common\";\n\nconst useSearchParams = (searchParams, chartSearchParams) => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const searchStates = useSelector(searchSelector);\n\n    const [newParams, setNewParams] = useState(null);\n\n    const handleSearchParams = useCallback(() => {\n        let params = {}; // API에 보낼 params\n        let newObject = {}; // redux store에 보낼 값들\n        const search = queryToObject(location.search);\n\n        // 페이지 새로고침 / 검색 조회 등을 할 경우 location.search와 redux store에 있는 값들이 다름\n        // 1. location.search에 있는 params와 redux store에 있는 search state를 비교\n        // 2. 만약 redux store에 있는 search state와 location.search가 다르다면\n        // 3. dispatch를 해서 상태가 동일하도록\n        Object.keys(searchParams).forEach((key) => {\n            const reduxStateName = searchParams[key]; // searchParams[key] : searchSlice에 있는 search state의 key\n            const currentReduxState = searchStates[reduxStateName]; // searchStates[searchParams[key]] : redux store에 있는 search state의 value\n            const currentSearchParam = search[key] || search[chartSearchParams[reduxStateName]]; // search[key] || search[chartSearchParams[reduxStateName]] : location.search 값\n\n            // location.search에 값이 있다면\n            if (!isEmpty(currentSearchParam)) {\n                // int값으로 들어가야 에러가 발생안함\n                if (key === \"pageNumber\" || key === \"pageShow\") {\n                    params[key] = parseInt(currentSearchParam);\n\n                    if (parseInt(currentReduxState) !== parseInt(currentSearchParam)) {\n                        Object.assign(newObject, { [reduxStateName]: parseInt(currentSearchParam) });\n                    }\n                } else if (currentReduxState !== currentSearchParam) {\n                    // string 값들\n                    params[key] = currentSearchParam;\n                    Object.assign(newObject, { [reduxStateName]: currentSearchParam });\n                } else {\n                    // location.search와 redux state가 동일한 값들\n                    params[key] = currentReduxState || null;\n                }\n            } else {\n                // location.search에 없는 값들\n                params[key] = currentReduxState || null;\n            }\n        });\n\n        // API로 보낼때 page 번호가 0부터 시작하도록\n        // location.search에는 page 번호가 1부터 시작\n        if (params?.pageNumber) {\n            params = { ...params, pageNumber: params.pageNumber > 1 ? params.pageNumber - 1 : 0 };\n        }\n\n        // redux store로 값을 dispatch해야할 때 실행되도록\n        if (Object.keys(newObject).length > 0) {\n            dispatch(setSearchFilters(newObject));\n        }\n\n        setNewParams(params);\n    }, [dispatch, searchParams, chartSearchParams, searchStates, location]);\n\n    useEffect(() => {\n        handleSearchParams();\n    }, [handleSearchParams]);\n\n    return newParams;\n};\n\nexport default useSearchParams;\n","import * as yup from \"yup\";\n\nconst dailyFormat = \"yyyy/MM/dd\";\nconst monthlyFormat = \"yyyy/MM\";\n\nconst searchComponent = {\n    Dashboard: {\n        date: true,\n        dateSelect: false,\n        radio: true,\n        selects: true,\n        searchType: true,\n        searchKeyword: true\n    },\n    Example: {\n        date: false,\n        radio: false,\n        selects: false,\n        searchType: false,\n        searchKeyword: false\n    },\n    SearchComponent: {\n        date: true,\n        dateSelect: true,\n        radio: true,\n        selects: true,\n        searchType: true,\n        searchKeyword: true\n    },\n    Chart: {\n        date: false,\n        radio: false,\n        selects: false,\n        searchType: false,\n        searchKeyword: false\n    },\n    ChartTable: {\n        date: false,\n        radio: false,\n        selects: false,\n        searchType: false,\n        searchKeyword: false\n    }\n};\n\nconst searchCaption = { gender: \"성별\", useYn: \"판매여부\", dessert: \"디저트\", sweets: \"캔디\", food: \"음식\", drink: \"음료\" };\n\nconst searchType = {\n    Dashboard: [\"gender\", \"useYn\", \"dessert\", \"sweets\", \"food\", \"drink\"]\n};\n\nconst searchRadioRow = {\n    Dashboard: [[\"sweets\", \"food\"], [\"drink\"]]\n};\n\nconst searchSelect = {\n    Dashboard: [[\"gender\", \"useYn\"], [\"dessert\"]]\n};\n\nconst searchOption = {\n    gender: [\n        { value: \"\", label: \"전체\" },\n        { value: \"M\", label: \"M\" },\n        { value: \"F\", label: \"F\" }\n    ],\n    useYn: [\n        { value: \"\", label: \"전체\" },\n        { value: \"판매\", label: \"Y\" },\n        { value: \"미판매\", label: \"N\" }\n    ],\n    dessert: [\n        { value: \"\", label: \"전체\" },\n        { value: \"cupcake\", label: \"컵케이크\" },\n        { value: \"cake\", label: \"케이크\" }\n    ],\n    sweets: [\n        { value: \"\", label: \"전체\" },\n        { value: \"candy\", label: \"캔디\" },\n        { value: \"chocolate\", label: \"초콜릿\" }\n    ],\n    food: [\n        { value: \"\", label: \"전체\" },\n        { value: \"hamburger\", label: \"햄버거\" },\n        { value: \"fried chicken\", label: \"치킨\" }\n    ],\n    drink: [\n        { value: \"\", label: \"전체\" },\n        { value: \"tea\", label: \"티\" },\n        { value: \"water\", label: \"물\" }\n    ],\n    searchType: {\n        Dashboard: [\n            { value: \"\", label: \"전체\" },\n            { value: \"id\", label: \"아이디\" },\n            { value: \"name\", label: \"이름\" },\n            { value: \"tel\", label: \"연락처\" }\n        ],\n        SearchComponent: [\n            { value: \"\", label: \"전체\" },\n            { value: \"id\", label: \"아이디\" },\n            { value: \"name\", label: \"이름\" },\n            { value: \"tel\", label: \"연락처\" }\n        ]\n    },\n    sort: {\n        Dashboard: [\n            { value: \"latest\", label: \"최신 등록순\" },\n            { value: \"oldest\", label: \"오래된 등록순\" }\n        ],\n        Example: [\n            { value: \"latest\", label: \"최신 등록순\" },\n            { value: \"oldest\", label: \"오래된 등록순\" }\n        ]\n    },\n    term: [\n        { value: \"daily\", label: \"일간\" },\n        { value: \"monthly\", label: \"월간\" }\n    ],\n    dateType: [\n        { value: \"regDate\", label: \"등록일\" },\n        { value: \"modDate\", label: \"수정일\" }\n    ]\n};\n\nconst searchParams = {\n    Dashboard: {\n        startDate: \"startDate\",\n        endDate: \"endDate\",\n        gender: \"gender\",\n        useYn: \"useYn\",\n        dessert: \"dessert\",\n        food: \"food\",\n        sweets: \"sweets\",\n        drink: \"drink\",\n        searchType: \"searchType\",\n        searchKeyword: \"searchKeyword\",\n        sort: \"sort\",\n        pageNumber: \"pageNumber\",\n        pageShow: \"pageShow\"\n    },\n    Example: {\n        term: \"term\",\n        startDate: \"startDate\",\n        endDate: \"endDate\",\n        pageNumber: \"pageNumber\",\n        pageShow: \"pageShow\"\n    },\n    Chart: {\n        term: \"term\",\n        startDate: \"startDate\",\n        endDate: \"endDate\"\n    },\n    ChartTable: {\n        food: {\n            term: \"foodTerm\",\n            startDate: \"foodStartDate\",\n            endDate: \"foodEndDate\"\n        },\n        dessert: {\n            term: \"dessertTerm\",\n            startDate: \"dessertStartDate\",\n            endDate: \"dessertEndDate\"\n        }\n    }\n};\n\nconst chartSearchParams = {\n    foodTerm: \"foodTerm\",\n    foodStartDate: \"foodStartDate\",\n    foodEndDate: \"foodEndDate\",\n    dessertTerm: \"dessertTerm\",\n    dessertStartDate: \"dessertStartDate\",\n    dessertEndDate: \"dessertEndDate\"\n};\n\nconst headCell = {\n    Dashboard: [\n        { id: \"name\", label: \"디저트\" },\n        { id: \"calories\", label: \"칼로리\" },\n        { id: \"fat\", label: \"지방\" },\n        { id: \"carbs\", label: \"탄수화물\" },\n        { id: \"protein\", label: \"프로틴\" },\n        { id: \"useYn\", label: \"사용여부\" },\n        { id: \"viewYn\", label: \"메인노출\" },\n        { id: \"sortOrder\", label: \"노출순서\" },\n        { id: \"status\", label: \"관리\" }\n    ],\n    Example: [\n        { id: \"idx\", label: \"번호\" },\n        { id: \"name\", label: \"디저트\" },\n        { id: \"calories\", label: \"칼로리\" },\n        { id: \"fat\", label: \"지방\" },\n        { id: \"carbs\", label: \"탄수화물\" },\n        { id: \"protein\", label: \"프로틴\" },\n        { id: \"regDate\", label: \"등록일\" }\n    ],\n    ExampleDetail: [\n        { id: \"name\", label: \"디저트\" },\n        { id: \"calories\", label: \"칼로리\" },\n        { id: \"fat\", label: \"지방\" },\n        { id: \"carbs\", label: \"탄수화물\" },\n        { id: \"protein\", label: \"프로틴\" },\n        { id: \"useYn\", label: \"사용여부\" },\n        { id: \"viewYn\", label: \"메인노출\" }\n    ],\n    ChartTable: Array.from(Array(50)).map((_, index) => {\n        return { id: `caloreis${index}`, label: `Day ${parseInt(index) + 1}` };\n    })\n};\n\nconst tableSelectOptions = {\n    viewYn: [\n        { label: \"노출\", value: \"Y\" },\n        { label: \"미노출\", value: \"N\" }\n    ],\n    useYn: [\n        { label: \"사용\", value: \"Y\" },\n        { label: \"미사용\", value: \"N\" }\n    ]\n};\n\nconst buttons = {\n    addButton: { Dashboard: false, Example: true },\n    addTopButton: { Dashboard: true, Example: false },\n    deleteButton: { Dashboard: true, Example: false },\n    excelButton: { Dashboard: true, Example: false }\n};\n\nconst schema = {\n    Dashboard: yup.object().shape({\n        category: yup.object().shape({\n            value: yup.string().required()\n        }),\n        name: yup.string().required(),\n        description: yup.string().required(),\n        quantity: yup.number().min(0).positive().required(),\n        useYn: yup.string().required()\n    }),\n    ChangeInfo: yup.object().shape({\n        name: yup.string().required(),\n        email: yup.string().required(),\n        phone: yup.string().required(),\n        image: yup\n            .mixed()\n            .required()\n            .test(\"image\", \"이미지를 선택해주세요\", (value) => {\n                return value.length > 0;\n            })\n    })\n};\n\n// 샘플 데이터\nconst sampleRowData = [\n    { idx: 1, name: \"Cheese Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 2, name: \"Strawberry Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 3, name: \"Chocolate Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 4, name: \"Peanut Butter Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 5, name: \"Banana Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    {\n        idx: 6,\n        name: \"White Chocolate Cupcake\",\n        calories: 1111,\n        fat: 5.5,\n        carbs: 144,\n        protein: 1.2,\n        useYn: \"Y\",\n        useYnText: \"사용\",\n        viewYn: \"Y\",\n        viewYnText: \"노출\",\n        sortOrder: 1,\n        regdate: \"2020-02-02\"\n    },\n    { idx: 7, name: \"Fruits Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" }\n];\n\n// 샘플 데이터\nconst sampleChartData = [\n    { idx: 1, name: \"Cheese Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 2, name: \"Strawberry Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 3, name: \"Chocolate Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" },\n    { idx: 4, name: \"Peanut Butter Cupcake\", calories: 1111, fat: 5.5, carbs: 144, protein: 1.2, useYn: \"Y\", useYnText: \"사용\", viewYn: \"Y\", viewYnText: \"노출\", sortOrder: 1, regdate: \"2020-02-02\" }\n];\n\n// 샘플 데이터\nconst sampleDetailData = [\n    { idx: 1, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" },\n    { idx: 2, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" },\n    { idx: 3, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" },\n    { idx: 4, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" },\n    { idx: 5, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" },\n    { idx: 6, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" },\n    { idx: 7, name: \"Cupcake\", calories: 305, fat: 3.7, carbs: 67, protein: 4.3, useYn: \"사용\", viewYn: \"노출\" }\n];\n\n// 샘플 데이터\nconst sampleData = {\n    idx: 1,\n    name: \"Strawberry Chocolate Cupcake\",\n    category: \"cupcake\",\n    calories: 305,\n    fat: 3.7,\n    carbs: 67,\n    protein: 4.3,\n    quantity: 7,\n    color: \"white\",\n    description: \"This is a Strawberry Chocolate Cupcake.\",\n    ingredients: \"chocolate, strawberry, cheese\",\n    useYn: \"Y\",\n    useYnText: \"사용\",\n    viewYn: \"Y\",\n    viewYnText: \"노출\",\n    regDate: \"2021-08-31\"\n};\n\nexport {\n    dailyFormat,\n    monthlyFormat,\n    searchParams,\n    chartSearchParams,\n    tableSelectOptions,\n    searchComponent,\n    searchRadioRow,\n    searchSelect,\n    searchType,\n    searchOption,\n    searchCaption,\n    buttons,\n    headCell,\n    sampleRowData,\n    sampleChartData,\n    sampleDetailData,\n    sampleData,\n    schema\n};\n","import { useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getData } from \"api\";\r\n\r\n// import useMessage from \"hooks/useMessage\";\r\nimport useSearchParams from \"hooks/useSearchParams\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport { chartSearchParams, searchParams } from \"components/Data\";\r\n\r\nconst usePrevious = (value) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n\r\n    return ref.current;\r\n};\r\n\r\nconst useGetList = ({ menu, url, type }) => {\r\n    // 검색 설정하기 (Search Params)\r\n    const params = useSearchParams(menu === \"ChartTable\" ? searchParams[menu][type] : searchParams[menu], chartSearchParams);\r\n\r\n    // Previous Search Params\r\n    const prevParams = usePrevious(params);\r\n\r\n    // const handleMessage = useMessage();\r\n\r\n    // API 호출\r\n    const { isError, error, ...rest } = useQuery([menu, { ...params }], () => getData(url, params), {\r\n        enabled: params && !_.isEqual(prevParams, params) ? true : false\r\n        // onError: (error) => handleMessage({ type: \"message\", ...error })\r\n    });\r\n\r\n    return { params, ...rest };\r\n};\r\n\r\nexport default useGetList;\r\n","import { useQueries } from \"react-query\";\r\nimport { getData } from \"api\";\r\n\r\nconst useGetLists = ({ apiList }) => {\r\n    return useQueries(\r\n        apiList.map((api) => {\r\n            return { queryKey: [api.key], queryFn: () => getData(api.url) };\r\n        })\r\n    );\r\n};\r\n\r\nexport default useGetLists;\r\n","import { useQuery } from \"react-query\";\r\nimport { getData } from \"api\";\r\nimport useMessage from \"hooks/useMessage\";\r\nimport { getMessageText } from \"utils/common\";\r\n\r\nconst useExcelDownload = ({ url, params }) => {\r\n    const handleMessage = useMessage();\r\n\r\n    // 엑셀 데이터 API\r\n    const {\r\n        isLoading,\r\n        data,\r\n        refetch: onExcelClick\r\n    } = useQuery([\"excel\"], () => getData(url, params), {\r\n        enabled: false,\r\n        onSuccess: () => {\r\n            try {\r\n                const event = new MouseEvent(\"click\", {\r\n                    view: window,\r\n                    bubbles: true,\r\n                    cancelable: true\r\n                });\r\n                document.querySelector(\".file-download\").dispatchEvent(event);\r\n            } catch (error) {\r\n                handleMessage({ type: \"message\", message: getMessageText(\"excel download\") });\r\n            }\r\n        },\r\n        onError: () => handleMessage({ type: \"message\", message: getMessageText(\"excel download\") })\r\n    });\r\n\r\n    return [{ excelLoading: isLoading, excelList: data }, onExcelClick];\r\n};\r\n\r\nexport default useExcelDownload;\r\n","export const typography = {\n    fontFamily: [\"Noto Sans KR\", \"sans-serif\", \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\"].join(\",\"),\n    color: \"#333333\",\n    fontSize: 12,\n    h1: {\n        fontWeight: 500,\n        fontSize: 35,\n        letterSpacing: \"-0.24px\"\n    },\n    h2: {\n        fontWeight: 600,\n        fontSize: 18,\n        lineHeight: \"27px\",\n        letterSpacing: \"-1.26px\"\n    },\n    h3: {\n        fontWeight: 600,\n        fontSize: 15,\n        lineHeight: \"27px\",\n        letterSpacing: \"-1.26px\"\n    },\n    h4: {\n        fontWeight: 400,\n        fontSize: 12,\n        lineHeight: \"27px\",\n        letterSpacing: 0\n    },\n    h5: {\n        fontWeight: 500,\n        fontSize: 16,\n        letterSpacing: \"-0.05px\"\n    },\n    h6: {\n        fontWeight: 500,\n        fontSize: 14,\n        letterSpacing: \"-0.05px\"\n    },\n    overline: {\n        fontWeight: 500\n    },\n    caption: {\n        fontWeight: 500\n    },\n    button: {\n        fontWeight: 400,\n        fontSize: 13,\n        lineHeight: \"19px\",\n        letterSpacing: 0,\n        color: \"#1B253A\"\n    },\n    body1: {\n        fontSize: 12,\n        lineHeight: \"20px\",\n        letterSpacing: \"-0.24px\",\n        fontWeight: 400\n    },\n    body2: {\n        fontSize: 12,\n        lineHeight: \"18px\",\n        letterSpacing: \"-0.6px\"\n    }\n};\n","import { createTheme } from \"@mui/material/styles\";\nimport { typography } from \"styles/theme/typography\";\nimport { palette } from \"styles/theme/palette\";\n\nconst theme = createTheme({\n    palette,\n    typography,\n    components: {\n        MuiTextField: {\n            styleOverrides: {\n                root: {\n                    width: \"100%\",\n                    height: 40\n                }\n            }\n        },\n        MuiInputBase: {\n            styleOverrides: {\n                root: {\n                    lineHeight: \"18px\"\n                }\n            }\n        },\n        MuiOutlinedInput: {\n            styleOverrides: {\n                root: {\n                    height: \"100%\",\n                    \"&&.Mui-focused fieldset\": {\n                        borderColor: palette.border[\"main\"],\n                        borderWidth: 1\n                    },\n                    \"&&:hover fieldset\": {\n                        borderColor: palette.border[\"main\"],\n                        borderWidth: 1\n                    }\n                },\n                notchedOutline: {\n                    borderColor: palette.border[\"main\"]\n                }\n            }\n        },\n        MuiButton: {\n            styleOverrides: {\n                root: {\n                    transition: \"unset\"\n                },\n                contained: {\n                    width: 64,\n                    height: 40,\n                    backgroundColor: palette.neutral[\"dark\"],\n                    boxShadow: \"unset\",\n                    color: palette.neutral[\"white\"],\n                    fontWeight: 500,\n                    \"&:hover\": {\n                        backgroundColor: palette.neutral[\"dark\"],\n                        boxShadow: \"unset\"\n                    },\n                    \"&:active\": {\n                        boxShadow: \"unset\"\n                    }\n                },\n                sizeLarge: {\n                    minWidth: 100,\n                    width: \"auto\",\n                    padding: 10\n                }\n            }\n        },\n        MuiSelect: {\n            styleOverrides: {\n                select: {\n                    minWidth: 84,\n                    padding: \"11px 10px\",\n                    borderRadius: 4,\n                    backgroundColor: palette.neutral[\"white\"],\n                    \"&:focus\": {\n                        borderRadius: 4,\n                        backgroundColor: palette.neutral[\"white\"]\n                    }\n                }\n            }\n        },\n        MuiMenuItem: {\n            styleOverrides: {\n                root: {\n                    paddingTop: 10,\n                    paddingBottom: 10\n                }\n            }\n        },\n        MuiList: {\n            styleOverrides: {\n                padding: {\n                    paddingTop: 0,\n                    paddingBottom: 0\n                }\n            }\n        },\n        MuiListItem: {\n            styleOverrides: {\n                root: {\n                    \"&$selected\": {\n                        backgroundColor: palette.primary[\"opacity0.2\"]\n                    },\n                    \"&$selected:hover\": {\n                        backgroundColor: palette.primary[\"opacity0.2\"]\n                    }\n                },\n                button: {\n                    \"&:hover\": {\n                        backgroundColor: palette.primary[\"light\"]\n                    }\n                }\n            }\n        }\n    }\n});\n\nexport default theme;\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n    root: {\n        width: \"100%\",\n        marginBottom: 20,\n        backgroundColor: palette.neutral[\"white\"],\n        boxShadow: `0px 2px 5px ${palette.shadow[\"primary\"]}`,\n        borderRadius: 4\n    },\n    termSearchRoot: {\n        width: \"100%\",\n        margin: \"0 auto 20px\",\n        paddingBottom: 20,\n        borderRadius: 4,\n        backgroundColor: palette.neutral[\"white\"],\n        boxShadow: `0px 2px 5px ${palette.shadow[\"primary\"]}`\n    },\n    table: {\n        borderRadius: 4,\n        \"& tr\": {\n            borderTop: `1px solid ${palette.border[\"opacity0.1\"]}`,\n            borderBottom: `1px solid ${palette.border[\"opacity0.1\"]}`\n        },\n        \"& th\": {\n            width: 160,\n            fontWeight: 500,\n            lineHeight: \"48px\",\n            textAlign: \"left\",\n            color: palette.text[\"primary\"]\n        },\n        \"& td\": {\n            padding: 7\n        }\n    },\n    searchSelect: {\n        minWidth: 120,\n        maxWidth: 150,\n        backgroundColor: palette.neutral[\"white\"]\n    },\n    searchTextField: {\n        minWidth: 160,\n        width: 300\n    },\n    spacer: {\n        height: 19\n    },\n    dash: {\n        height: 40,\n        display: \"block\",\n        fontSize: 12,\n        fontWeight: 400,\n        letterSpacing: 0,\n        lineHeight: \"40px\",\n        textAlign: \"center\"\n    },\n    btnContainer: {\n        \"& button\": {\n            marginRight: 5\n        },\n        \"& button:last-of-type\": {\n            width: \"auto\",\n            marginRight: 0\n        }\n    }\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector } from \"react-redux\";\nimport { searchSelector } from \"slices/searchSlice\";\n\nimport useStyles from \"styles/customize/components/SearchStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\n\nimport { searchOption as option } from \"components/Data\";\n\nfunction SearchSelect({ menu, name, value, dataList, handleChange }) {\n    const classes = useStyles();\n    const searchState = useSelector(searchSelector);\n\n    const options = name === \"searchType\" || name === \"sort\" ? option[name][menu] : option[name];\n\n    const selectOptions = dataList?.[name]?.length > 0 ? [...options, ...dataList[name]] : options ? options : [];\n\n    return (\n        <Grid item>\n            <Select\n                className={classes.searchSelect}\n                IconComponent={KeyboardArrowDownIcon}\n                displayEmpty\n                size=\"small\"\n                name={name}\n                value={name === \"searchType\" ? value : searchState[name]}\n                onChange={handleChange}>\n                {selectOptions &&\n                    selectOptions.map((list) => (\n                        <MenuItem key={`key-${list.label}`} value={list.value}>\n                            {list.label}\n                        </MenuItem>\n                    ))}\n            </Select>\n        </Grid>\n    );\n}\n\nSearchSelect.propTypes = {\n    menu: PropTypes.string,\n    dataList: PropTypes.array,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default SearchSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"utils/common\";\n\nimport useStyles from \"styles/customize/components/SearchStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport DatePicker from \"@mui/lab/DatePicker\";\n\nimport { dailyFormat, monthlyFormat } from \"components/Data\";\n\nfunction DateSearchPicker({ caption = false, term, dates, handleDate }) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item>\n                {caption && (\n                    <Typography variant=\"caption\" display=\"block\">\n                        시작일\n                    </Typography>\n                )}\n                <DatePicker\n                    disableCloseOnSelect={false}\n                    mask={term === \"daily\" ? \"____/__/__\" : \"____/__\"}\n                    views={term === \"monthly\" ? [\"month\", \"year\"] : [\"day\"]}\n                    maxDate={new Date()}\n                    inputFormat={term === \"daily\" ? dailyFormat : monthlyFormat}\n                    inputProps={{ \"aria-label\": \"start date\", placeholder: \"\" }}\n                    value={dates[\"startDate\"] || null}\n                    onChange={(e) => handleDate(\"startDate\", format(term, e))}\n                    renderInput={(props) => <TextField size=\"small\" {...props} />}\n                />\n            </Grid>\n            <Grid item>\n                {caption && <div className={classes.spacer}></div>}\n                <span className={classes.dash}>~</span>\n            </Grid>\n            <Grid item>\n                {caption && (\n                    <Typography variant=\"caption\" display=\"block\">\n                        종료일\n                    </Typography>\n                )}\n                <DatePicker\n                    disableCloseOnSelect={false}\n                    mask={term === \"daily\" ? \"____/__/__\" : \"____/__\"}\n                    views={term === \"monthly\" ? [\"month\", \"year\"] : [\"day\"]}\n                    minDate={dates[\"startDate\"] ? new Date(dates[\"startDate\"]) : new Date(\"1900\", \"01\", \"01\")}\n                    inputFormat={term === \"daily\" ? dailyFormat : monthlyFormat}\n                    inputProps={{ \"aria-label\": \"end date\", placeholder: \"\" }}\n                    value={dates[\"endDate\"] || null}\n                    onChange={(e) => handleDate(\"endDate\", format(term, e))}\n                    renderInput={(props) => <TextField size=\"small\" {...props} />}\n                />\n            </Grid>\n        </>\n    );\n}\n\nDateSearchPicker.propTypes = {\n    caption: PropTypes.bool,\n    dates: PropTypes.object,\n    term: PropTypes.string.isRequired,\n    handleDate: PropTypes.func.isRequired\n};\n\nexport default DateSearchPicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useStyles from \"styles/customize/components/SearchStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\n\nimport SearchSelect from \"common/search/SearchSelect\";\nimport DateSearchPicker from \"common/search/DatePicker\";\nimport { dailyFormat, searchComponent, searchOption as option } from \"components/Data\";\n\nfunction DateTermButton({ menu, handleChange, dates, handleDate, handleClick }) {\n    const classes = useStyles();\n    const { dateSelect } = searchComponent[menu];\n\n    return (\n        <>\n            {dateSelect && <SearchSelect name=\"dateType\" options={option[\"dateType\"]} handleChange={handleChange} />}\n            <DateSearchPicker dateFormat={dailyFormat} term=\"daily\" dates={dates} handleDate={handleDate} />\n            <Grid item>\n                <div className={classes.btnContainer}>\n                    <Button variant=\"contained\" onClick={() => handleClick(\"today\")}>\n                        오늘\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => handleClick(\"week\")}>\n                        1주일\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => handleClick(\"month\", 1)}>\n                        1개월\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => handleClick(\"month\", 3)}>\n                        3개월\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => handleClick(\"month\", 6)}>\n                        6개월\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => handleClick(\"reset\")}>\n                        기간 초기화\n                    </Button>\n                </div>\n            </Grid>\n        </>\n    );\n}\n\nDateTermButton.propTypes = {\n    menu: PropTypes.string,\n    handleChange: PropTypes.func,\n    dates: PropTypes.object,\n    handleDate: PropTypes.func.isRequired,\n    handleClick: PropTypes.func.isRequired\n};\n\nexport default DateTermButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector } from \"react-redux\";\nimport { searchSelector } from \"slices/searchSlice\";\n\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Radio from \"@mui/material/Radio\";\n\nimport { searchOption as option } from \"components/Data\";\n\nfunction SearchRadio({ name, dataList, handleChange }) {\n    const searchState = useSelector(searchSelector);\n\n    const radioOptions = dataList?.[name]?.length > 0 ? [...option[name], ...dataList[name]] : option[name] ? option[name] : [];\n\n    return (\n        <RadioGroup row aria-label=\"radio\" name={name} value={searchState[name]} onChange={handleChange}>\n            {radioOptions.map((radio, index) => (\n                <FormControlLabel key={`radio-${index}`} value={radio.value} label={radio.label} control={<Radio color=\"primary\" />} />\n            ))}\n        </RadioGroup>\n    );\n}\n\nSearchRadio.propTypes = {\n    dataList: PropTypes.array,\n    name: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default SearchRadio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useStyles from \"styles/customize/components/SearchStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchSelect from \"common/search/SearchSelect\";\n\nfunction SearchField({ menu, searchType, dataList, handleChange, searchKeyword, handleKeyword }) {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item>\n                <SearchSelect menu={menu} name=\"searchType\" value={searchType} dataList={dataList} handleChange={handleChange} />\n            </Grid>\n            <Grid item>\n                <TextField\n                    InputLabelProps={{ shrink: false }}\n                    inputProps={{ \"aria-label\": \"type search keyword\" }}\n                    className={classes.searchTextField}\n                    id=\"outlined-search-keyword\"\n                    label=\"\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    type=\"search\"\n                    value={searchKeyword}\n                    onChange={handleKeyword}\n                    onKeyDown={handleKeyword}\n                />\n            </Grid>\n        </>\n    );\n}\n\nSearchField.propTypes = {\n    dataList: PropTypes.array,\n    menu: PropTypes.string.isRequired,\n    searchType: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    searchKeyword: PropTypes.string.isRequired,\n    handleKeyword: PropTypes.func.isRequired\n};\n\nexport default SearchField;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\nimport { handleDateClick } from \"utils/common\";\n\nimport theme from \"styles/theme/search\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport useStyles from \"styles/customize/components/SearchStyles\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nimport AddButton from \"common/button/DefaultButton\";\nimport DateTermButton from \"common/search/DateTermButton\";\nimport SearchRadio from \"common/search/SearchRadio\";\nimport SearchSelect from \"common/search/SearchSelect\";\nimport SearchField from \"common/search/SearchField\";\n\nimport { searchComponent as component, searchCaption as caption, searchRadioRow, searchSelect, buttons } from \"components/Data\";\n\nexport default function Search(props) {\n    const { heading, total, dataList, menu, handleSearch, onAddButtonClick } = props;\n    const { date, selects, radio, searchKeyword } = component[menu];\n    const { addTopButton } = buttons;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const searchState = useSelector(searchSelector);\n\n    const [searchType, setSearchType] = useState(\"\");\n    const [keyword, setKeyword] = useState(\"\");\n    const [dates, setDates] = useState({ startDate: null, endDate: null }); // startDate: 시작일, endDate: 종료일\n\n    useEffect(() => {\n        setKeyword(searchState[\"searchKeyword\"] || \"\"); // 검색어 초기화\n        setSearchType(searchState[\"searchType\"] || \"\"); // 검색 조건 초기화\n        setDates((prev) => ({ ...prev, startDate: searchState[\"startDate\"] || null, endDate: searchState[\"endDate\"] || null })); // 시작일, 종료일 초기화\n    }, [searchState]);\n\n    // 기간 검색 버튼\n    const handleClick = (name, months) => {\n        const dates = handleDateClick(name, months); // dates: {startDate, endDate}\n        handleSearchFilter(dates);\n    };\n\n    // 검색 조건 (select) 변경\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === \"searchType\" || name === \"dateType\") {\n            setSearchType(value);\n        } else {\n            handleSearchFilter({ [name]: value });\n        }\n    };\n\n    // 검색 조건 (radio) 변경\n    const handleRadioChange = (e) => handleSearchFilter({ [e.target.name]: e.target.value });\n\n    // 검색 기간 (기간 검색 부분의 Date Picker) 변경\n    const handleDate = (type, date) => setDates((prev) => ({ ...prev, [type]: date }));\n\n    // 검색 키워드 변경\n    const handleKeyword = (e) => {\n        if (e.key === \"Enter\") {\n            handleSubmit();\n        } else {\n            setKeyword(e.target.value);\n        }\n    };\n\n    // 조회 버튼 클릭\n    const handleSubmit = () => handleSearchFilter({ ...dates, searchType, searchKeyword: keyword });\n\n    // 테이블 데이터 정렬하기\n    const handleSort = (e) => handleSearchFilter({ [e.target.name]: e.target.value });\n\n    // 검색하기\n    const handleSearchFilter = (obj) => {\n        // 새로 검색할 경우 페이지 번호 초기화하기\n        if (parseInt(searchState[\"pageNumber\"]) > 1) {\n            Object.assign(obj, { pageNumber: 1 });\n        }\n\n        dispatch(setSearchFilters(obj));\n        handleSearch(obj);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <form className={classes.root} autoComplete=\"off\" noValidate>\n                <Grid sx={{ height: \"70px\", py: 2, px: 2.5 }} container justifyContent=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"h3\" component=\"h3\">\n                        {heading}\n                    </Typography>\n                    {addTopButton[menu] && <AddButton text=\"디저트 등록\" onClick={() => onAddButtonClick(\"upload\")} />}\n                </Grid>\n                <table className={classes.table}>\n                    <colgroup>\n                        <col width=\"10%\"></col>\n                        <col width=\"40%\"></col>\n                        <col width=\"10%\"></col>\n                        <col width=\"40%\"></col>\n                    </colgroup>\n                    <tbody>\n                        {date && (\n                            <tr>\n                                <th>기간검색</th>\n                                <td colSpan={3}>\n                                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\n                                        <DateTermButton menu={menu} handleChange={handleChange} dates={dates} handleDate={handleDate} handleClick={handleClick} />\n                                    </Grid>\n                                </td>\n                            </tr>\n                        )}\n                        {selects &&\n                            searchSelect[menu].map((row, index) => {\n                                return (\n                                    <tr key={`select-${index}`}>\n                                        {row.length > 1 ? (\n                                            row.map((type, index) => {\n                                                return (\n                                                    <React.Fragment key={`search-select-${index}`}>\n                                                        <th>{caption[type]}</th>\n                                                        <td>\n                                                            <SearchSelect name={type} dataList={dataList[type]} handleChange={handleChange} />\n                                                        </td>\n                                                    </React.Fragment>\n                                                );\n                                            })\n                                        ) : (\n                                            <>\n                                                <th>{caption[row[0]]}</th>\n                                                <td colSpan={3}>\n                                                    <SearchSelect name={row[0]} dataList={dataList[row[0]]} handleChange={handleChange} />\n                                                </td>\n                                            </>\n                                        )}\n                                    </tr>\n                                );\n                            })}\n                        {radio &&\n                            searchRadioRow[menu].map((row, index) => (\n                                <tr key={`radio-${index}`}>\n                                    {row.length > 1 ? (\n                                        row.map((type, index) => (\n                                            <React.Fragment key={`search-radio-${index}`}>\n                                                <th>{caption[type]}</th>\n                                                <td>\n                                                    <SearchRadio name={type} dataList={dataList[type]} handleChange={handleRadioChange} />\n                                                </td>\n                                            </React.Fragment>\n                                        ))\n                                    ) : (\n                                        <>\n                                            <th>{caption[row[0]]}</th>\n                                            <td colSpan={3}>\n                                                <SearchRadio name={row[0]} dataList={dataList[row[0]]} handleChange={handleRadioChange} />\n                                            </td>\n                                        </>\n                                    )}\n                                </tr>\n                            ))}\n                        <tr>\n                            <th>검색</th>\n                            <td colSpan={3}>\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\n                                    {searchKeyword && (\n                                        <SearchField\n                                            menu={menu}\n                                            searchType={searchType}\n                                            searchKeyword={keyword}\n                                            dataList={dataList[\"searchType\"]}\n                                            handleChange={handleChange}\n                                            handleKeyword={handleKeyword}\n                                        />\n                                    )}\n                                    <Grid item>\n                                        <Button variant=\"contained\" onClick={handleSubmit}>\n                                            조회\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </form>\n            <Grid sx={{ pb: 2.5 }} container justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"h4\" component=\"h4\">\n                    검색된 데이터 : <strong>{total ? total : 0}</strong>건\n                </Typography>\n                <SearchSelect menu={menu} name=\"sort\" handleChange={handleSort} />\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(({ palette, breakpoints }) => ({\n    paper: {\n        width: \"100%\",\n        borderRadius: 4\n    },\n    table: {\n        minWidth: 750,\n        \"& tr\": {\n            borderTop: `1px solid ${palette.border[\"opacity0.1\"]}`,\n            borderBottom: `1px solid ${palette.border[\"opacity0.1\"]}`\n        }\n    },\n    tableHead: {\n        fontWeight: 500\n    },\n    underlinedContent: {\n        cursor: \"pointer\",\n        textDecoration: \"underline\",\n        color: palette.primary[\"main\"]\n    },\n    toolbar: {\n        [breakpoints.up(\"sm\")]: {\n            paddingLeft: 0\n        }\n    },\n    visuallyHidden: {\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n        height: 1,\n        margin: -1,\n        border: 0,\n        padding: 0,\n        clip: \"rect(0 0 0 0)\",\n        overflow: \"hidden\"\n    }\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { styled } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n    minWidth: 48,\n    height: 32,\n    marginRight: 4,\n    padding: 6,\n    boxShadow: \"unset\",\n    borderRadius: 4,\n    border: `1px solid ${theme.palette.border[\"main\"]}`,\n    fontSize: 12,\n    letterSpacing: \" -0.24px\",\n    color: theme.palette.text[\"primary\"],\n    backgroundColor: theme.palette.neutral[\"white\"],\n    \"&:hover\": {\n        backgroundColor: theme.palette.background[\"light\"],\n        border: `1px solid ${theme.palette.border[\"main\"]}`,\n        boxShadow: \"unset\"\n    }\n}));\n\nfunction TableButton({ disabled = false, pageType = \"\", text, rowIndex, onClick }) {\n    return (\n        <StyledButton variant=\"contained\" disabled={disabled} onClick={() => onClick(pageType, rowIndex)}>\n            {text}\n        </StyledButton>\n    );\n}\n\nTableButton.propTypes = {\n    disabled: PropTypes.bool,\n    pageType: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    rowIndex: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default TableButton;\n","// 참고: https://react-select.com/styles#style-object\nimport { palette } from \"styles/theme/palette\";\n\nconst customStyles = {\n    option: (provided, state) => ({\n        ...provided,\n        height: 32,\n        padding: \"6px 10px\",\n        color: palette.text[\"primary\"],\n        backgroundColor: state.isSelected ? palette.primary[\"main\"] : palette.neutral[\"white\"],\n        \"&:hover\": {\n            backgroundColor: state.isSelected ? palette.primary[\"main\"] : palette.primary[\"opacity0.2\"]\n        }\n    }),\n    container: (provided) => ({\n        ...provided,\n        width: 80,\n        height: 32,\n        fontSize: 12,\n        margin: \"0 auto\",\n        display: \"inline-block\",\n        textAlign: \"center\"\n    }),\n    control: (provided) => ({\n        ...provided,\n        minHeight: 32,\n        height: 32,\n        lineHeight: \"32px\",\n        boxShadow: \"unset\",\n        borderColor: palette.border[\"main\"],\n        \"&:hover\": {\n            borderColor: palette.border[\"main\"]\n        }\n    }),\n    valueContainer: (provided) => ({\n        ...provided,\n        height: 32\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n        width: \"calc(100% - 8px)\"\n    }),\n    dropdownIndicator: (provided) => ({\n        ...provided,\n        width: 24,\n        padding: \"2px 6px 2px 2px\"\n    }),\n    indicatorsContainer: (provided) => ({\n        ...provided,\n        height: 32,\n        padding: 0\n    }),\n    indicatorSeparator: (provided) => ({\n        ...provided,\n        alignSelf: \"unset\"\n    }),\n    menuList: (provided) => ({\n        ...provided,\n        padding: 0\n    })\n};\n\nexport default customStyles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Select from \"react-select\";\nimport styles from \"styles/customize/select/TableSelectStyles\";\n\nfunction TableSelect({ rowIndex, name, value, label, options, handleSelect }) {\n    return (\n        <Select\n            aria-label={`select ${name}`}\n            isClearable={false}\n            isSearchable={false}\n            styles={styles}\n            options={options}\n            name={name}\n            defaultValue={{ value, label }}\n            onChange={(e) => handleSelect(name, e.value, rowIndex)}\n        />\n    );\n}\n\nTableSelect.propTypes = {\n    rowIndex: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    options: PropTypes.array.isRequired,\n    handleSelect: PropTypes.func.isRequired\n};\n\nexport default TableSelect;\n","import { createTheme } from \"@mui/material/styles\";\nimport { typography } from \"styles/theme/typography\";\nimport { palette } from \"styles/theme/palette\";\n\nconst theme = createTheme({\n    palette,\n    typography,\n    components: {\n        MuiTextField: {\n            styleOverrides: {\n                root: {\n                    height: 32,\n                    backgroundColor: palette.neutral[\"white\"]\n                }\n            }\n        },\n        MuiInputBase: {\n            styleOverrides: {\n                root: {\n                    lineHeight: \"18px\"\n                }\n            }\n        },\n        MuiOutlinedInput: {\n            styleOverrides: {\n                root: {\n                    height: \"100%\",\n                    \"&&.Mui-focused fieldset\": {\n                        borderColor: palette.border[\"main\"],\n                        borderWidth: 1\n                    },\n                    \"&&:hover fieldset\": {\n                        borderColor: palette.border[\"main\"],\n                        borderWidth: 1\n                    }\n                },\n                input: {\n                    textAlign: \"left\",\n                    padding: \"10px 8px\"\n                },\n                notchedOutline: {\n                    borderColor: palette.border[\"main\"]\n                }\n            }\n        }\n    }\n});\n\nexport default theme;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport theme from \"styles/theme/textfield\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction TextInput({ index = 0, inputType = \"text\", name, value, handleChange }) {\n    return (\n        <ThemeProvider theme={theme}>\n            <TextField\n                id={`outlined-${name}-${index}`}\n                InputLabelProps={{ shrink: false }}\n                inputProps={{ \"aria-label\": `type ${name}` }}\n                label=\"\"\n                size=\"small\"\n                variant=\"outlined\"\n                type={inputType}\n                name={name}\n                defaultValue={value}\n                onChange={(e) => handleChange(e, index)}\n            />\n        </ThemeProvider>\n    );\n}\n\nTextInput.propTypes = {\n    index: PropTypes.number,\n    inputType: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport Workbook from \"react-excel-workbook\";\nimport { format } from \"utils/common\";\n\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nexport default function ExcelExport({ menu, loading, disabled, excelData, onExcelClick }) {\n    const today = new Date();\n\n    const DashboardExcel = () => (\n        <Workbook filename={`${format(\"excel\", today)}.xlsx`} element={<i className=\"file-download\"></i>}>\n            <Workbook.Sheet data={excelData} name=\"Sheet1\">\n                <Workbook.Column label=\"No\" value={(row) => row[\"idx\"]} />\n                <Workbook.Column label=\"Carbs\" value={(row) => row[\"carbs\"]} />\n                <Workbook.Column label=\"Protein\" value={(row) => row[\"protein\"]} />\n            </Workbook.Sheet>\n        </Workbook>\n    );\n\n    const ExampleExcel = () => (\n        <Workbook filename={`${format(\"excel\", today)}.xlsx`} element={<i className=\"file-download\"></i>}>\n            <Workbook.Sheet data={excelData} name=\"Sheet1\">\n                <Workbook.Column label=\"No\" value={(row) => row[\"idx\"]} />\n                <Workbook.Column label=\"Carbs\" value={(row) => row[\"carbs\"]} />\n                <Workbook.Column label=\"Protein\" value={(row) => row[\"protein\"]} />\n            </Workbook.Sheet>\n        </Workbook>\n    );\n\n    return (\n        <>\n            <Button\n                size=\"large\"\n                color=\"primary\"\n                variant=\"outlined\"\n                disabled={loading || disabled}\n                startIcon={loading ? <CircularProgress color=\"primary\" aria-label=\"loading excel download\" size={12} /> : <></>}\n                onClick={onExcelClick}>\n                엑셀 다운로드\n            </Button>\n            {menu === \"Dashboard\" && <DashboardExcel />}\n            {menu === \"Example\" && <ExampleExcel />}\n        </>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Pagination from \"@mui/material/Pagination\";\n\nimport ExcelDownloadButton from \"common/excel\";\nimport AddButton from \"common/button/DefaultButton\";\nimport DeleteButton from \"common/button/DefaultButton\";\n\nimport { buttons } from \"components/Data\";\n\nfunction TablePaginationActions(props) {\n    const { count, page, rowsPerPage, onPageChange, menu, excelLoading, excelData, text, disabled, onAddClick, onDeleteClick, onExcelClick } = props;\n    const { addButton, excelButton, deleteButton } = buttons;\n\n    // 페이지 번호 변경하기\n    const handleChange = (_, value) => onPageChange(value);\n\n    const totalCount = Math.ceil(count / rowsPerPage);\n\n    return (\n        <>\n            <Grid container>\n                <Pagination\n                    sx={{ width: \"100%\", minWidth: 420, display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n                    color=\"primary\"\n                    shape=\"rounded\"\n                    variant=\"outlined\"\n                    showFirstButton\n                    showLastButton\n                    count={totalCount}\n                    page={page + 1} // 1부터 시작\n                    onChange={handleChange}\n                />\n            </Grid>\n            <Grid container direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"flex-end\">\n                {excelButton[menu] && (\n                    <Grid item>\n                        <ExcelDownloadButton menu={menu} loading={excelLoading} disabled={disabled} excelData={excelData} onExcelClick={onExcelClick} />\n                    </Grid>\n                )}\n                {addButton[menu] && (\n                    <Grid item>\n                        <AddButton color=\"primary\" disabled={disabled} text={text} onClick={onAddClick} />\n                    </Grid>\n                )}\n                {deleteButton[menu] && (\n                    <Grid item>\n                        <DeleteButton color=\"error\" disabled={disabled} text=\"디저트 삭제\" onClick={onDeleteClick} />\n                    </Grid>\n                )}\n            </Grid>\n        </>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    menu: PropTypes.string.isRequired,\n    onAddButtonClick: PropTypes.func,\n    onDeleteButtonClick: PropTypes.func,\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default TablePaginationActions;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\n\nimport useStyles from \"styles/customize/table/SearchTableStyles\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Grid from \"@mui/material/Grid\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport TableButton from \"common/table/Button\";\nimport TableSelect from \"common/table/Select\";\nimport TableTextField from \"common/table/TextField\";\nimport TablePaginationActions from \"components/table/Pagination\";\n\nimport { headCell, tableSelectOptions } from \"components/Data\";\n\nexport default function SelectionTable(props) {\n    const { menu, loading, data, total, disabled, selected, setSelected, handleChange, handleSelect, handleSearch, onPageClick, onDeleteClick, ...rest } = props;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { pageNumber, pageShow } = useSelector(searchSelector);\n\n    const DashboardData = ({ row, index }) => {\n        return (\n            <>\n                <TableCell align=\"center\" onClick={() => onPageClick(\"detail\", row.idx)}>\n                    <p className={classes.underlinedContent}>{row.name || \"-\"}</p>\n                </TableCell>\n                <TableCell align=\"center\">{row.calories || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.fat || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.carbs || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.protein || \"-\"}</TableCell>\n                <TableCell align=\"center\">\n                    <TableSelect rowIndex={index} name=\"useYn\" options={tableSelectOptions[\"useYn\"]} value={row.useYn} label={row.useYnText} handleSelect={handleSelect} />\n                </TableCell>\n                <TableCell align=\"center\">\n                    <TableSelect rowIndex={index} name=\"viewYn\" options={tableSelectOptions[\"viewYn\"]} value={row.viewYn} label={row.viewYnText} handleSelect={handleSelect} />\n                </TableCell>\n                <TableCell align=\"center\" width={300}>\n                    <TableTextField index={index} name=\"sortOrder\" value={row.sortOrder} handleChange={handleChange} />\n                </TableCell>\n                <TableCell align=\"center\">\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n                        <Grid item>\n                            <TableButton disabled={disabled} pageType=\"edit\" text=\"수정\" rowIndex={index} onClick={onPageClick} />\n                        </Grid>\n                        <Grid item>\n                            <TableButton disabled={disabled} pageType=\"delete\" text=\"삭제\" rowIndex={index} onClick={onDeleteClick} />\n                        </Grid>\n                    </Grid>\n                </TableCell>\n            </>\n        );\n    };\n\n    // all rows selection\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = data.map((n) => n.idx);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    // one row selection\n    const handleClick = (event, index) => {\n        const selectedIndex = selected.indexOf(index);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, index);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    // 테이블 페이지 번호 변경하기\n    const handlePage = (paging) => {\n        dispatch(setSearchFilters(paging));\n        handleSearch(paging);\n    };\n\n    // 페이지 이동하기\n    const handleChangePage = (newPage) => handlePage({ pageNumber: newPage, pageShow });\n\n    // rows per page(페이지 당 행) 변경하기\n    const handleChangeRowsPerPage = (event) => handlePage({ pageNumber: 1, pageShow: parseInt(event.target.value, 10) });\n\n    const isSelected = (index) => (selected ? selected.indexOf(index) !== -1 : false);\n    const numSelected = selected ? selected.length : 0;\n    const rowCount = data.length;\n\n    return (\n        <Paper sx={{ borderRadius: \"4px\" }} className={classes.paper} elevation={0}>\n            <TableContainer>\n                <Table className={classes.table} aria-labelledby={`${menu.toLowerCase()}Table`} size=\"medium\" aria-label={`${menu.toLowerCase()} table`}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    indeterminate={numSelected > 0 && numSelected < rowCount}\n                                    checked={rowCount > 0 && numSelected === rowCount}\n                                    onChange={handleSelectAllClick}\n                                    inputProps={{ \"aria-label\": \"select all data\" }}\n                                />\n                            </TableCell>\n                            {headCell[menu].map((cell) => {\n                                return (\n                                    <TableCell key={cell.id} align=\"center\">\n                                        {cell.label}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {loading ? (\n                            <TableRow>\n                                <TableCell align=\"center\" colSpan={9}>\n                                    <CircularProgress size={12} color=\"primary\" /> 데이터를 불러오는 중입니다.\n                                </TableCell>\n                            </TableRow>\n                        ) : data.length === 0 ? (\n                            <TableRow>\n                                <TableCell align=\"center\" colSpan={9}>\n                                    데이터가 존재하지 않습니다.\n                                </TableCell>\n                            </TableRow>\n                        ) : (\n                            data.map((row, index) => {\n                                const labelId = `${menu.toLowerCase()}-table-checkbox-${index}`;\n                                const isItemSelected = isSelected(row.idx);\n\n                                return (\n                                    <React.Fragment key={index}>\n                                        {menu === \"Dashboard\" && (\n                                            <TableRow hover role=\"checkbox\" aria-checked={isItemSelected} tabIndex={-1} key={index} selected={isItemSelected}>\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox onClick={(event) => handleClick(event, row.idx)} checked={isItemSelected} inputProps={{ \"aria-labelledby\": labelId }} />\n                                                </TableCell>\n                                                <DashboardData row={row} index={index} />\n                                            </TableRow>\n                                        )}\n                                    </React.Fragment>\n                                );\n                            })\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {!loading && data.length > 0 && (\n                <TablePagination\n                    component=\"div\"\n                    ActionsComponent={(props) => (\n                        // rest: excelLoading={excelLoading} disabled={disabled} excelData={excelData}  onExcelClick={onExcel}\n                        <TablePaginationActions {...props} {...rest} menu={menu} disabled={disabled} onDeleteClick={onDeleteClick} />\n                    )}\n                    classes={{ toolbar: classes.toolbar }}\n                    SelectProps={{ inputProps: { \"aria-label\": \"rows per page\" } }}\n                    labelDisplayedRows={() => ``}\n                    rowsPerPage={pageShow || 10}\n                    rowsPerPageOptions={[10, 20, 50, 100]}\n                    count={total}\n                    page={pageNumber > 0 ? pageNumber - 1 : 0}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            )}\n        </Paper>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { putData, deleteData } from \"api\";\n\nimport useMenu from \"hooks/useMenu\";\nimport useMessage from \"hooks/useMessage\";\nimport usePageMove from \"hooks/usePageMove\";\nimport useSearch from \"hooks/useSearch\";\n\nimport useGetList from \"hooks/useGetList\";\nimport useGetLists from \"hooks/useGetLists\";\nimport useExcelDownload from \"hooks/useExcelDownload\";\n\nimport DashboardSearch from \"components/search/Search\";\nimport DashboardTable from \"components/table/SelectionTable\";\nimport MessageModal from \"common/modal/MessageModal\";\n\nimport { sampleRowData } from \"components/Data\";\n\nexport default function Dashboard() {\n    const queryClient = useQueryClient();\n    const location = useLocation();\n\n    const [selected, setSelected] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n\n    const menu = useMenu({ page: \"Dashboard\", menu: \"dashboard\", menuTitle: \"Dashboard\", menuNum: 0 }); // 페이지 / 메뉴 설정하기\n\n    const handleMessage = useMessage(); // 메시지 / 확인 모달 열기\n    const handlePageClick = usePageMove({ baseUrl: \"/\" }); // 페이지 이동하기\n\n    // 리스트 데이터 가져오기\n    const {\n        params,\n        isLoading,\n        data: dataList,\n        refetch: refetchList\n    } = useGetList({\n        menu,\n        url: \"/web/dashboard\"\n    });\n\n    const [{ data: brandList }, { data: categoryList }] = useGetLists({\n        apiList: [\n            { key: \"brand-list\", url: \"/web/brand-list\" },\n            { key: \"category-list\", url: \"/web/category-list\" }\n        ]\n    });\n\n    // 검색하기\n    const handleSearch = useSearch({ params });\n\n    // 엑셀 다운로드\n    const [{ excelLoading, excelList }, onExcelClick] = useExcelDownload({\n        url: \"/web/dashboard/excel\",\n        params\n    });\n\n    // 수정 API\n    const {\n        isLoading: updateLoading,\n        mutate: updateMutation,\n        reset: updateReset\n    } = useMutation(({ url, fileYn, data }) => putData(url, fileYn, data), {\n        onSuccess: (data) => {\n            // 새로운 데이터 가져오기\n            if (location.search.includes(\"gender\")) {\n                return refetchList();\n            }\n\n            // API에서 수정된 값 (=data)을 setQueryData를 사용해서 수정된 데이터로 변경하기\n            queryClient.setQueryData([menu, { ...params }], (old) => {\n                return { ...old, ...data };\n            });\n        },\n        onError: (error) => handleMessage({ type: \"message\", ...error })\n    });\n\n    // 사용여부/노출여부 등 select 데이터 수정하기\n    const handleSelect = (name, value, rowIndex) => {\n        updateReset();\n        setSelectedIndex(rowIndex);\n        updateMutation({ url: \"/web/put/example\", fileYn: false, data: { [name]: value } });\n    };\n\n    // 노출순서 등 input 데이터 수정하기\n    const handleChange = async ({ target: { name, value } }, rowIndex) => {\n        console.log(\"changing input value...\", name, value, rowIndex);\n    };\n\n    // 삭제 API\n    const {\n        isLoading: deleteLoading,\n        mutate: deleteMutation,\n        reset: deleteReset\n    } = useMutation(({ url, data }) => deleteData(url, data), {\n        onSuccess: (data) => refetchList(),\n        onError: (error) => handleMessage({ type: \"message\", ...error })\n    });\n\n    // 선택한 데이터 삭제하기\n    const handleDelete = () => deleteMutation({ url: \"/web/delete/example\", data: { index: selectedIndex } });\n\n    // 삭제 확인 모달 띄우기\n    const onDeleteClick = (_, data) => {\n        deleteReset();\n        setSelectedIndex(data?.idx);\n        handleMessage({ type: \"confirm\", message: \"해당 디저트를 삭제하시겠습니까?\" });\n    };\n\n    return (\n        <>\n            <DashboardSearch\n                menu={menu}\n                heading=\"Dashboard 검색\"\n                total={sampleRowData.length} // total={total}\n                dataList={{ brand: [brandList] || [], category: [categoryList] || [] }}\n                handleSearch={handleSearch}\n                onAddButtonClick={handlePageClick}\n            />\n            <DashboardTable\n                menu={menu}\n                loading={isLoading}\n                excelLoading={excelLoading}\n                disabled={updateLoading || deleteLoading}\n                data={sampleRowData || dataList} // data={dataList}\n                total={sampleRowData.length} // total={total}\n                excelData={excelList?.data || []}\n                selected={selected}\n                setSelected={setSelected}\n                handleSelect={handleSelect}\n                handleChange={handleChange}\n                handleSearch={handleSearch}\n                onPageClick={handlePageClick}\n                onDeleteClick={onDeleteClick}\n                onExcelClick={onExcelClick}\n            />\n            <MessageModal handleConfirm={handleDelete} />\n        </>\n    );\n}\n","import { useParams } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getData } from \"api\";\r\n// import useMessage from \"hooks/useMessage\";\r\n\r\nconst useGetById = ({ menu, url }) => {\r\n    const { idx } = useParams();\r\n    // const handleMessage = useMessage();\r\n\r\n    // 상세 데이터 불러오기\r\n    const { isError, error, ...rest } = useQuery([`${menu} detail`, idx], () => getData(url), {\r\n        enabled: idx ? true : false\r\n        // onError: (error) => handleMessage({ type: \"message\", ...error })\r\n    });\r\n\r\n    return { ...rest };\r\n};\r\n\r\nexport default useGetById;\r\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n    header: {\n        height: 70,\n        padding: 20,\n        borderBottom: `2px solid ${palette.background[\"main\"]}`,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        \"& svg\": {\n            marginRight: 20,\n            cursor: \"pointer\"\n        }\n    },\n    heading: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\"\n    },\n    contentContainer: {\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        backgroundColor: palette.neutral[\"white\"],\n        padding: 30\n    },\n    contentImage: {\n        flex: \"50%\",\n        paddingBottom: 30,\n        \"& h4\": {\n            marginBottom: 15\n        },\n        \"& h4 + div\": {\n            width: 500,\n            margin: \"0 auto\"\n        },\n        \"& input[type='file']\": {\n            display: \"none\"\n        }\n    },\n    uploadContainer: {\n        width: 500,\n        margin: \"20px auto 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        flexWrap: \"wrap\",\n        \"& > label\": {\n            marginBottom: 15\n        }\n    },\n    uploadPreviewContainer: {\n        position: \"relative\",\n        width: 70,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"0 15px 15px 0\",\n        \"& img\": {\n            border: `1px solid ${palette.neutral.dark}`,\n            borderRadius: 4\n        },\n        \"& > button\": {\n            position: \"absolute\",\n            bottom: \"-10px\",\n            right: \"-10px\",\n            backgroundColor: \"black\",\n            color: \"white\",\n            padding: 5,\n            \"& svg\": {\n                width: 12,\n                height: 12\n            },\n            \"&:hover\": {\n                background: \"black\"\n            },\n            \"&:active\": {\n                transform: \"scale(0.98)\"\n            }\n        }\n    },\n    uploadButton: {\n        width: 70,\n        height: 70,\n        borderRadius: 4,\n        border: `1px solid ${palette.neutral.dark}`,\n        \"& svg\": {\n            width: 32,\n            height: 32,\n            color: palette.neutral.dark\n        },\n        \"&:hover\": {\n            backgroundColor: \"white\"\n        },\n        \"&:active\": {\n            transition: \"none\",\n            transform: \"scale(0.98)\"\n        }\n    },\n    tableContainer: {\n        flex: \"50%\"\n    },\n    table: {\n        marginTop: 15,\n        marginBottom: 20,\n        \"& tr\": {\n            border: `1px solid ${palette.border[\"opacity0.1\"]}`\n        },\n        \"& th\": {\n            minWidth: 100,\n            fontWeight: 600,\n            textAlign: \"left\",\n            color: palette.text[\"label\"],\n            background: palette.background[\"light\"],\n            borderRight: `1px solid ${palette.border[\"opacity0.1\"]}`\n        }\n    },\n    detailTable: {\n        borderTop: `2px solid ${palette.border[\"dark\"]}`,\n        \"& tr\": {\n            border: `1px solid ${palette.border[\"opacity0.1\"]}`\n        },\n        \"& th\": {\n            minWidth: 100,\n            fontWeight: 600,\n            textAlign: \"left\",\n            color: palette.text[\"label\"],\n            background: palette.background[\"light\"],\n            borderRight: `1px solid ${palette.border[\"opacity0.1\"]}`\n        }\n    },\n    selectContainer: {\n        \"& > div\": {\n            margin: 0\n        }\n    },\n    statusText: {\n        marginLeft: 10,\n        fontSize: 10,\n        fontWeight: 500\n    },\n    form: {\n        padding: \"20px 20px 0\",\n        \"& table\": {\n            marginTop: 0\n        }\n    }\n}));\n\nexport default useStyles;\n","import React from \"react\";\r\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\n\r\nexport default function Header({ text, onPageClick }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.header}>\r\n            <ChevronLeftIcon onClick={() => onPageClick(\"list\")} />\r\n            <Typography variant=\"h2\" component=\"h3\" display=\"inline\">\r\n                {text}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function Heading({ text, buttonText, type, disabled, onClick }) {\r\n    const classes = useStyles();\r\n\r\n    const ButtonHeading = () => (\r\n        <Typography className={classes.heading} variant=\"h3\" component=\"h4\">\r\n            {text}\r\n            <Button disabled={disabled} sx={{ marginLeft: \"20px\" }} size=\"medium\" color=\"primary\" variant=\"outlined\" className={classes.button} onClick={onClick}>\r\n                {buttonText}\r\n            </Button>\r\n        </Typography>\r\n    );\r\n\r\n    const Heading = () => (\r\n        <Typography className={classes.heading} variant=\"h3\" component=\"h4\">\r\n            {text}\r\n        </Typography>\r\n    );\r\n\r\n    return <>{type === \"button\" ? <ButtonHeading /> : <Heading />}</>;\r\n}\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"@mui/material/Button\";\n\nfunction PageButton({ color = \"primary\", disabled = false, pageType = \"search\", text, onClick }) {\n    return (\n        <Button size=\"large\" color={color} variant=\"outlined\" disabled={disabled} onClick={() => onClick(pageType)}>\n            {text}\n        </Button>\n    );\n}\n\nPageButton.propTypes = {\n    color: PropTypes.string,\n    disabled: PropTypes.bool,\n    pageType: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default PageButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { styled } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n    \"&.Mui-disabled\": {\n        border: `1px solid ${theme.palette.disabled[\"primary\"]}`,\n        backgroundColor: theme.palette.disabled[\"primary\"]\n    }\n}));\n\nfunction SubmitButton({ type = \"button\", color = \"secondary\", loading = false, disabled = false, text, onClick }) {\n    return (\n        <StyledButton\n            type={type}\n            size=\"large\"\n            color={color}\n            variant=\"outlined\"\n            startIcon={loading ? <CircularProgress color=\"primary\" aria-label=\"loading submit\" size={12} /> : <></>}\n            disabled={loading || disabled ? true : false}\n            onClick={onClick}>\n            {text}\n        </StyledButton>\n    );\n}\n\nSubmitButton.propTypes = {\n    type: PropTypes.string,\n    color: PropTypes.string,\n    loading: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired\n};\n\nexport default SubmitButton;\n","import React from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ListButton from \"common/button/PageButton\";\r\nimport SubmitButton from \"common/button/SubmitButton\";\r\n\r\nexport default function Buttons({ type, loading, onPageClick, onConfirm }) {\r\n    const { idx } = useParams();\r\n    const location = useLocation();\r\n\r\n    const DetailEditButtons = () => (\r\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid item>\r\n                <ListButton text=\"목록\" pageType=\"list\" onClick={onPageClick} />\r\n            </Grid>\r\n            <Grid item>\r\n                <ListButton text=\"수정하기\" pageType=\"edit\" onClick={onPageClick} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n    const UploadButtons = () => (\r\n        <Grid sx={{ px: 3 }} container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n                <ListButton disabled={loading} text=\"취소\" pageType=\"search\" onClick={() => onConfirm(idx ? \"editCancel\" : \"uploadCancel\")} />\r\n            </Grid>\r\n            <Grid sx={{ width: \"auto\" }} item container justifyContent=\"flex-end\" alignItems=\"center\">\r\n                <Grid item sx={{ mr: \"10px\" }}>\r\n                    <SubmitButton text=\"입력 초기화\" loading={loading} type=\"button\" onClick={() => onConfirm(\"reset\")} />\r\n                </Grid>\r\n                <Grid item>\r\n                    {idx && location?.pathname?.includes(\"/edit\") ? <SubmitButton text=\"수정하기\" loading={loading} type=\"submit\" /> : <SubmitButton text=\"등록하기\" loading={loading} type=\"submit\" />}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n    return <>{type === \"detail\" ? <DetailEditButtons /> : <UploadButtons />}</>;\r\n}\r\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n    contentImage: {\n        flex: \"50%\",\n        paddingBottom: 30,\n        \"& h4\": {\n            marginBottom: 15\n        },\n        \"& input[type='file']\": {\n            display: \"none\"\n        }\n    },\n    imageContainer: {\n        position: \"relative\",\n        width: 500,\n        margin: \"0 auto\",\n        \"& img\": {\n            margin: \"0 auto\",\n            borderRadius: 4\n        }\n    },\n    imagePreviewContainer: {\n        width: 500,\n        margin: \"20px auto\",\n        \"& img:last-child\": {\n            margin: 0\n        }\n    },\n    proImg: {\n        cursor: \"pointer\",\n        marginRight: 5,\n        width: \"70px\",\n        height: \"70px\",\n        borderRadius: 4\n    },\n    noImage: {\n        width: 500,\n        height: 500,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontWeight: 500,\n        borderRadius: 4,\n        color: palette.text[\"label\"],\n        textTransform: \"uppercase\",\n        fontSize: \"18px\",\n        backgroundColor: palette.background[\"main\"]\n    },\n    imageButtonContainer: {\n        position: \"absolute\",\n        width: 500,\n        height: 500\n    },\n    imageButton: {\n        width: 40,\n        height: 40,\n        minWidth: 0,\n        margin: 0,\n        padding: 0,\n        boxShadow: \"unset\",\n        border: \"none\",\n        borderRadius: 4,\n        fontWeight: 600,\n        fontSize: 12,\n        color: palette.neutral[\"dark\"],\n        background: \"none\",\n        \"& > span\": {\n            marginLeft: 0,\n            marginRight: 0\n        },\n        \"& svg\": {\n            width: 40,\n            height: 40,\n            background: \"#fbfbfb80\"\n        },\n        \"&:hover\": {\n            boxShadow: \"unset\",\n            border: \"none\",\n            background: \"none\",\n            color: palette.neutral[\"dark\"]\n        },\n        \"&:active\": {\n            boxShadow: \"unset\",\n            transition: \"none\",\n            background: \"none\"\n        }\n    }\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useStyles from \"styles/customize/components/ImageCarouselStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\n\nimport Heading from \"layout/page/Heading\";\n\nfunction ImageCarousel({ text, images, alt }) {\n    const classes = useStyles();\n    const [imageIndex, setImageIndex] = useState(0);\n\n    // 작은 이미지 클릭\n    const onImageClick = (index) => setImageIndex(index);\n\n    // 이미지 이전 버튼\n    const onPreviousImage = () => {\n        if (imageIndex <= 0) {\n            setImageIndex(images.length - 1);\n        } else {\n            setImageIndex((prevState) => prevState - 1);\n        }\n    };\n\n    // 이미지 다음 버튼\n    const onNextImage = () => {\n        if (imageIndex >= images.length - 1) {\n            setImageIndex(0);\n        } else {\n            setImageIndex((prevState) => prevState + 1);\n        }\n    };\n\n    return (\n        <div className={classes.contentImage}>\n            <Heading type=\"default\" text={text} />\n            {images?.length > 0 ? (\n                <>\n                    <Grid className={classes.imageContainer} container justifyContent=\"flex-start\" alignItems=\"center\">\n                        <img width={500} height={500} src={images[imageIndex].img_detail} alt={alt} />\n                        {images.length > 1 && (\n                            <Grid className={classes.imageButtonContainer} item container justifyContent=\"space-between\" alignItems=\"center\">\n                                <Button startIcon={<ChevronLeftIcon />} className={classes.imageButton} variant=\"contained\" onClick={onPreviousImage}></Button>\n                                <Button endIcon={<ChevronRightIcon />} className={classes.imageButton} variant=\"contained\" onClick={onNextImage}></Button>\n                            </Grid>\n                        )}\n                    </Grid>\n                    <Grid className={classes.imagePreviewContainer} container justifyContent=\"flex-start\" alignItems=\"center\">\n                        {images.map((img, index) => (\n                            <img key={index} className={classes.proImg} src={img.img_detail} alt={alt} onClick={() => onImageClick(index)} />\n                        ))}\n                    </Grid>\n                </>\n            ) : (\n                <Grid className={classes.imageContainer} container justifyContent=\"flex-start\" alignItems=\"center\">\n                    <div className={classes.noImage}>image not found</div>\n                </Grid>\n            )}\n        </div>\n    );\n}\n\nImageCarousel.propTypes = {\n    images: PropTypes.array.isRequired,\n    alt: PropTypes.string.isRequired\n};\n\nexport default ImageCarousel;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { modalSelector, setDetailClose } from \"slices/modalSlice\";\n\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nimport CloseButton from \"common/button/DefaultButton\";\n\nfunction DetailModal() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { detailOpen, detailData } = useSelector(modalSelector);\n\n    // 모달 닫기\n    const onClose = () => dispatch(setDetailClose());\n\n    const QuantityTable = () => (\n        <tbody>\n            <tr>\n                <th align=\"center\" width={150} className={classes.label}>\n                    판매량\n                </th>\n                <td align=\"center\" width={350}>\n                    {detailData?.quantity ? `${detailData.quantity.toLocaleString()}` : \"\"}\n                </td>\n            </tr>\n        </tbody>\n    );\n\n    return (\n        <>\n            {detailOpen && (\n                <Dialog open={detailOpen} onClose={onClose} sx={{ p: 10 }}>\n                    <DialogTitle>{detailData && detailData.title}</DialogTitle>\n                    <DialogContent>\n                        <table className={classes.detailTable}>{detailData && detailData.type === \"quantity\" && <QuantityTable />}</table>\n                    </DialogContent>\n                    <DialogActions sx={{ py: 2, px: 2.5 }}>\n                        <CloseButton size=\"small\" text=\"닫기\" onClick={onClose} />\n                    </DialogActions>\n                </Dialog>\n            )}\n        </>\n    );\n}\n\nexport default DetailModal;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { setDetail } from \"slices/modalSlice\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { putData } from \"api\";\n\nimport useMenu from \"hooks/useMenu\";\nimport useMessage from \"hooks/useMessage\";\nimport usePageMove from \"hooks/usePageMove\";\nimport useGetById from \"hooks/useGetById\";\n\nimport { getMessageText, handleZipDownload, isEmpty } from \"utils/common\";\n\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Header from \"layout/page/Header\";\nimport Heading from \"layout/page/Heading\";\nimport Buttons from \"layout/page/Buttons\";\nimport ImageCarousel from \"components/image/ImageCarousel\";\n\nimport DefaultButton from \"common/button/DefaultButton\";\nimport Select from \"common/table/Select\";\nimport MessageModal from \"common/modal/MessageModal\";\nimport DetailModal from \"common/modal/DetailModal\";\n\nimport { sampleData, tableSelectOptions } from \"components/Data\";\n\nexport default function DashboardDetail() {\n    const queryClient = useQueryClient();\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const { idx } = useParams();\n\n    // 메뉴 설정하기\n    // menu = Dashboard\n    const menu = useMenu({ page: \"Dashboard\", menu: \"dashboard\", menuTitle: \"Dashboard\", menuNum: 0 });\n\n    const handleMessage = useMessage(); // 메시지 / 확인 모달 열기\n    const handlePageClick = usePageMove({ baseUrl: \"/\" }); // 페이지 이동하기\n\n    const [downloading, setDownloading] = useState(false);\n\n    // 상세 데이터 API 호출\n    const { isSuccess, data: detailData } = useGetById({ menu, url: \"/web/detail/1\" });\n    // -----SAMPLE-----\n    const { data = sampleData, images = [] } = detailData || {};\n    // -----SAMPLE-----\n\n    const handleSelect = (name, idx, value) => {\n        if (isEmpty(idx) || isEmpty(value)) {\n            return handleMessage(\"message\", getMessageText(\"fail\"));\n        }\n\n        handleUpdateData.mutate({ url: \"/web/update/example\", fileYn: false, data: { idx, [name]: value } });\n    };\n\n    // 수정 API\n    const handleUpdateData = useMutation(({ url, fileYn, data }) => putData(url, fileYn, data), {\n        onSuccess: (data) => {\n            // API에서 수정된 값(=data)을 setQueryData를 사용해서 수정된 데이터로 변경하기\n            queryClient.setQueryData([`${menu} detail`, idx], (old) => {\n                return { ...old, ...data };\n            });\n        },\n        onError: (error) => handleMessage({ type: \"message\", ...error })\n    });\n\n    // 이미지 ZIP 파일 다운로드\n    const handleDownload = async () => {\n        if (!isEmpty(images)) {\n            let message = \"\";\n            try {\n                setDownloading(true);\n                message = await handleZipDownload(images);\n            } catch (error) {\n                handleMessage({ type: \"message\", message: getMessageText(\"image download\") });\n            } finally {\n                setDownloading(false);\n                if (message.length > 0) {\n                    handleMessage({ type: \"message\", message });\n                }\n            }\n        }\n    };\n\n    // 이력 / 정보 조회 모달창 띄우기\n    const onOpen = (type) => dispatch(setDetail({ open: true, data: { type, title: \"판매량 조회\", quantity: 140000 } }));\n\n    return (\n        <>\n            <Header text=\"디저트 상세\" onPageClick={handlePageClick} />\n            <div className={classes.contentContainer}>\n                <ImageCarousel text=\"디저트 이미지\" images={images || []} alt=\"상품 이미지\" />\n                <div className={classes.tableContainer}>\n                    <Heading type=\"button\" text=\"디저트 정보\" buttonText=\"이미지 다운로드\" disabled={downloading || images?.length === 0 ? true : false} onClick={handleDownload} />\n                    <table className={classes.table}>\n                        <colgroup>\n                            <col width=\"12%\"></col>\n                            <col width=\"88%\"></col>\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <th>디저트명</th>\n                                <td>{data?.name || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>등록일</th>\n                                <td>{data?.regDate || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>카테고리</th>\n                                <td>{data?.category || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>색상</th>\n                                <td>{data?.color || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>원재료명</th>\n                                <td>{data?.ingredients || \"-\"}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <Heading type=\"default\" text=\"영양정보\" />\n                    <table className={classes.table}>\n                        <colgroup>\n                            <col width=\"12%\"></col>\n                            <col width=\"88%\"></col>\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <th>칼로리</th>\n                                <td>{data?.calories || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>지방</th>\n                                <td>{data?.fat || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>탄수화물</th>\n                                <td>{data?.carbs || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>프로틴</th>\n                                <td>{data?.protein || \"-\"}</td>\n                            </tr>\n                            <tr>\n                                <th>판매량</th>\n                                <td>\n                                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                                        <p>{data?.quantity || \"-\"}</p>\n                                        <DefaultButton text=\"판매량 확인하기\" size=\"medium\" color=\"primary\" variant=\"outlined\" onClick={() => onOpen(\"quantity\")} />\n                                    </Grid>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <Heading type=\"default\" text=\"노출 여부\" />\n                    <table className={classes.table}>\n                        <colgroup>\n                            <col width=\"12%\"></col>\n                            <col width=\"88%\"></col>\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <th>노출 여부</th>\n                                <td>\n                                    {isSuccess && (\n                                        <Grid className={classes.selectContainer} container justifyContent=\"flex-start\" alignItems=\"center\" direction=\"row\">\n                                            <Select\n                                                name=\"viewYn\"\n                                                rowIndex={data?.idx}\n                                                value={data?.viewYn}\n                                                label={data?.viewYnText}\n                                                options={tableSelectOptions[\"viewYn\"]}\n                                                handleSelect={handleSelect}\n                                            />\n                                        </Grid>\n                                    )}\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>판매 여부</th>\n                                <td className={classes.selectContent}>\n                                    {isSuccess && (\n                                        <Grid className={classes.selectContainer} container justifyContent=\"flex-start\" alignItems=\"center\" direction=\"row\">\n                                            <Select name=\"useYn\" rowIndex={data?.idx} value={data?.useYn} label={data?.useYnText} options={tableSelectOptions[\"useYn\"]} handleSelect={handleSelect} />\n                                            <p className={classes.statusText}>{data?.useYn === \"Y\" ? \"판매중인 디저트입니다.\" : \"판매 종료된 디저트입니다.\"}</p>\n                                        </Grid>\n                                    )}\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <Buttons type=\"detail\" onPageClick={handlePageClick} />\n            <DetailModal />\n            <MessageModal />\n        </>\n    );\n}\n","import { createTheme } from \"@mui/material/styles\";\nimport { typography } from \"styles/theme/typography\";\nimport { palette } from \"styles/theme/palette\";\n\nconst theme = createTheme({\n    palette,\n    typography,\n    components: {\n        MuiTextField: {\n            styleOverrides: {\n                root: {\n                    minWidth: 320,\n                    minHeight: 32,\n                    margin: \"5px 0\"\n                }\n            }\n        },\n        MuiOutlinedInput: {\n            styleOverrides: {\n                root: {\n                    height: \"100%\",\n                    \"&&.Mui-focused fieldset\": {\n                        borderColor: palette.border[\"main\"],\n                        borderWidth: 1\n                    },\n                    \"&&:hover fieldset\": {\n                        borderColor: palette.border[\"main\"],\n                        borderWidth: 1\n                    },\n                    padding: 0\n                },\n                input: {\n                    padding: \"9px 10px\"\n                },\n                notchedOutline: {\n                    borderColor: palette.border[\"main\"]\n                }\n            }\n        },\n        MuiInputBase: {\n            styleOverrides: {\n                root: {\n                    color: palette.text[\"primary\"]\n                }\n            }\n        },\n        MuiButton: {\n            styleOverrides: {\n                sizeSmall: {\n                    padding: 5\n                },\n                sizeMedium: {\n                    height: 30,\n                    padding: 10,\n                    fontSize: 12\n                },\n                sizeLarge: {\n                    width: \"auto\",\n                    padding: 10\n                }\n            }\n        },\n        MuiIconButton: {\n            styleOverrides: {\n                root: {\n                    marginRight: 0\n                }\n            }\n        }\n    }\n});\n\nexport default theme;\n","import React from \"react\";\r\n\r\nimport useStyles from \"styles/customize/components/ImageCarouselStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\n\r\nexport default function UploadImageCarousel({ imageIndex, setImageIndex, imageFiles }) {\r\n    const classes = useStyles();\r\n\r\n    // 이미지 이전 버튼\r\n    const onPreviousImage = () => {\r\n        if (imageIndex <= 0) {\r\n            setImageIndex(imageFiles.length - 1);\r\n        } else {\r\n            setImageIndex((prevState) => prevState - 1);\r\n        }\r\n    };\r\n\r\n    // 이미지 다음 버튼\r\n    const onNextImage = () => {\r\n        if (imageIndex >= imageFiles.length - 1) {\r\n            setImageIndex(0);\r\n        } else {\r\n            setImageIndex((prevState) => prevState + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {imageFiles[imageIndex] ? (\r\n                <div>\r\n                    <Grid className={classes.imageContainer} container justifyContent=\"flex-start\" alignItems=\"center\">\r\n                        <img width={500} height={500} src={imageFiles[imageIndex].preview} alt=\"product img\" />\r\n                        {imageFiles.length > 1 && (\r\n                            <Grid className={classes.imageButtonContainer} item container justifyContent=\"space-between\" alignItems=\"center\">\r\n                                <Button startIcon={<ChevronLeftIcon />} className={classes.imageButton} variant=\"contained\" onClick={onPreviousImage}></Button>\r\n                                <Button endIcon={<ChevronRightIcon />} className={classes.imageButton} variant=\"contained\" onClick={onNextImage}></Button>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <div className={classes.noImage}></div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Close from \"@mui/icons-material/Close\";\n\nimport Heading from \"layout/page/Heading\";\nimport UploadImageCarousel from \"components/image/UploadImageCarousel\";\n\nexport default function UploadImage({ text, imageFiles, setImageFiles, onConfirm, handleDeleteImageFile }) {\n    const classes = useStyles();\n    const { idx } = useParams();\n\n    const [imageIndex, setImageIndex] = useState(0);\n    const [imageLoading, setImageLoading] = useState(false); // 이미지 업로드 로딩 상태\n\n    // input[type=\"file\"]로 이미지 파일 업로드\n    // imageFiles로 업로드한 파일 저장하기\n    const handleImageFile = async (e) => {\n        setImageLoading(true);\n\n        const files = e.target.files;\n        for (let i = 0; i < files.length; i++) {\n            if (files[i]) {\n                // 이미지 preview 만들기\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    setImageFiles((prevState) => [\n                        ...prevState,\n                        {\n                            file: files[i],\n                            preview: reader.result\n                        }\n                    ]);\n                };\n                reader.readAsDataURL(files[i]);\n            }\n        }\n        setImageLoading(false);\n    };\n\n    const handleDelete = (imageIndex) => {\n        setImageIndex(0);\n        handleDeleteImageFile(imageIndex);\n    };\n\n    return (\n        <div className={classes.contentImage}>\n            <Heading type=\"default\" text={text} />\n            <UploadImageCarousel imageFiles={imageFiles} imageIndex={imageIndex} setImageIndex={setImageIndex} />\n            <div className={classes.uploadContainer}>\n                {imageFiles.map((image, index) => (\n                    <React.Fragment key={index}>\n                        {image && (\n                            <div className={classes.uploadPreviewContainer}>\n                                <img width={70} height={70} src={image.preview} alt=\"\" />\n                                {idx && image.idx ? (\n                                    <IconButton aria-label=\"delete\" onClick={() => onConfirm(\"delete\", { imageIndex: image.idx, index })}>\n                                        <Close />\n                                    </IconButton>\n                                ) : (\n                                    <IconButton aria-label=\"delete\" onClick={() => handleDelete(index)}>\n                                        <Close />\n                                    </IconButton>\n                                )}\n                            </div>\n                        )}\n                    </React.Fragment>\n                ))}\n                {/* 다중, 중복 이미지 업로드 */}\n                <input multiple disabled={imageLoading} onChange={handleImageFile} onClick={(e) => (e.target.value = null)} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\n                <label htmlFor=\"icon-button-file\">\n                    <IconButton disabled={imageLoading} className={classes.uploadButton} color=\"primary\" aria-label=\"upload product image\" component=\"span\">\n                        <AddIcon />\n                    </IconButton>\n                </label>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Controller } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction Input({ fullWidth = true, multiline = false, rows = 0, inputType = \"text\", name, defaultValue, control }) {\n    return (\n        <Controller\n            name={name}\n            defaultValue={defaultValue}\n            control={control}\n            render={({ onChange, value }) => (\n                <TextField\n                    id={`outlined-${name}`}\n                    label=\"\"\n                    variant=\"outlined\"\n                    multiline={multiline}\n                    rows={rows}\n                    fullWidth={fullWidth}\n                    InputLabelProps={{ shrink: false }}\n                    inputProps={{ \"aria-label\": `type ${name}` }}\n                    type={inputType}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                />\n            )}\n        />\n    );\n}\n\nInput.propTypes = {\n    fullWidth: PropTypes.bool,\n    multiline: PropTypes.bool,\n    rows: PropTypes.number,\n    inputType: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    control: PropTypes.object.isRequired\n};\n\nexport default Input;\n","// 참고: https://react-select.com/styles#style-object\nimport { palette } from \"styles/theme/palette\";\n\nconst customStyles = {\n    option: (provided, state) => ({\n        ...provided,\n        height: 32,\n        padding: \"8px 10px\",\n        color: palette.text[\"primary\"],\n        backgroundColor: state.isSelected ? palette.primary[\"main\"] : palette.neutral[\"white\"],\n        \"&:hover\": {\n            backgroundColor: state.isSelected ? palette.primary[\"main\"] : palette.primary[\"opacity0.2\"]\n        }\n    }),\n    container: (provided) => ({\n        ...provided,\n        width: \"100%\",\n        height: 32,\n        display: \"inline-block\",\n        fontSize: 12,\n        textAlign: \"center\"\n    }),\n    control: (provided) => ({\n        ...provided,\n        minHeight: 32,\n        height: 32,\n        lineHeight: \"32px\",\n        boxShadow: \"unset\",\n        borderColor: palette.border[\"main\"],\n        \"&:hover\": {\n            borderColor: palette.border[\"main\"]\n        }\n    }),\n    valueContainer: (provided) => ({\n        ...provided,\n        height: 32\n    }),\n    dropdownIndicator: (provided) => ({\n        ...provided,\n        width: 24,\n        padding: \"2px 6px 2px 2px\"\n    }),\n    indicatorsContainer: (provided) => ({\n        ...provided,\n        height: 32,\n        padding: 0\n    }),\n    indicatorSeparator: (provided) => ({\n        ...provided,\n        alignSelf: \"unset\"\n    }),\n    menuList: (provided) => ({\n        ...provided,\n        padding: 0\n    })\n};\n\nexport default customStyles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"styles/customize/select/FormSelectStyles\";\n\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\n\nfunction FormSelect({ isClearable = false, isSearchable = false, name, defaultValue, options, control }) {\n    return (\n        <Controller\n            name={name}\n            defaultValue={defaultValue}\n            options={options}\n            control={control}\n            as={<Select aria-label={`select ${name}`} isClearable={isClearable} isSearchable={isSearchable} styles={styles} />}\n        />\n    );\n}\n\nFormSelect.propTypes = {\n    isClearable: PropTypes.bool,\n    isSearchable: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n    defaultValue: PropTypes.object.isRequired,\n    options: PropTypes.array.isRequired,\n    control: PropTypes.object.isRequired\n};\n\nexport default FormSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Controller } from \"react-hook-form\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nfunction CheckBox({ options, control }) {\n    return (\n        <>\n            {options.map((checkbox, index) => (\n                <Controller\n                    key={`controller-${index}`}\n                    name={checkbox.name}\n                    defaultValue={checkbox.defaultValue}\n                    control={control}\n                    render={({ onChange, value }) => (\n                        <FormControlLabel\n                            key={`checkbox-${index}`}\n                            label={checkbox.label}\n                            control={<Checkbox color=\"primary\" name={checkbox.name} checked={value} onChange={(e) => onChange(e.target.checked)} />}\n                        />\n                    )}\n                />\n            ))}\n        </>\n    );\n}\n\nCheckBox.propTypes = {\n    options: PropTypes.array.isRequired,\n    control: PropTypes.object.isRequired\n};\n\nexport default CheckBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Controller } from \"react-hook-form\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Radio from \"@mui/material/Radio\";\n\nfunction RadioButton({ name, defaultValue, options, control }) {\n    return (\n        <Controller\n            name={name}\n            defaultValue={defaultValue}\n            control={control}\n            render={({ onChange, value }) => (\n                <RadioGroup aria-label=\"radio\" row value={value} onChange={(e) => onChange(e.target.value)}>\n                    {options.map((radio, index) => (\n                        <FormControlLabel key={`radio-${index}`} label={radio.label} value={radio.value} control={<Radio color=\"primary\" />} />\n                    ))}\n                </RadioGroup>\n            )}\n        />\n    );\n}\n\nRadioButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    options: PropTypes.array.isRequired,\n    control: PropTypes.object.isRequired\n};\n\nexport default RadioButton;\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function ErrorMessage({ text }) {\r\n    return (\r\n        <Typography component=\"span\" color=\"error\" variant=\"body2\">\r\n            {text}\r\n        </Typography>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { postData } from \"api\";\n\nimport useMenu from \"hooks/useMenu\";\nimport useMessage from \"hooks/useMessage\";\nimport usePageMove from \"hooks/usePageMove\";\n\nimport { getMessageText } from \"utils/common\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\nimport theme from \"styles/theme/form\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport Header from \"layout/page/Header\";\nimport Heading from \"layout/page/Heading\";\nimport Buttons from \"layout/page/Buttons\";\nimport UploadImage from \"components/image/UploadImage\";\n\nimport Input from \"common/form/Input\";\nimport FormSelect from \"common/form/Select\";\nimport CheckBox from \"common/form/CheckBox\";\nimport RadioButton from \"common/form/RadioButton\";\nimport ErrorMessage from \"common/form/ErrorMessage\";\n\nimport MessageModal from \"common/modal/MessageModal\";\n\nimport { schema, tableSelectOptions } from \"components/Data\";\n\nexport default function DashboardUpload() {\n    const classes = useStyles();\n    const menu = useMenu({ page: \"Dashboard\", menu: \"dashboard\", menuTitle: \"Dashboard\", menuNum: 0 }); // 페이지 / 메뉴 설정하기\n\n    const { errors, clearErrors, control, reset, getValues, handleSubmit } = useForm({\n        resolver: yupResolver(schema[menu])\n    });\n\n    const [imageFiles, setImageFiles] = useState([]);\n    const [actionType, setActionType] = useState(\"submit\"); // 모달 타입\n\n    const handleMessage = useMessage(); // 메시지 / 확인 모달 열기\n    const handlePageClick = usePageMove({ baseUrl: \"/\" }); // 페이지 이동하기\n\n    // 입력한 정보 초기화\n    const handleReset = useCallback(() => {\n        clearErrors();\n        setImageFiles([]);\n        reset({\n            category: { value: \"\", label: \"카테고리를 선택해주세요\" },\n            name: \"\",\n            quantity: 0,\n            ingredients_1: false,\n            ingredients_2: false,\n            ingredients_3: false,\n            ingredients_4: false,\n            useYn: \"Y\"\n        });\n    }, [clearErrors, reset]);\n\n    // react-hook-form 데이터 초기화\n    useEffect(() => {\n        handleReset();\n    }, [handleReset]);\n\n    // 이미지 파일 삭제\n    const handleDeleteImageFile = (imageIndex) => setImageFiles(imageFiles.filter((_, index) => index !== imageIndex));\n\n    // 등록 API\n    const { isLoading, mutate: createMutation } = useMutation(({ url, fileYn, formData }) => postData(url, fileYn, formData), {\n        onSuccess: (data) => {\n            handleMessage({ type: \"message\", message: data?.message });\n            handlePageClick();\n        },\n        onError: (error) => handleMessage({ type: \"message\", ...error })\n    });\n\n    // 등록하기\n    const handleDataSubmit = () => {\n        const data = getValues();\n\n        let formData = new FormData();\n        formData.append(\"category\", data.category.value);\n        formData.append(\"name\", data.name);\n\n        for (let key in imageFiles) {\n            if (imageFiles[key].file) {\n                formData.append(\"images\", imageFiles[key].file);\n            }\n        }\n\n        createMutation({ url: \"/web/post/example\", fileYn: true, formData });\n    };\n\n    // 확인 모달 띄우기\n    const onConfirm = (type) => {\n        setActionType(type);\n        handleMessage({ type: \"confirm\", message: getMessageText(type) });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <form onSubmit={handleSubmit(() => onConfirm(\"submit\"))} noValidate autoComplete=\"off\">\n                <Header text=\"디저트 등록하기\" onPageClick={handlePageClick} />\n                <div className={classes.contentContainer}>\n                    <UploadImage text=\"디저트 사진 등록\" imageFiles={imageFiles} setImageFiles={setImageFiles} onConfirm={onConfirm} handleDeleteImageFile={handleDeleteImageFile} />\n                    <div className={classes.tableContainer}>\n                        <Heading type=\"default\" text=\"디저트 정보 입력\" />\n                        <table className={classes.table}>\n                            <colgroup>\n                                <col width=\"20%\"></col>\n                                <col width=\"80%\"></col>\n                            </colgroup>\n                            <tbody>\n                                <tr>\n                                    <th>카테고리</th>\n                                    <td>\n                                        <FormSelect\n                                            name=\"category\"\n                                            defaultValue={{ value: \"\", label: \"카테고리를 선택해주세요\" }}\n                                            control={control}\n                                            options={[\n                                                { value: \"\", label: \"카테고리를 선택해주세요\" },\n                                                { value: \"Cupcake\", label: \"Cupcake\" },\n                                                { value: \"Cookie\", label: \"Cookie\" }\n                                            ]}\n                                        />\n                                        {errors.category && <ErrorMessage text=\"카테고리를 선택해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>디저트명</th>\n                                    <td>\n                                        <Input inputType=\"text\" name=\"name\" defaultValue=\"\" control={control} />\n                                        {errors.name && <ErrorMessage text=\"디저트명을 입력해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>수량</th>\n                                    <td>\n                                        <Input inputType=\"number\" name=\"quantity\" defaultValue=\"\" control={control} />\n                                        {errors.quantity && <ErrorMessage text=\"수량을 입력해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>디저트 소개</th>\n                                    <td>\n                                        <Input inputType=\"text\" name=\"description\" defaultValue=\"\" multiline={true} rows={10} control={control} />\n                                        {errors.description && <ErrorMessage text=\"디저트 소개를 입력해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>재료 선택</th>\n                                    <td>\n                                        <CheckBox\n                                            options={[\n                                                { defaultValue: false, name: \"ingredients_1\", label: \"chocolate\" },\n                                                { defaultValue: false, name: \"ingredients_2\", label: \"strawberry\" },\n                                                { defaultValue: false, name: \"ingredients_3\", label: \"cheese\" },\n                                                { defaultValue: false, name: \"ingredients_4\", label: \"others\" }\n                                            ]}\n                                            control={control}\n                                        />\n                                        {errors.ingredients && <ErrorMessage text=\"재료를 선택해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>판매 여부</th>\n                                    <td>\n                                        <RadioButton name=\"useYn\" defaultValue=\"\" control={control} options={tableSelectOptions[\"useYn\"]} />\n                                        {errors.useYn && <ErrorMessage text=\"판매 여부를 선택해주세요.\" />}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <Buttons type=\"upload\" loading={isLoading} onPageClick={() => handlePageClick(\"list\")} onConfirm={onConfirm} />\n            </form>\n            <MessageModal handleConfirm={actionType === \"uploadCancel\" ? () => handlePageClick(\"list\") : actionType === \"reset\" ? handleReset : handleDataSubmit} />\n        </ThemeProvider>\n    );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useMutation } from \"react-query\";\nimport { putData, deleteData } from \"api\";\n\nimport useMenu from \"hooks/useMenu\";\nimport useMessage from \"hooks/useMessage\";\nimport usePageMove from \"hooks/usePageMove\";\nimport useGetById from \"hooks/useGetById\";\n\nimport { getMessageText } from \"utils/common\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\nimport theme from \"styles/theme/form\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport Header from \"layout/page/Header\";\nimport Heading from \"layout/page/Heading\";\nimport Buttons from \"layout/page/Buttons\";\nimport UploadImage from \"components/image/UploadImage\";\n\nimport Input from \"common/form/Input\";\nimport FormSelect from \"common/form/Select\";\nimport CheckBox from \"common/form/CheckBox\";\nimport RadioButton from \"common/form/RadioButton\";\nimport ErrorMessage from \"common/form/ErrorMessage\";\n\nimport MessageModal from \"common/modal/MessageModal\";\n\nimport { sampleData, schema, tableSelectOptions } from \"components/Data\";\n\nexport default function DashboardUpload() {\n    const classes = useStyles();\n    const { idx } = useParams();\n    const menu = useMenu({ page: \"Dashboard\", menu: \"dashboard\", menuTitle: \"Dashboard\", menuNum: 0 }); // 페이지 / 메뉴 설정하기\n\n    const { errors, clearErrors, control, reset, getValues, handleSubmit } = useForm({\n        resolver: yupResolver(schema[menu])\n    });\n\n    const [imageFiles, setImageFiles] = useState([]);\n    const [deleteImage, setDeleteImage] = useState({});\n    const [actionType, setActionType] = useState(\"submit\"); // 모달 타입\n\n    const handleMessage = useMessage(); // 메시지 / 확인 모달 열기\n    const handlePageClick = usePageMove({ baseUrl: \"/\" }); // 페이지 이동하기\n\n    const { isSuccess, data: detailData } = useGetById({ menu, url: `/web/example/detail/${idx}` });\n    // -----SAMPLE-----\n    const { data = sampleData, images = [] } = detailData || {};\n    // -----SAMPLE-----\n\n    // 입력한 정보 초기화\n    const handleReset = useCallback(() => {\n        clearErrors();\n        setImageFiles([]);\n        setDeleteImage({});\n        reset({\n            category: { value: data?.category, label: data?.category },\n            name: data?.name,\n            quantity: data?.quantity,\n            description: data?.description,\n            ingredients_1: data?.ingredients.includes(\"chocolate\"),\n            ingredients_2: data?.ingredients.includes(\"strawberry\"),\n            ingredients_3: data?.ingredients.includes(\"cheese\"),\n            ingredients_4: data?.ingredients.includes(\"others\"),\n            useYn: data?.useYn\n        });\n\n        images?.forEach((image) => {\n            setImageFiles((prevState) => [\n                ...prevState,\n                {\n                    idx: image.idx,\n                    file: null,\n                    preview: image.src\n                }\n            ]);\n        });\n    }, [data, images, clearErrors, reset]);\n\n    // react-hook-form 데이터 초기화\n    useEffect(() => {\n        if (isSuccess) {\n            handleReset();\n        }\n    }, [isSuccess, handleReset]);\n\n    // imageFiles에서 이미지 삭제\n    const handleDeleteImageFile = (imageIndex) => setImageFiles(imageFiles.filter((_, index) => index !== imageIndex));\n\n    // 삭제 API\n    const { mutation: deleteMutation } = useMutation(({ url, data }) => deleteData(url, data), {\n        onSuccess: () => handleDeleteImageFile(deleteImage.index),\n        onError: (error) => handleMessage({ type: \"message\", ...error })\n    });\n\n    // 수정하기 -- 이미지 삭제\n    const handleRemoveImage = () => deleteMutation({ url: \"/delete/example\", data: { imageIndex: deleteImage.imageIndex } });\n\n    // 수정 API\n    const { isLoading, mutate: updateMutation } = useMutation(({ url, fileYn, formData }) => putData(url, fileYn, formData), {\n        onSuccess: (data) => {\n            handleMessage({ type: \"message\", message: data?.message });\n            handlePageClick();\n        },\n        onError: (error) => handleMessage({ type: \"message\", ...error })\n    });\n\n    // 수정하기\n    const handleDataSubmit = () => {\n        const data = getValues();\n\n        let formData = new FormData();\n        formData.append(\"idx\", idx);\n        formData.append(\"category\", data.category.value);\n        formData.append(\"name\", data.name);\n\n        for (let key in imageFiles) {\n            if (imageFiles[key].file) {\n                formData.append(\"images\", imageFiles[key].file);\n            }\n        }\n        updateMutation({ url: \"/web/put/example\", fileYn: true, formData });\n    };\n\n    // 확인 모달 띄우기\n    const onConfirm = (type, data) => {\n        if (type === \"delete\") setDeleteImage(data);\n\n        setActionType(type);\n        handleMessage({ type: \"confirm\", message: getMessageText(type) });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <form onSubmit={handleSubmit(() => onConfirm(\"editSubmit\"))} noValidate={false} autoComplete=\"off\">\n                <Header text=\"디저트 수정하기\" onPageClick={handlePageClick} />\n                <div className={classes.contentContainer}>\n                    <UploadImage text=\"디저트 사진 수정\" imageFiles={imageFiles} setImageFiles={setImageFiles} onConfirm={onConfirm} handleDeleteImageFile={handleDeleteImageFile} />\n                    <div className={classes.tableContainer}>\n                        <Heading type=\"default\" text=\"디저트 정보 입력\" />\n                        <table className={classes.table}>\n                            <colgroup>\n                                <col width=\"20%\"></col>\n                                <col width=\"80%\"></col>\n                            </colgroup>\n                            <tbody>\n                                <tr>\n                                    <th>카테고리</th>\n                                    <td>\n                                        <FormSelect\n                                            name=\"category\"\n                                            defaultValue={{ value: data?.category || \"\", label: data?.category || \"카테고리를 선택해주세요\" }}\n                                            control={control}\n                                            options={[\n                                                { value: \"\", label: \"카테고리를 선택해주세요\" },\n                                                { value: \"Cupcake\", label: \"Cupcake\" },\n                                                { value: \"Cookie\", label: \"Cookie\" }\n                                            ]}\n                                        />\n                                        {errors.category && <ErrorMessage text=\"카테고리를 선택해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>디저트명</th>\n                                    <td>\n                                        <Input inputType=\"text\" name=\"name\" defaultValue={data?.name || \"\"} fullWidth={true} control={control} />\n                                        {errors.name && <ErrorMessage text=\"디저트명을 입력해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>수량</th>\n                                    <td>\n                                        <Input inputType=\"number\" name=\"quantity\" defaultValue={data?.quantity || \"\"} control={control} />\n                                        {errors.quantity && <ErrorMessage text=\"수량을 입력해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>디저트 소개</th>\n                                    <td>\n                                        <Input inputType=\"text\" name=\"description\" defaultValue={data?.description || \"\"} multiline={true} rows={10} control={control} />\n                                        {errors.description && <ErrorMessage text=\"디저트 소개를 입력해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>재료 선택</th>\n                                    <td>\n                                        <CheckBox\n                                            options={[\n                                                { defaultValue: data?.ingredients.includes(\"chocolate\"), name: \"ingredients_1\", label: \"chocolate\" },\n                                                { defaultValue: data?.ingredients.includes(\"strawberry\"), name: \"ingredients_2\", label: \"strawberry\" },\n                                                { defaultValue: data?.ingredients.includes(\"cheese\"), name: \"ingredients_3\", label: \"cheese\" },\n                                                { defaultValue: data?.ingredients.includes(\"others\"), name: \"ingredients_4\", label: \"others\" }\n                                            ]}\n                                            control={control}\n                                        />\n                                        {errors.ingredients && <ErrorMessage text=\"재료를 선택해주세요.\" />}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>판매 여부</th>\n                                    <td>\n                                        <RadioButton name=\"useYn\" defaultValue={data?.useYn || \"Y\"} control={control} options={tableSelectOptions[\"useYn\"]} />\n                                        {errors.useYn && <ErrorMessage text=\"판매 여부를 선택해주세요.\" />}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <Buttons type=\"upload\" loading={isLoading} onPageClick={() => handlePageClick(\"list\")} onConfirm={onConfirm} />\n            </form>\n            <MessageModal\n                handleConfirm={actionType === \"delete\" ? handleRemoveImage : actionType === \"editCancel\" ? () => handlePageClick(\"list\") : actionType === \"reset\" ? handleReset : handleDataSubmit}\n            />\n        </ThemeProvider>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\n\nimport { format } from \"utils/common\";\n\nimport theme from \"styles/theme/search\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport useStyles from \"styles/customize/components/SearchStyles\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport Button from \"@mui/material/Button\";\n\nimport DateSearchPicker from \"common/search/DatePicker\";\nimport SearchSelect from \"common/search/SearchSelect\";\n\nimport { searchOption as option } from \"components/Data\";\n\nexport default function DateTermSearch(props) {\n    const { menu, total, handleSearch } = props;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const searchState = useSelector(searchSelector);\n\n    const [term, setTerm] = useState(\"daily\");\n    const [dates, setDates] = useState({ starDate: null, endDate: null });\n\n    useEffect(() => {\n        setTerm(searchState[\"term\"] || \"daily\");\n        setDates((prev) => ({\n            ...prev,\n            startDate: searchState[\"startDate\"] ? format(searchState[\"term\"] || \"daily\", searchState[\"startDate\"]) : null,\n            endDate: searchState[\"endDate\"] ? format(searchState[\"term\"] || \"daily\", searchState[\"endDate\"]) : null\n        }));\n    }, [searchState]);\n\n    // 검색 조건 (select) 변경\n    const handleChange = (e) => {\n        setTerm(e.target.value);\n        setDates((prev) => ({\n            ...prev,\n            startDate: searchState[\"startDate\"] ? format(e.target.value || \"daily\", searchState[\"startDate\"]) : null,\n            endDate: searchState[\"endDate\"] ? format(e.target.value || \"daily\", searchState[\"endDate\"]) : null\n        }));\n    };\n\n    // 검색 기간 변경\n    const handleDate = (type, date) => setDates((prev) => ({ ...prev, [type]: date }));\n\n    // 조회 버튼 클릭\n    const handleSubmit = () => handleSearchFilter({ ...dates, term });\n\n    // 테이블 데이터 정렬하기\n    const handleSort = (e) => handleSearchFilter({ [e.target.name]: e.target.value });\n\n    // 검색하기\n    const handleSearchFilter = (obj) => {\n        // 새로 검색할 경우 페이지 번호 초기화하기\n        if (parseInt(searchState[\"pageNumber\"]) > 1) {\n            Object.assign(obj, { pageNumber: 1 });\n        }\n\n        dispatch(setSearchFilters(obj));\n        handleSearch(obj);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid className={classes.termSearchRoot} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\n                <Grid item>\n                    <Typography variant=\"caption\" display=\"block\">\n                        기간\n                    </Typography>\n                    <Select className={classes.searchSelect} IconComponent={KeyboardArrowDownIcon} displayEmpty size=\"small\" name=\"term\" value={term} onChange={handleChange}>\n                        {option[\"term\"] &&\n                            option[\"term\"].map((list, index) => (\n                                <MenuItem key={index} value={list.value}>\n                                    {list.label}\n                                </MenuItem>\n                            ))}\n                    </Select>\n                </Grid>\n                <DateSearchPicker caption={true} term={term} dates={dates} handleDate={handleDate} />\n                <Grid item>\n                    <div className={classes.spacer}></div>\n                    <Button variant=\"contained\" onClick={handleSubmit}>\n                        조회\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid sx={{ mb: 2.5 }} container justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"h4\" component=\"h4\">\n                    검색된 데이터 : <span>{total || 0}</span>건\n                </Typography>\n                <SearchSelect menu={menu} name=\"sort\" value={searchState[\"sort\"]} handleChange={handleSort} />\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\n\nimport useStyles from \"styles/customize/table/SearchTableStyles\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport TablePaginationActions from \"components/table/Pagination\";\n\nimport { headCell, sampleData } from \"components/Data\";\n\nexport default function SearchTable(props) {\n    const { menu, loading, data, total, handleSearch, onEditClick, onDetailClick, onAddClick } = props;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { pageNumber, pageShow } = useSelector(searchSelector);\n\n    const ExampleData = ({ row }) => {\n        return (\n            <>\n                <TableCell align=\"center\" onClick={() => onDetailClick(row.idx)}>\n                    <p className={classes.underlinedContent}>{row.idx || \"-\"}</p>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => onEditClick(row.idx, sampleData)}>\n                    <p className={classes.underlinedContent}>{row.name || \"-\"}</p>\n                </TableCell>\n                <TableCell align=\"center\">{row.calories || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.fat || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.carbs || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.protein || \"-\"}</TableCell>\n                <TableCell align=\"center\">{row.regdate || \"-\"}</TableCell>\n            </>\n        );\n    };\n\n    // 테이블 페이지 번호 변경하기\n    const handlePage = (paging) => {\n        dispatch(setSearchFilters(paging));\n        handleSearch(paging);\n    };\n\n    // 페이지 이동하기\n    const handleChangePage = (newPage) => handlePage({ pageNumber: newPage, pageShow });\n\n    // rows per page(페이지 당 행) 변경하기\n    const handleChangeRowsPerPage = (event) => handlePage({ pageNumber: 1, pageShow: parseInt(event.target.value, 10) });\n\n    return (\n        <Paper className={classes.paper} elevation={0}>\n            <TableContainer>\n                <Table className={classes.table} aria-labelledby={`${menu.toLowerCase()}Table`} size=\"medium\" aria-label={`${menu.toLowerCase()} table`}>\n                    <TableHead>\n                        <TableRow>\n                            {headCell[menu].map((headCell) => {\n                                return (\n                                    <TableCell key={headCell.id} align=\"center\">\n                                        {headCell.label}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {loading ? (\n                            <TableRow>\n                                <TableCell align=\"center\" colSpan={8}>\n                                    <CircularProgress size={12} color=\"primary\" /> 데이터를 불러오는 중입니다.\n                                </TableCell>\n                            </TableRow>\n                        ) : data.length === 0 ? (\n                            <TableRow>\n                                <TableCell align=\"center\" colSpan={8}>\n                                    데이터가 존재하지 않습니다.\n                                </TableCell>\n                            </TableRow>\n                        ) : (\n                            data.map((row, index) => {\n                                return (\n                                    <TableRow hover tabIndex={-1} key={index}>\n                                        {menu === \"Example\" && <ExampleData row={row} />}\n                                    </TableRow>\n                                );\n                            })\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {!loading && data.length > 0 && (\n                <TablePagination\n                    component=\"div\"\n                    ActionsComponent={(props) => <TablePaginationActions {...props} menu={menu} text=\"디저트 추가\" onAddClick={onAddClick} />}\n                    classes={{ toolbar: classes.toolbar }}\n                    SelectProps={{ inputProps: { \"aria-label\": \"rows per page\" } }}\n                    labelDisplayedRows={() => ``}\n                    rowsPerPage={pageShow || 10}\n                    rowsPerPageOptions={[10, 20, 50, 100]}\n                    count={total}\n                    page={pageNumber > 0 ? pageNumber - 1 : 0}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            )}\n        </Paper>\n    );\n}\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n    container: {\n        minWidth: 1145,\n        maxWidth: \"100%\"\n    },\n    title: {\n        fontWeight: 500,\n        letterSpacing: \"-1.44px\"\n    },\n    table: {\n        borderTop: `1px solid ${palette.border[\"opacity0.1\"]}`,\n        borderBottom: `1px solid ${palette.border[\"opacity0.1\"]}`,\n        \"& tr\": {\n            border: `1px solid ${palette.border[\"opacity0.1\"]}`\n        },\n        \"& th\": {\n            minWidth: 100,\n            fontWeight: 600,\n            textAlign: \"left\",\n            color: palette.text[\"label\"],\n            background: palette.background[\"light\"],\n            borderRight: `1px solid ${palette.border[\"opacity0.1\"]}`\n        }\n    },\n    selectContent: {\n        \"& > div\": {\n            width: \"100%\",\n            margin: 0,\n            textAlign: \"center\",\n            \"& > div > div > div\": {\n                width: \"100%\"\n            }\n        }\n    },\n    editorRow: {\n        height: 400,\n        \"&& td\": {\n            height: 400,\n            padding: 0\n        }\n    }\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport theme from \"styles/theme/textfield\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction SingleTextField({ inputType = \"text\", name, value, fullWidth = true, handleChange }) {\n    return (\n        <ThemeProvider theme={theme}>\n            <TextField\n                id={`outlined-${name}`}\n                InputLabelProps={{ shrink: false }}\n                inputProps={{ \"aria-label\": `type ${name}` }}\n                label=\"\"\n                size=\"small\"\n                variant=\"outlined\"\n                type={inputType}\n                fullWidth={fullWidth}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            />\n        </ThemeProvider>\n    );\n}\n\nSingleTextField.propTypes = {\n    inputType: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default SingleTextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Select from \"react-select\";\nimport styles from \"styles/customize/select/TableSelectStyles\";\n\nfunction SingleSelect({ name, value, options, handleSelect }) {\n    return <Select aria-label={`select ${name}`} isClearable={false} isSearchable={false} styles={styles} options={options} name={name} defaultValue={value} onChange={handleSelect} />;\n}\n\nSingleSelect.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.object.isRequired,\n    options: PropTypes.array.isRequired,\n    handleSelect: PropTypes.func.isRequired\n};\n\nexport default SingleSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport Radio from \"@mui/material/Radio\";\n\nfunction RadioButton({ name, value, options, handleChange }) {\n    return (\n        <RadioGroup aria-label=\"radio\" row name={name} onChange={handleChange} value={value}>\n            {options.map((radio, index) => (\n                <FormControlLabel key={`radio-${index}`} value={radio.value} control={<Radio color=\"primary\" />} label={radio.label} />\n            ))}\n        </RadioGroup>\n    );\n}\n\nRadioButton.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default RadioButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nfunction CheckBox({ options, handleChange }) {\n    return (\n        <>\n            {options.map((checkbox, index) => (\n                <FormControlLabel key={`checkbox-${index}`} name={checkbox.name} label={checkbox.label} checked={checkbox.value} control={<Checkbox onChange={handleChange} color=\"primary\" />} />\n            ))}\n        </>\n    );\n}\n\nCheckBox.propTypes = {\n    options: PropTypes.array.isRequired,\n    handleChange: PropTypes.func.isRequired\n};\n\nexport default CheckBox;\n","import React, { useMemo } from \"react\";\nimport axios from \"axios\";\n\nimport { makeStyles } from \"@mui/styles\";\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst useStyles = makeStyles(() => ({\n    editorContainer: {\n        width: \"100%\",\n        height: 441,\n        \"& .ql-toolbar.ql-snow + .ql-container.ql-snow\": {\n            height: 400\n        },\n        \"& .ql-snow .ql-tooltip\": {\n            zIndex: 9999,\n            transform: \"translate(100px, 10px)\"\n        }\n    }\n}));\n\nexport default function Editor({ contents, setContents }) {\n    const classes = useStyles();\n    const quillRef = React.useRef(null);\n\n    const handleChange = (value) => {\n        setContents(value);\n    };\n\n    const imageCallBack = () => {\n        // 이미지 업로드 참고: https://github.com/quilljs/quill/issues/1400\n\n        const input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"accept\", \"image/*\");\n        input.click();\n        input.onchange = async function () {\n            const file = input.files ? input.files[0] : null;\n            console.log(\"custom 이미지 업로드\", file);\n            if (file) {\n                // 서버로 이미지를 업로드 Example\n                const formData = new FormData();\n                formData.append(\"files\", file);\n\n                let headers = {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\"\n                };\n\n                // 서버로 이미지를 upload한 다음\n                // 이미지의 URL을 에디터에 삽입\n                await axios\n                    .post(\"http://localhost:3000/upload\", formData, { headers })\n                    .then((res) => {\n                        const quill = quillRef.current.getEditor();\n                        const range = quill.getSelection(true);\n                        let path = res.data.result;\n                        let imageSrc = \"http://localhost:3000/\" + path; //이미지의 URL\n                        quill.insertEmbed(range.index, \"image\", imageSrc, \"user\");\n                    })\n                    .catch((err) => {\n                        alert(\"에러가 발생했습니다.\");\n                        console.log(\"error:: \", err);\n                    });\n            } else {\n                alert(\"이미지를 선택해주세요\");\n                return;\n            }\n        };\n    };\n\n    const modules = useMemo(\n        () => ({\n            toolbar: {\n                container: [\n                    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n                    [{ size: [\"small\", false, \"large\", \"huge\"] }, { color: [] }],\n                    [{ list: \"ordered\" }, { list: \"bullet\" }, { align: [] }],\n                    [\"link\", \"image\"],\n                    [\"clean\"]\n                ],\n                handlers: {\n                    image: imageCallBack\n                }\n            },\n            clipboard: { matchVisual: false }\n        }),\n        []\n    );\n\n    const formats = [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"size\", \"color\", \"list\", \"link\", \"image\", \"align\"];\n\n    return (\n        <div className={classes.editorContainer}>\n            <ReactQuill ref={quillRef} placeholder=\"내용을 입력해주세요.\" theme=\"snow\" value={contents} onChange={handleChange} formats={formats} modules={modules} />\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { modalSelector, setEditClose } from \"slices/modalSlice\";\n\nimport useStyles from \"styles/customize/components/ModalFormStyles\";\nimport theme from \"styles/theme/form\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Grid from \"@mui/material/Grid\";\n\nimport SingleTextField from \"common/table/SingleTextField\";\nimport Select from \"common/table/SingleSelect\";\nimport RadioButton from \"common/table/RadioButton\";\nimport CheckBox from \"common/table/CheckBox\";\nimport Editor from \"common/editor\";\nimport ModalButton from \"common/button/DefaultButton\";\nimport SubmitButton from \"common/button/SubmitButton\";\n\nconst options = [\n    { value: \"\", label: \"디저트를 선택해주세요\" },\n    { value: \"Cupcake\", label: \"Cupcake\" },\n    { value: \"Cookie\", label: \"Cookie\" },\n    { value: \"Snack\", label: \"Snack\" }\n];\n\nexport default function ExampleUpload() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { editOpen, editData } = useSelector(modalSelector);\n\n    const [loading, setLoading] = useState(false);\n    const [category, setCategory] = useState({ value: \"\", label: \"카테고리를 선택해주세요\" });\n    const [newData, setNewData] = useState({\n        name: \"\",\n        calories: 0,\n        useYn: \"Y\"\n    });\n    const [ingredients, setIngredients] = useState({\n        ingredients1: false,\n        ingredients2: false,\n        ingredients3: false\n    });\n    const [contents, setContents] = useState(\"\");\n\n    useEffect(() => {\n        if (editData) {\n            setCategory(editData.category);\n            setNewData({\n                name: editData.name,\n                calories: editData.calories,\n                useYn: editData.useYn\n            });\n            setIngredients({\n                ingredients1: editData.ingredients.includes(\"chocolate\"),\n                ingredients2: editData.ingredients.includes(\"strawberry\"),\n                ingredients3: editData.ingredients.includes(\"cheese\")\n            });\n            setContents(editData.contents);\n        }\n    }, [editData]);\n\n    const handleChange = (e) => setNewData((prevState) => ({ ...prevState, [e.target.name]: e.target.value }));\n\n    const handleSelect = (e) => setCategory(e);\n\n    const handleIngredients = (e) => setIngredients((prev) => ({ ...prev, [e.target.name]: e.target.checked }));\n\n    const handleSubmit = () => {\n        setLoading(true);\n        alert(JSON.stringify({ ...editData, contents, category, ...newData }, null, 2));\n        setLoading(false);\n    };\n\n    const onClose = () => {\n        setCategory({ value: \"\", label: \"카테고리를 선택해주세요\" });\n        setNewData({ name: \"\", calories: 0, useYn: \"Y\" });\n        setIngredients({ ingredients1: false, ingredients2: false, ingredients3: false });\n        setContents(\"\");\n\n        dispatch(setEditClose());\n    };\n\n    return (\n        <>\n            {editOpen && (\n                <Dialog\n                    open={editOpen}\n                    onClose={(event, reason) => {\n                        if (reason !== \"backdropClick\") {\n                            onClose(event, reason);\n                        }\n                    }}\n                    sx={{ p: 10 }}\n                    classes={{ paper: classes.container }}>\n                    <ThemeProvider theme={theme}>\n                        <DialogTitle className={classes.title}>Summary {editData?.modalStatus === \"modify\" ? \"수정\" : \"추가\"}</DialogTitle>\n                        <DialogContent>\n                            <table className={classes.table}>\n                                <colgroup>\n                                    <col width=\"20%\"></col>\n                                    <col width=\"80%\"></col>\n                                </colgroup>\n                                <tbody>\n                                    <tr>\n                                        <th>디저트명</th>\n                                        <td>\n                                            <SingleTextField inputType=\"text\" name=\"name\" value={newData.name} handleChange={handleChange} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th>카테고리</th>\n                                        <td className={classes.selectContent}>\n                                            <Select name=\"category\" value={category} options={options} handleSelect={handleSelect} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th>칼로리</th>\n                                        <td>\n                                            <SingleTextField inputType=\"number\" name=\"calories\" value={newData.calories} handleChange={handleChange} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th>판매여부</th>\n                                        <td>\n                                            <RadioButton\n                                                name=\"useYn\"\n                                                value={newData.useYn}\n                                                options={[\n                                                    { value: \"Y\", label: \"판매\" },\n                                                    { value: \"N\", label: \"미판매\" }\n                                                ]}\n                                                handleChange={handleChange}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th>재료</th>\n                                        <td>\n                                            <CheckBox\n                                                options={[\n                                                    { name: \"ingredients1\", value: ingredients.ingredients1, label: \"Chocolate\" },\n                                                    { name: \"ingredients2\", value: ingredients.ingredients2, label: \"Strawberry\" },\n                                                    { name: \"ingredients3\", value: ingredients.ingredients3, label: \"Cheese\" }\n                                                ]}\n                                                handleChange={handleIngredients}\n                                            />\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <table className={classes.table}>\n                                <tbody>\n                                    <tr>\n                                        <th>디저트 설명</th>\n                                    </tr>\n                                    <tr className={classes.editorRow}>\n                                        <td>\n                                            <Editor contents={contents} setContents={setContents} />\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </DialogContent>\n                        <DialogActions sx={{ py: 2, px: 2.5 }}>\n                            <Grid container spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                                <Grid item>\n                                    <ModalButton icon=\"cancel\" onClick={onClose} text=\"닫기\" />\n                                </Grid>\n                                <Grid item>\n                                    <SubmitButton type=\"button\" text=\"제출\" loading={loading} onClick={handleSubmit} />\n                                </Grid>\n                            </Grid>\n                        </DialogActions>\n                    </ThemeProvider>\n                </Dialog>\n            )}\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useQuery } from \"react-query\";\nimport { getData } from \"api\";\n\nimport { modalSelector, setDetailClose } from \"slices/modalSlice\";\nimport useMessage from \"hooks/useMessage\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Close from \"@mui/icons-material/Close\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { headCell, sampleDetailData } from \"components/Data\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        minWidth: 1145,\n        maxWidth: \"100%\"\n    },\n    title: {\n        width: \" 100%\",\n        minWidth: 1145,\n        fontWeight: 500,\n        letterSpacing: \"-1.44px\"\n    },\n    closeIcon: {\n        margin: \"16px 30px 16px 0\",\n        fontSize: 14,\n        lineHeight: 1.6,\n        cursor: \"pointer\"\n    },\n    table: {\n        minWidth: 1145\n    },\n    cursor: {\n        cursor: \"pointer\"\n    },\n    pagination: {\n        width: \"100%\",\n        minWidth: 750,\n        marginTop: 20,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        \"& > nav\": {\n            marginRight: \"auto\",\n            marginLeft: \"auto\"\n        }\n    }\n}));\n\nexport default function ExampleDetail() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { detailOpen, detailData } = useSelector(modalSelector);\n    const { menu, title, selectedIndex } = detailData || {};\n\n    const handleMessage = useMessage();\n\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const { isLoading, data: exampleData } = useQuery([\"example detail\", { selectedIndex, pageNumber }], () => getData(`/web/example/detail/${selectedIndex}`, { page: pageNumber }), {\n        enabled: selectedIndex && pageNumber ? true : false,\n        onError: (error) => {\n            handleMessage({ type: \"message\", ...error });\n        }\n    });\n\n    const { data = sampleDetailData } = exampleData || {};\n\n    const totalCount = Math.ceil(data?.length / 15) || 0; // total data\n\n    const ExampleData = ({ row }) => {\n        return (\n            <>\n                <TableCell align=\"center\">{row.name}</TableCell>\n                <TableCell align=\"center\">{row.calories}</TableCell>\n                <TableCell align=\"center\">{row.fat}</TableCell>\n                <TableCell align=\"center\">{row.carbs}</TableCell>\n                <TableCell align=\"center\">{row.protein}</TableCell>\n                <TableCell align=\"center\">{row.useYn}</TableCell>\n                <TableCell align=\"center\">{row.viewYn}</TableCell>\n            </>\n        );\n    };\n\n    const handleChange = (_, value) => setPageNumber(value);\n\n    const onClose = () => dispatch(setDetailClose());\n\n    return (\n        <>\n            {detailData && (\n                <Dialog\n                    open={detailOpen}\n                    onClose={(event, reason) => {\n                        if (reason !== \"backdropClick\") {\n                            onClose(event, reason);\n                        }\n                    }}\n                    sx={{ p: 10 }}\n                    classes={{ paper: classes.container }}>\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n                        <Grid item sx={{ width: \"auto\" }}>\n                            <DialogTitle className={classes.title}>{title}</DialogTitle>\n                        </Grid>\n                        <Grid item sx={{ width: \"auto\" }} container justifyContent=\"flex-end\">\n                            <Close onClick={onClose} className={classes.closeIcon} />\n                        </Grid>\n                    </Grid>\n                    <DialogContent>\n                        <Paper sx={{ borderRadius: \"4px\", pb: 2.5, border: \"1px solid #eeeeee\" }} elevation={0}>\n                            <Table className={classes.detailTable} aria-labelledby=\"detailTable\" size=\"medium\" aria-label=\"detail table\">\n                                <TableHead>\n                                    <TableRow>\n                                        {headCell[\"ExampleDetail\"].map((cell) => (\n                                            <TableCell key={cell.id} align=\"center\">\n                                                {cell.label}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {isLoading ? (\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={7}>\n                                                <CircularProgress size={12} color=\"primary\" /> Loading...\n                                            </TableCell>\n                                        </TableRow>\n                                    ) : (\n                                        <>\n                                            {data.length === 0 ? (\n                                                <TableRow>\n                                                    <TableCell align=\"center\" colSpan={7}>\n                                                        No Data\n                                                    </TableCell>\n                                                </TableRow>\n                                            ) : (\n                                                data.map((row, index) => {\n                                                    return (\n                                                        <TableRow hover tabIndex={-1} key={index}>\n                                                            {menu === \"Example\" && <ExampleData row={row} />}\n                                                        </TableRow>\n                                                    );\n                                                })\n                                            )}\n                                        </>\n                                    )}\n                                </TableBody>\n                            </Table>\n                            {data && (\n                                <div className={classes.pagination}>\n                                    <Pagination\n                                        color=\"primary\"\n                                        variant=\"outlined\"\n                                        shape=\"rounded\"\n                                        count={totalCount}\n                                        defaultPage={1}\n                                        siblingCount={0}\n                                        boundaryCount={1}\n                                        showFirstButton\n                                        showLastButton\n                                        page={pageNumber}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                            )}\n                        </Paper>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport useMenu from \"hooks/useMenu\";\nimport useSearch from \"hooks/useSearch\";\nimport useGetList from \"hooks/useGetList\";\n\nimport { setDetail, setEdit } from \"slices/modalSlice\";\n\nimport ExampleSearch from \"components/search/DateTermSearch\";\nimport ExampleTable from \"components/table/Table\";\nimport UploadModal from \"features/example/ExampleUpload\";\nimport DetailModal from \"features/example/ExampleDetail\";\nimport MessageModal from \"common/modal/MessageModal\";\n\nimport { sampleRowData } from \"components/Data\";\n\nexport default function Example() {\n    const dispatch = useDispatch();\n\n    const menu = useMenu({ page: \"Example\", menu: \"example\", menuTitle: \"Example\", menuNum: 1 }); // 페이지/메뉴 설정하기\n\n    // 리스트 데이터 가져오기\n    const {\n        params,\n        isLoading,\n        data: dataList\n    } = useGetList({\n        menu,\n        url: \"/web/example\"\n    });\n\n    // 검색하기\n    const handleSearch = useSearch({ params });\n\n    // 추가 모달 띄우기\n    const onAddClick = () => dispatch(setEdit({ open: true, data: null }));\n\n    // 상세 모달 띄우기\n    const onDetailClick = (index) => dispatch(setDetail({ open: true, data: { selectedIndex: index, menu: \"Example\", title: \"상세 조회\" } }));\n\n    // 수정 모달 띄우기\n    const onEditClick = (index, data) => {\n        dispatch(\n            setEdit({\n                open: true,\n                data: {\n                    index,\n                    modalStatus: \"modify\",\n                    contents: \"hello\",\n                    ...data,\n                    category: { value: data.category, label: data.category }\n                }\n            })\n        );\n    };\n\n    return (\n        <>\n            <ExampleSearch\n                menu={menu}\n                total={sampleRowData.length} // total={total}\n                handleSearch={handleSearch}\n            />\n            <ExampleTable\n                menu={menu}\n                loading={isLoading}\n                data={sampleRowData || dataList} // data={dataList}\n                total={sampleRowData.length} // total={total}\n                handleSearch={handleSearch}\n                onAddClick={onAddClick}\n                onEditClick={onEditClick}\n                onDetailClick={onDetailClick}\n            />\n            <UploadModal />\n            <DetailModal />\n            <MessageModal />\n        </>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\n\nimport { format } from \"utils/common\";\n\nimport theme from \"styles/theme/search\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport useStyles from \"styles/customize/components/SearchStyles\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport Button from \"@mui/material/Button\";\n\nimport DateSearchPicker from \"common/search/DatePicker\";\n\nimport { searchOption as option } from \"components/Data\";\n\nexport default function ChartSearch(props) {\n    const { handleSearch } = props;\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const searchState = useSelector(searchSelector);\n\n    const [term, setTerm] = useState(\"daily\");\n    const [dates, setDates] = useState({ starDate: null, endDate: null });\n\n    useEffect(() => {\n        setTerm(searchState[\"term\"] || \"daily\");\n        setDates((prev) => ({\n            ...prev,\n            startDate: searchState[\"startDate\"] ? format(searchState[\"term\"] || \"daily\", searchState[\"startDate\"]) : null,\n            endDate: searchState[\"endDate\"] ? format(searchState[\"term\"] || \"daily\", searchState[\"endDate\"]) : null\n        }));\n    }, [searchState]);\n\n    // 검색 조건 (select) 변경\n    const handleChange = (e) => {\n        setTerm(e.target.value);\n        setDates((prev) => ({\n            ...prev,\n            startDate: searchState[\"startDate\"] ? format(e.target.value || \"daily\", searchState[\"startDate\"]) : null,\n            endDate: searchState[\"endDate\"] ? format(e.target.value || \"daily\", searchState[\"endDate\"]) : null\n        }));\n    };\n\n    // 검색 기간 변경\n    const handleDate = (type, date) => setDates((prev) => ({ ...prev, [type]: date }));\n\n    // 조회 버튼 클릭\n    const handleSubmit = () => handleSearchFilter({ ...dates, term });\n\n    // 검색하기\n    const handleSearchFilter = (obj) => {\n        dispatch(setSearchFilters(obj));\n        handleSearch(obj);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid className={classes.termSearchRoot} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\n                <Grid item>\n                    <Typography variant=\"caption\" display=\"block\">\n                        기간\n                    </Typography>\n                    <Select className={classes.searchSelect} IconComponent={KeyboardArrowDownIcon} displayEmpty size=\"small\" name=\"term\" value={term} onChange={handleChange}>\n                        {option[\"term\"] &&\n                            option[\"term\"].map((list, index) => (\n                                <MenuItem key={index} value={list.value}>\n                                    {list.label}\n                                </MenuItem>\n                            ))}\n                    </Select>\n                </Grid>\n                <DateSearchPicker caption={true} term={term} dates={dates} handleDate={handleDate} />\n                <Grid item>\n                    <div className={classes.spacer}></div>\n                    <Button variant=\"contained\" onClick={handleSubmit}>\n                        조회\n                    </Button>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","import React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        y: {\n            min: 0,\n            ticks: {\n                stepSize: 1\n            }\n        }\n    },\n    animation: {\n        duration: 500\n    },\n    elements: {\n        line: {\n            tension: 0.3\n        }\n    },\n    plugins: {\n        legend: {\n            position: \"bottom\",\n            labels: {\n                padding: 25\n            }\n        }\n    }\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nconst getRandom = (max, min) => Math.floor(Math.random() * (max - min) + min);\n\nconst data = {\n    labels,\n    datasets: [\n        {\n            label: \"2020년\",\n            data: Array.from(Array(12)).map(() => getRandom(500, 50)),\n            borderColor: \"rgba(255, 99, 132, 0.5)\",\n            backgroundColor: \"rgba(255, 99, 132)\"\n        },\n        {\n            label: \"2021년\",\n            data: Array.from(Array(12)).map(() => getRandom(400, 150)),\n            borderColor: \"rgb(53, 162, 235, 0.5)\",\n            backgroundColor: \"rgba(53, 162, 235)\"\n        }\n    ]\n};\n\nexport default function LineChart({ lineLoading, lineChartData }) {\n    return (\n        <>\n            {lineLoading ? (\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n            ) : (\n                <div style={{ position: \"relative\", width: \"100%\", height: \"500px\" }}>\n                    <Line data={data} options={options} />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            position: \"bottom\",\n            labels: {\n                padding: 25\n            }\n        }\n    }\n};\n\nconst getRandom = (max, min) => Math.floor(Math.random() * (max - min) + min);\n\nconst data = {\n    labels: [\"January\", \"March\", \"May\", \"July\", \"September\", \"November\"],\n    datasets: [\n        {\n            label: \"월별 현황\",\n            data: Array.from(Array(6)).map(() => getRandom(20, 5)),\n            backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n            borderWidth: 1\n        }\n    ]\n};\n\nexport default function PieChart({ pieLoading, pieChartData }) {\n    return (\n        <>\n            {pieLoading ? (\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n            ) : (\n                <div style={{ position: \"relative\", height: \"500px\", width: \"500px\" }}>\n                    <Pie data={data} options={options} />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            position: \"bottom\",\n            labels: {\n                padding: 25\n            }\n        }\n    }\n};\n\nconst getRandom = (max, min) => Math.floor(Math.random() * (max - min) + min);\n\nconst data = {\n    labels: [\"February\", \"April\", \"June\", \"August\", \"October\", \"December\"],\n    datasets: [\n        {\n            label: \"월별 현황\",\n            data: Array.from(Array(6)).map(() => getRandom(20, 5)),\n            backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n            borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n            borderWidth: 1\n        }\n    ]\n};\n\nexport default function DoughnutChart({ doughnutLoading, doughnutChartData }) {\n    return (\n        <>\n            {doughnutLoading ? (\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n            ) : (\n                <div style={{ position: \"relative\", height: \"500px\", width: \"500px\" }}>\n                    <Doughnut data={data} options={options} />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { Chart as ChartJS, LinearScale, PointElement, Tooltip, Legend } from \"chart.js\";\nimport { Bubble } from \"react-chartjs-2\";\n\nChartJS.register(LinearScale, PointElement, Tooltip, Legend);\n\nconst options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            position: \"bottom\",\n            labels: {\n                padding: 25\n            }\n        }\n    },\n    scales: {\n        y: {\n            beginAtZero: true\n        }\n    }\n};\n\nconst getRandom = (max, min) => Math.floor(Math.random() * (max - min) + min);\n\nconst data = {\n    datasets: [\n        {\n            label: \"2020년\",\n            data: Array.from({ length: 50 }, () => ({\n                x: getRandom(100, -100),\n                y: getRandom(100, -100),\n                r: getRandom(20, 5)\n            })),\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n        },\n        {\n            label: \"2021년\",\n            data: Array.from({ length: 50 }, () => ({\n                x: getRandom(100, -100),\n                y: getRandom(100, -100),\n                r: getRandom(20, 5)\n            })),\n            backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n        }\n    ]\n};\n\nexport default function BubbleChart({ bubbleLoading, bubbleChartData }) {\n    return (\n        <>\n            {bubbleLoading ? (\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n            ) : (\n                <div style={{ position: \"relative\", width: \"100%\", height: \"500px\" }}>\n                    <Bubble data={data} options={options} />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            position: \"bottom\",\n            labels: {\n                padding: 25\n            }\n        }\n    },\n    scales: {\n        x: {\n            stacked: true\n        },\n        y: {\n            stacked: true\n        }\n    }\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nconst getRandom = (max, min) => Math.floor(Math.random() * (max - min) + min);\n\nexport const data = {\n    labels,\n    datasets: [\n        {\n            label: \"Channel\",\n            data: labels.map(() => getRandom(1000, 0)),\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n        },\n        {\n            label: \"Gucci\",\n            data: labels.map(() => getRandom(1000, 0)),\n            backgroundColor: \"rgba(54, 162, 235, 0.2)\"\n        },\n        {\n            label: \"Prada\",\n            data: labels.map(() => getRandom(1000, 0)),\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\"\n        }\n    ]\n};\n\nexport default function StackedBarChart({ stackedBarLoading, stackedBarChartData }) {\n    return (\n        <>\n            {stackedBarLoading ? (\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n            ) : (\n                <div style={{ position: \"relative\", width: \"100%\", height: \"500px\" }}>\n                    <Bar options={options} data={data} />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            position: \"bottom\",\n            labels: {\n                padding: 25\n            }\n        }\n    }\n};\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nconst getRandom = (max, min) => Math.floor(Math.random() * (max - min) + min);\n\nconst data = {\n    labels,\n    datasets: [\n        {\n            label: \"Prada\",\n            data: labels.map(() => getRandom(1000, 0)),\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n        },\n        {\n            label: \"Channel\",\n            data: labels.map(() => getRandom(1000, 0)),\n            backgroundColor: \"rgba(54, 162, 235, 0.2)\"\n        },\n        {\n            label: \"Gucci\",\n            data: labels.map(() => getRandom(1000, 0)),\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\"\n        }\n    ]\n};\n\nexport default function BarChart({ barLoading, barChartData }) {\n    return (\n        <>\n            {barLoading ? (\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n            ) : (\n                <div style={{ position: \"relative\", width: \"100%\", height: \"500px\" }}>\n                    <Bar options={options} data={data} />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\n\nimport LineChart from \"common/chart/LineChart\";\nimport PieChart from \"common/chart/PieChart\";\nimport DoughnutChart from \"common/chart/DoughnutChart\";\nimport BubbleChart from \"common/chart/BubbleChart\";\nimport StackedBarChart from \"common/chart/StackedBarChart\";\nimport BarChart from \"common/chart/BarChart\";\n\nexport default function Charts(props) {\n    return (\n        <Grid container rowSpacing={2.5} columnSpacing={2.5} justifyContent=\"flex-start\" alignItems=\"center\" direction=\"row\">\n            <Grid item xs={6}>\n                <Paper elevation={0} sx={{ padding: 2.5 }}>\n                    <LineChart xs={6} {...props} />\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper elevation={0} sx={{ width: \"100%\", padding: 2.5, display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <PieChart {...props} />\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper elevation={0} sx={{ padding: 2.5 }}>\n                    <BubbleChart {...props} />\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper elevation={0} sx={{ width: \"100%\", padding: 2.5, display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <DoughnutChart {...props} />\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper elevation={0} sx={{ padding: 2.5 }}>\n                    <StackedBarChart {...props} />\n                </Paper>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper elevation={0} sx={{ padding: 2.5, display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <BarChart {...props} />\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\n\nimport useMenu from \"hooks/useMenu\";\nimport useSearch from \"hooks/useSearch\";\nimport useGetList from \"hooks/useGetList\";\n\nimport ChartSearch from \"components/search/ChartSearch\";\nimport Charts from \"features/chart/components/Charts\";\nimport MessageModal from \"common/modal/MessageModal\";\n\nexport default function Chart() {\n    const menu = useMenu({ page: \"Chart\", menu: \"chart\", menuTitle: \"요약보기\", menuNum: 8 }); // 페이지/메뉴 설정하기\n\n    // line chart 데이터 가져오기\n    const {\n        params,\n        isLoading: lineLoading,\n        data: lineChartData\n    } = useGetList({\n        menu,\n        url: \"/web/line-chart\"\n    });\n\n    // pie chart 데이터 가져오기\n    const { isLoading: pieLoading, data: pieChartData } = useGetList({\n        menu,\n        url: \"/web/pie-chart\"\n    });\n\n    const handleSearch = useSearch({ params }); // 검색하기\n\n    return (\n        <>\n            <ChartSearch heading=\"기간 검색\" menu={menu} handleSearch={handleSearch} />\n            <Charts lineLoading={lineLoading} lineChartData={lineChartData} pieLoading={pieLoading} pieChartData={pieChartData} />\n            <MessageModal />\n        </>\n    );\n}\n","import React from \"react\";\n\nimport useStyles from \"styles/customize/components/SearchStyles\";\nimport theme from \"styles/theme/search\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport Button from \"@mui/material/Button\";\n\nimport DatePicker from \"common/search/DatePicker\";\n\nimport { searchOption } from \"components/Data\";\n\nexport default function Search({ title, type, term, dates, handleChange, handleDate, handleSubmit }) {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n                {title}\n            </Typography>\n            <Grid columnSpacing={2} container justifyContent=\"flex-start\" alignItems=\"center\" sx={{ marginBottom: 2.5 }}>\n                <Grid item>\n                    <Select\n                        className={classes.searchSelect}\n                        IconComponent={KeyboardArrowDownIcon}\n                        displayEmpty\n                        size=\"small\"\n                        name=\"term\"\n                        value={term[\"term\"]}\n                        onChange={(e) => handleChange(\"term\", e.target.value)}>\n                        {searchOption[\"term\"].map((list) => (\n                            <MenuItem key={`key-${list.label}`} value={list.value}>\n                                {list.label}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </Grid>\n                <DatePicker term={term[\"term\"]} dates={dates} handleDate={handleDate} />\n                <Grid item>\n                    <Button variant=\"contained\" onClick={() => handleSubmit(type)}>\n                        조회\n                    </Button>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    );\n}\n","import React from \"react\";\n\nimport useStyles from \"styles/customize/table/SearchTableStyles\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { headCell } from \"components/Data\";\n\nexport default function ChartTable(props) {\n    const { menu, loading, data } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper} elevation={0}>\n            <TableContainer sx={{ overflowX: \"auto\" }}>\n                <Table className={classes.table} aria-labelledby={`${menu.toLowerCase()}Table`} size=\"medium\" aria-label={`${menu.toLowerCase()} table`}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell width={50} className={classes.sticky}>\n                                Total\n                            </TableCell>\n                            {headCell[menu].map((headCell) => (\n                                <TableCell key={headCell.id} align=\"center\">\n                                    {headCell.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {loading ? (\n                            <TableRow>\n                                <TableCell align=\"center\" colSpan={50}>\n                                    <CircularProgress size={12} color=\"primary\" /> 데이터를 불러오는 중입니다.\n                                </TableCell>\n                            </TableRow>\n                        ) : data.length === 0 ? (\n                            <TableRow>\n                                <TableCell align=\"center\" colSpan={50}>\n                                    데이터가 존재하지 않습니다.\n                                </TableCell>\n                            </TableRow>\n                        ) : (\n                            data.map((row, index) => {\n                                return (\n                                    <TableRow key={index}>\n                                        <TableCell className={classes.sticky} component=\"th\" scope=\"row\">\n                                            {row.name}\n                                        </TableCell>\n                                        {Array.from(Array(50)).map((_, index) => (\n                                            <TableCell key={index} align=\"center\">\n                                                {parseInt(index) + 1}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                );\n                            })\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchSelector, setSearchFilters } from \"slices/searchSlice\";\nimport useMenu from \"hooks/useMenu\";\nimport useGetList from \"hooks/useGetList\";\n\nimport { format, queryToString } from \"utils/common\";\nimport { sampleChartData } from \"components/Data\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\n\nimport Search from \"features/chart/components/Search\";\nimport LineChart from \"common/chart/LineChart\";\nimport Table from \"components/table/ChartTable\";\nimport MessageModal from \"common/modal/MessageModal\";\n\nexport default function ChartTable() {\n    const history = useHistory();\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const searchState = useSelector(searchSelector);\n    const menu = useMenu({ page: \"ChartTable\", menu: \"chart\", menuTitle: \"요약보기\", menuNum: 9 }); // 페이지/메뉴 설정하기\n\n    const [dessert, setDessert] = useState({ term: \"daily\", startDate: null, endDate: null }); // dataset 1\n    const [food, setFood] = useState({ term: \"monthly\", startDate: null, endDate: null }); // dataset 2\n\n    useEffect(() => {\n        setDessert((prev) => ({\n            ...prev,\n            term: searchState[\"dessertTerm\"] || \"daily\",\n            startDate: searchState[\"dessertStartDate\"] ? new Date(searchState[\"dessertStartDate\"]) : null,\n            endDate: searchState[\"dessertEndDate\"] ? new Date(searchState[\"dessertEndDate\"]) : null\n        }));\n\n        setFood((prev) => ({\n            ...prev,\n            term: searchState[\"foodTerm\"] || \"monthly\",\n            startDate: searchState[\"foodStartDate\"] ? new Date(searchState[\"foodStartDate\"]) : null,\n            endDate: searchState[\"foodEndDate\"] ? new Date(searchState[\"foodEndDate\"]) : null\n        }));\n    }, [searchState]);\n\n    const handleFood = (name, value) => setFood((prev) => ({ ...prev, [name]: value }));\n\n    const handleDessert = (name, value) => setDessert((prev) => ({ ...prev, [name]: value }));\n\n    // 조회 버튼 클릭\n    const handleSubmit = (type) => {\n        if (type === \"food\") {\n            handleSearchFilter({\n                foodTerm: food.term,\n                foodStartDate: food.startDate ? format(food.term, food.startDate) : null,\n                foodEndDate: food.endDate ? format(food.term, food.endDate) : null\n            });\n        } else if (type === \"dessert\") {\n            handleSearchFilter({\n                dessertTerm: dessert.term,\n                dessertStartDate: dessert.startDate ? format(dessert.term, dessert.startDate) : null,\n                dessertEndDate: dessert.endDate ? format(dessert.term, dessert.endDate) : null\n            });\n        }\n    };\n\n    // 검색하기\n    const handleSearchFilter = (obj) => {\n        dispatch(setSearchFilters(obj));\n        handleSearch({\n            foodTerm: food.startDate || food.endDate ? food.term : null,\n            foodStartDate: food.startDate ? format(food.term, food.startDate) : null,\n            foodEndDate: food.endDate ? format(food.term, food.endDate) : null,\n            dessertTerm: dessert.startDate || dessert.endDate ? dessert.term : null,\n            dessertStartDate: dessert.startDate ? format(dessert.term, dessert.startDate) : null,\n            dessertEndDate: dessert.endDate ? format(dessert.term, dessert.endDate) : null\n        });\n    };\n\n    // Dataset 1\n    const { isLoading: dataset1Loading, data: dataset1 } = useGetList({\n        menu,\n        url: \"/web/food-chart\",\n        type: \"food\"\n    });\n\n    // Dataset 2\n    const { isLoading: dataset2Loading, data: dataset2 } = useGetList({\n        menu,\n        url: \"/web/dessert-chart\",\n        type: \"dessert\"\n    });\n\n    // 검색하기\n    const handleSearch = (obj) => history.push({ pathname: location.pathname, search: queryToString(obj) });\n\n    return (\n        <>\n            <Paper elevation={0} sx={{ padding: 2.5 }}>\n                <Search title=\"디저트별 칼로리 하루 섭취량\" type=\"dessert\" term={dessert} dates={dessert} handleChange={handleDessert} handleDate={handleDessert} handleSubmit={handleSubmit} />\n                <Grid container rowSpacing={2.5}>\n                    <Grid sx={{ width: \"100%\" }} item>\n                        <LineChart />\n                    </Grid>\n                    <Grid sx={{ width: \"100%\" }} item>\n                        <Table menu={menu} loading={dataset1Loading} data={sampleChartData || dataset1} />\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Paper elevation={0} sx={{ marginTop: 2.5, padding: 2.5 }}>\n                <Search title=\"음식별 칼로리 하루 섭취량\" type=\"food\" term={food} dates={food} handleChange={handleFood} handleDate={handleFood} handleSubmit={handleSubmit} />\n                <Grid container rowSpacing={2.5}>\n                    <Grid sx={{ width: \"100%\" }} item>\n                        <LineChart />\n                    </Grid>\n                    <Grid sx={{ width: \"100%\" }} item>\n                        <Table menu={menu} loading={dataset2Loading} data={sampleChartData || dataset2} />\n                    </Grid>\n                </Grid>\n            </Paper>\n            <MessageModal />\n        </>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport useMenu from \"hooks/useMenu\";\nimport useMessage from \"hooks/useMessage\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport useStyles from \"styles/customize/table/DetailTableStyles\";\nimport theme from \"styles/theme/form\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Input from \"common/form/Input\";\nimport ErrorMessage from \"common/form/ErrorMessage\";\nimport SubmitButton from \"common/button/SubmitButton\";\nimport MessageModal from \"common/modal/MessageModal\";\n\nimport { schema } from \"components/Data\";\n\nexport default function ChangeInfo() {\n    const classes = useStyles();\n    const menu = useMenu({ page: \"ChangeInfo\", menu: null, menuTitle: \"정보 수정\", menuNum: null });\n\n    const { errors, clearErrors, reset, control, register, handleSubmit } = useForm({\n        resolver: yupResolver(schema[menu])\n    });\n\n    const handleMessage = useMessage();\n\n    useEffect(() => {\n        clearErrors();\n        reset({\n            name: \"이름\",\n            email: \"이메일\",\n            phone: \"전화번호\"\n        });\n    }, [clearErrors, reset]);\n\n    // 데이터 수정하기\n    const onSubmit = (data) => {\n        console.log(\"data\", data);\n        handleMessage({ type: \"message\", message: \"수정되었습니다.\" });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\n                <table className={classes.table}>\n                    <colgroup>\n                        <col width=\"12%\" />\n                        <col width=\"88%\" />\n                    </colgroup>\n                    <tbody>\n                        <tr>\n                            <th>이름</th>\n                            <td>\n                                <Input name=\"name\" defaultValue=\"이름\" inputType=\"text\" control={control} />\n                                {errors.name && <ErrorMessage text=\"이름을 입력해주세요.\" />}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>이메일</th>\n                            <td>\n                                <Input name=\"email\" defaultValue=\"이메일\" inputType=\"text\" control={control} />\n                                {errors.email && <ErrorMessage text=\"이메일을 입력해주세요.\" />}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>전화번호</th>\n                            <td>\n                                <Input name=\"phone\" defaultValue=\"전화번호\" inputType=\"phone\" control={control} />\n                                {errors.phone && <ErrorMessage text=\"전화번호를 입력해주세요.\" />}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>이미지</th>\n                            <td>\n                                <input name=\"image\" type=\"file\" ref={register} />\n                                {errors.image && <ErrorMessage text=\"이미지를 선택해주세요.\" />}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\n                    <SubmitButton type=\"submit\" text=\"정보 수정하기\" />\n                </Grid>\n            </form>\n            <MessageModal />\n        </ThemeProvider>\n    );\n}\n","import React, { useState } from \"react\";\nimport useMenu from \"hooks/useMenu\";\nimport useMessage from \"hooks/useMessage\";\n\nimport theme from \"styles/theme/form\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ThemeProvider } from \"@mui/material\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\nimport MessageModal from \"common/modal/MessageModal\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n    container: {\n        width: \"100%\",\n        height: 560,\n        margin: \"0 auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    grid: {\n        width: 322\n    },\n    title: {\n        marginBottom: 40,\n        fontWeight: 300,\n        fontSize: 30,\n        lineHeight: \"38px\",\n        letterSpacing: \"-1.8px\"\n    },\n    curPassword: {\n        width: \"100%\",\n        height: 48,\n        marginBottom: 20\n    },\n    newPassword: {\n        width: \"100%\",\n        height: 48,\n        marginBottom: 4\n    },\n    pwCheck: {\n        width: \"100%\",\n        height: 48,\n        marginBottom: 32\n    },\n    input: {\n        width: \"100%\",\n        height: \"100%\",\n        \"& > *\": {\n            height: \"100%\"\n        }\n    },\n    submitContainer: {\n        width: \"100%\",\n        height: 48\n    },\n    submitButton: {\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: palette.primary[\"main\"],\n        cursor: \"pointer\",\n        boxShadow: \"unset\",\n        fontSize: 13,\n        fontWeight: 500,\n        letterSpacing: \"-0.26px\",\n        color: \"#ffffff\",\n        border: \"none\",\n        borderRadius: 4,\n        outline: \"none\",\n        \"&:hover\": {\n            boxShadow: \"unset\",\n            backgroundColor: palette.primary[\"main\"]\n        }\n    }\n}));\n\nexport default function ChangePassword() {\n    const classes = useStyles();\n    useMenu({ page: \"ChangePassword\", menu: null, menuTitle: \"비밀번호 수정\", menuNum: null });\n\n    const handleMessage = useMessage();\n\n    const [pw, setPw] = useState(\"\");\n    const [newPw, setNewPw] = useState(\"\");\n    const [pwCheck, setPwCheck] = useState(\"\");\n\n    const handleSubmit = () => {\n        console.log(pw, pwCheck, newPw);\n        handleMessage({ type: \"message\", message: \"비밀번호가 변경되었습니다.\" });\n        // handleMessage({type: \"message\", message: \"비밀번호 변경에 실패하였습니다.\"});\n        // handleMessage({type: \"message\", message: \"비밀번호를 다시 확인해주시기 바랍니다.\"});\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.container}>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" direction=\"column\" className={classes.grid}>\n                    <Grid item>\n                        <Typography variant=\"h3\" component=\"h3\" className={classes.title}>\n                            주기적인 <span style={{ fontWeight: 500 }}>비밀번호 변경</span>으로 <br />\n                            안전하게 <span style={{ fontWeight: 500 }}>정보</span>를 <span style={{ fontWeight: 500 }}>보호</span>하세요\n                        </Typography>\n                    </Grid>\n                    <Grid item className={classes.curPassword}>\n                        <TextField\n                            InputLabelProps={{ shrink: false }}\n                            inputProps={{ \"aria-label\": \"current password\" }}\n                            className={classes.input}\n                            id=\"outlined-pw\"\n                            label=\"\"\n                            size=\"small\"\n                            type=\"password\"\n                            placeholder=\"현재 비밀번호\"\n                            variant=\"outlined\"\n                            onChange={(e) => setPw(e.target.value)}\n                            value={pw}\n                        />\n                    </Grid>\n                    <Grid item className={classes.newPassword}>\n                        <TextField\n                            InputLabelProps={{ shrink: false }}\n                            inputProps={{ \"aria-label\": \"new password\" }}\n                            className={classes.input}\n                            id=\"outlined-new-pw\"\n                            label=\"\"\n                            size=\"small\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                            placeholder=\"새 비밀번호\"\n                            value={newPw}\n                            onChange={(e) => setNewPw(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item className={classes.pwCheck}>\n                        <TextField\n                            InputLabelProps={{ shrink: false }}\n                            inputProps={{ \"aria-label\": \"new password check\" }}\n                            className={classes.input}\n                            id=\"outlined-pw-check\"\n                            label=\"\"\n                            size=\"small\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                            placeholder=\"새 비밀번호 확인\"\n                            value={pwCheck}\n                            onChange={(e) => setPwCheck(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item className={classes.submitContainer}>\n                        <Button variant=\"contained\" className={classes.submitButton} onClick={handleSubmit}>\n                            비밀번호 수정하기\n                        </Button>\n                    </Grid>\n                </Grid>\n                <MessageModal />\n            </div>\n        </ThemeProvider>\n    );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    content: {\n        width: 600,\n        textAlign: \"center\"\n    },\n    img: {\n        width: 592,\n        height: 378,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 170\n    },\n    text: {\n        marginBottom: 12,\n        fontSize: 30,\n        lineHeight: \"45px\",\n        letterSpacing: \"-1.5px\",\n        textAlign: \"center\"\n    },\n    button: {\n        width: 196,\n        height: 40,\n        marginBottom: 16,\n        borderRadius: 4,\n        fontSize: 13,\n        fontWeight: 600,\n        lineHeight: \"17px\",\n        letterSpacing: \"-0.52px\"\n    }\n}));\n\nexport default function Page404(props) {\n    const classes = useStyles();\n\n    const handlePageChange = () => props.history.replace(\"/\");\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <div className={classes.img}>404</div>\n                <h3 className={classes.text}>페이지를 찾을 수 없습니다.</h3>\n                <Button color=\"secondary\" variant=\"contained\" className={classes.button} disableRipple type=\"button\" onClick={handlePageChange}>\n                    메인 페이지로 돌아가기\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport useMenu from \"hooks/useMenu\";\n\nimport theme from \"styles/theme/search\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\n\nimport DateSearchPicker from \"common/search/DatePicker\";\nimport DateTermButton from \"common/search/DateTermButton\";\nimport SearchSelect from \"common/search/SearchSelect\";\nimport SearchRadio from \"common/search/SearchRadio\";\nimport SearchField from \"common/search/SearchField\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"100%\",\n        margin: \"0 auto\",\n        padding: 20,\n        background: \"#ffffff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: \"column\"\n    },\n    componentContainer: {\n        marginBottom: 30,\n        \"&:last-child\": {\n            marginBottom: 0\n        }\n    },\n    title: {\n        marginBottom: 10\n    },\n    background: {\n        width: \"100%\",\n        marginBottom: 50,\n        fontSize: 16,\n        fontWeight: 600,\n        lineHeight: \"24px\",\n        color: \"black\"\n    },\n    table: {\n        width: \"100%\",\n        marginBottom: 80,\n        color: \"black\",\n        borderCollapse: \"collapse\",\n        \"& thead\": {\n            color: theme.palette.primary.main,\n            \"& th\": {\n                height: 40\n            }\n        },\n        \"& th\": {\n            fontWeight: 600,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`\n        },\n        \"& td\": {\n            height: 45,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`,\n            textAlign: \"center\"\n        },\n        \"& tbody th\": {\n            width: \"10%\"\n        },\n        \"& td:nth-child(2n+1)\": {\n            width: \"10%\"\n        },\n        \"& td:nth-child(2n)\": {\n            width: \"10%\"\n        },\n        \"& td:last-child\": {\n            width: \"60%\"\n        }\n    }\n}));\n\nexport default function Search() {\n    const classes = useStyles();\n\n    useMenu({ page: \"Search Component Demo\", menu: \"components\", menuTitle: \"Search\", menuNum: 2 });\n\n    const handleDemo = () => alert(\"Search Demo :D\");\n\n    return (\n        <div className={classes.container}>\n            <ThemeProvider theme={theme}>\n                <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                    Date Picker\n                </Typography>\n                <Grid className={classes.componentContainer} container spacing={2} alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                    <DateSearchPicker dateFormat=\"yyyy-MM-dd\" term=\"daily\" dates={{ startDate: \"2021-03-23\", endDate: \"2021-12-03\" }} handleDate={handleDemo} />\n                </Grid>\n                <Grid className={classes.componentContainer} container spacing={2} alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                    <DateSearchPicker dateFormat=\"yyyy-MM\" term=\"monthly\" dates={{ startDate: \"2021-03\", endDate: \"2021-12\" }} handleDate={handleDemo} />\n                </Grid>\n                <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                    Date Term Button\n                </Typography>\n                <Grid className={classes.componentContainer} container spacing={2} alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                    <DateTermButton menu=\"Dashboard\" dates={{ startDate: \"2021-03-23\", endDate: \"2021-12-03\" }} handleDate={handleDemo} handleChange={handleDemo} handleClick={handleDemo} />\n                </Grid>\n                <Grid className={classes.componentContainer} container spacing={2} alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                    <DateTermButton menu=\"SearchComponent\" dates={{ startDate: \"2021-03-23\", endDate: \"2021-12-03\" }} handleDate={handleDemo} handleChange={handleDemo} handleClick={handleDemo} />\n                </Grid>\n                <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                    Search Select\n                </Typography>\n                <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                    <SearchSelect menu=\"SearchComponent\" name=\"gender\" handleChange={handleDemo} />\n                </Grid>\n                <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                    Search Radio\n                </Typography>\n                <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                    <SearchRadio name=\"gender\" handleChange={handleDemo} />\n                </Grid>\n                <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                    Search Condition + Search Keyword\n                </Typography>\n                <Grid className={classes.componentContainer} container spacing={2} alignItems=\"center\" justifyContent=\"flex-start\">\n                    <SearchField menu=\"SearchComponent\" searchType=\"\" searchKeyword=\"EXAMPLE...\" handleChange={handleDemo} handleKeyword={handleDemo} />\n                </Grid>\n                <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                    Search Button\n                </Typography>\n                <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                    <Grid item>\n                        <div className={classes.spacer}></div>\n                        <Button variant=\"contained\" onClick={handleDemo}>\n                            조회\n                        </Button>\n                    </Grid>\n                </Grid>\n            </ThemeProvider>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Search Props Guide\n            </Typography>\n            <code className={classes.background}>\n                import DateSearchPicker from \"common/search/DatePicker\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>caption</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>true || false</td>\n                        </tr>\n                        <tr>\n                            <th>term</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"daily\" || \"monthly\"</td>\n                        </tr>\n                        <tr>\n                            <th>dates</th>\n                            <td>object</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`{startDate: new Date(), endDate: new Date()}`}</td>\n                        </tr>\n                        <tr>\n                            <th>handleDate</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change date\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import DateTermButton from \"common/search/DateTermButton\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>menu</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>\"Dashboard\" / \"Example\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change date select (regDate / modDate)\")`}</td>\n                        </tr>\n                        <tr>\n                            <th>dates</th>\n                            <td>object</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`{startDate: new Date(), endDate: new Date()}`}</td>\n                        </tr>\n                        <tr>\n                            <th>handleDate</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change date\")`}</td>\n                        </tr>\n                        <tr>\n                            <th>handleClick</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"click button\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import SearchSelect from \"common/search/SearchSelect\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>menu</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>\"Dashboard\" / \"Example\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>dataList</th>\n                            <td>array</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>{`[{\"value\": \"\", \"label\": \"전체\"}, {\"value\": \"Y\", \"label\": \"사용\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>value</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"\"</td>\n                            <td>\"Y\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"useYn\" / \"viewYn\" / \"category\" / \"brand\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change value\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import SearchRadio from \"common/search/SearchRadio\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>dataList</th>\n                            <td>array</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>{`[{\"value\": \"\", \"label\": \"전체\"}, {\"value\": \"Y\", \"label\": \"사용\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"useYn\" / \"viewYn\" / \"category\" / \"brand\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change value\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import SearchField from \"common/search/SearchField\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>dataList</th>\n                            <td>array</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>{`[{\"value\": \"\", \"label\": \"전체\"}, {\"value\": \"Y\", \"label\": \"사용\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>menu</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"Dashboard\" / \"Example\" </td>\n                        </tr>\n                        <tr>\n                            <th>searchType</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"all\" / \"id\" / \"name\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change search condition\")`}</td>\n                        </tr>\n                        <tr>\n                            <th>searchKeyword</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"test\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>handleKeyword</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"search keyword\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </code>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport useMenu from \"hooks/useMenu\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Pagination from \"@mui/material/Pagination\";\n\nimport Button from \"common/table/Button\";\nimport SingleTextField from \"common/table/SingleTextField\";\nimport TextField from \"common/table/TextField\";\nimport Select from \"common/table/Select\";\nimport SingleSelect from \"common/table/SingleSelect\";\nimport CheckBox from \"common/table/CheckBox\";\nimport RadioButton from \"common/table/RadioButton\";\n\nimport { tableSelectOptions } from \"components/Data\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: \"100%\",\n        margin: \"0 auto\",\n        padding: 20,\n        background: \"#ffffff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: \"column\"\n    },\n    componentContainer: {\n        marginBottom: 40,\n        \"&:last-child\": {\n            marginBottom: 0\n        }\n    },\n    title: {\n        marginBottom: 10\n    },\n    spacer: {\n        marginRight: 20\n    },\n    background: {\n        width: \"100%\",\n        marginBottom: 50,\n        borderRadius: 5,\n        fontSize: 16,\n        fontWeight: 600,\n        lineHeight: \"24px\",\n        color: \"black\"\n    },\n    table: {\n        width: \"100%\",\n        marginBottom: 80,\n        color: \"black\",\n        borderCollapse: \"collapse\",\n        \"& thead\": {\n            color: theme.palette.primary.main,\n            \"& th\": {\n                height: 40\n            }\n        },\n        \"& th\": {\n            fontWeight: 600,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`\n        },\n        \"& td\": {\n            height: 45,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`,\n            textAlign: \"center\"\n        },\n        \"& tbody th\": {\n            width: \"10%\"\n        },\n        \"& td:nth-child(2n+1)\": {\n            width: \"10%\"\n        },\n        \"& td:nth-child(2n)\": {\n            width: \"10%\"\n        },\n        \"& td:last-child\": {\n            width: \"60%\"\n        }\n    }\n}));\n\nexport default function Table() {\n    const classes = useStyles();\n\n    useMenu({ page: \"Table Component Demo\", menu: \"components\", menuTitle: \"Table\", menuNum: 3 });\n\n    const handleDemo = () => {\n        alert(\"Table Demo...\");\n    };\n\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const handleChange = (event, value) => {\n        setPageNumber(value);\n    };\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Text Input (검색 결과 테이블)\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                <Grid item>\n                    <TextField index={0} inputType=\"number\" name=\"sortOrder\" value={1} handleChange={handleDemo} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Text Input (상세 / 모달)\n            </Typography>\n            <Grid className={classes.componentContainer} spacing={2} container alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                <Grid item>\n                    <SingleTextField inputType=\"text\" name=\"textfield\" value=\"Example...\" handleChange={handleDemo} />\n                </Grid>\n                <Grid item>\n                    <SingleTextField inputType=\"number\" name=\"sortOrder\" value={1} handleChange={handleDemo} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Select (검색 결과 테이블)\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Select rowIndex={0} name=\"useYn\" value=\"Y\" label=\"사용\" options={tableSelectOptions[\"useYn\"]} handleSelect={handleDemo} />\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item>\n                    <Select rowIndex={0} name=\"viewYn\" value=\"Y\" label=\"노출\" options={tableSelectOptions[\"viewYn\"]} handleSelect={handleDemo} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Select (페이지 / 모달)\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <SingleSelect name=\"useYn\" value={{ value: \"Y\", label: \"사용\" }} options={tableSelectOptions[\"useYn\"]} handleSelect={handleDemo} />\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item>\n                    <SingleSelect name=\"viewYn\" value={{ value: \"Y\", label: \"노출\" }} options={tableSelectOptions[\"viewYn\"]} handleSelect={handleDemo} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Checkbox\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                <CheckBox\n                    options={[\n                        { name: \"ingredients1\", value: true, label: \"Chocolate\" },\n                        { name: \"ingredients2\", value: false, label: \"Strawberry\" }\n                    ]}\n                    handleChange={handleDemo}\n                />\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Radio Button\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                <RadioButton name=\"useYn\" value=\"Y\" options={tableSelectOptions[\"useYn\"]} handleChange={handleDemo} />\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Button\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Button disabled={false} pageType=\"edit\" text=\"수정\" rowIndex={0} onClick={handleDemo} />\n                    <Button disabled={true} text=\"삭제\" rowIndex={0} onClick={handleDemo} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Pagination\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"flex-start\" justifyContent=\"center\" direction=\"column\">\n                <Grid item>\n                    <Pagination\n                        color=\"primary\"\n                        count={10}\n                        defaultPage={1}\n                        siblingCount={0}\n                        boundaryCount={1}\n                        variant=\"outlined\"\n                        shape=\"rounded\"\n                        showFirstButton\n                        showLastButton\n                        page={pageNumber}\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <br />\n                <Grid item>\n                    <Pagination color=\"primary\" count={10} variant=\"outlined\" shape=\"rounded\" showFirstButton showLastButton page={pageNumber} onChange={handleChange} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table Props Guide\n            </Typography>\n            <code className={classes.background}>\n                import TextField from \"common/table/TextField\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>index</th>\n                            <td>number</td>\n                            <td>No</td>\n                            <td>0</td>\n                            <td>index number</td>\n                        </tr>\n                        <tr>\n                            <th>inputType</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"text\"</td>\n                            <td>\"text\" / \"number\" / \"tel\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"name\" / \"quantity\" / \"calories\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>value</th>\n                            <td>string || number</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"Strawberry Chocolate Cupcake\" / 8.9 ....\"</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change value\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import TextField from \"common/table/SingleTextField\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>inputType</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"text\"</td>\n                            <td>\"text\" / \"number\" / \"tel\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"name\" / \"quantity\" / \"calories\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>value</th>\n                            <td>string || number</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"Strawberry Chocolate Cupcake\" / 8.9 ....\"</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"change value\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import Select from \"common/table/Select\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>rowIndex</th>\n                            <td>number</td>\n                            <td>row index</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"useYn\" / \"viewYn\" / \"category\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>value</th>\n                            <td>string || number</td>\n                            <td>\"cupcake\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>label</th>\n                            <td>string || number</td>\n                            <td>\"컵케이크\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>{`[{\"value\": \"\", \"label\": \"카테고리를 선택해주세요\"}, {\"value\": \"cupcake\", \"label\": \"컵케이크\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>handleSelect</th>\n                            <td>function</td>\n                            <td>{`() => console.log(\"select option\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import Select from \"common/table/SingleSelect\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"useYn\" / \"viewYn\" / \"category\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>value</th>\n                            <td>object</td>\n                            <td>{`{\"value\": \"cupcake\", \"label\": \"컵케이크\"} ...`}</td>\n                        </tr>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>{`[{\"value\": \"\", \"label\": \"카테고리를 선택해주세요\"}, {\"value\": \"cupcake\", \"label\": \"컵케이크\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>handleSelect</th>\n                            <td>function</td>\n                            <td>{`() => console.log(\"select option\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import CheckBox from \"common/table/CheckBox\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>\n                                {`[\n                                    { \"name\": \"ingredients1\", \"value\": true, \"label\": \"Chocolate\" },\n                                    { \"name\": \"ingredients2\", \"value\": false, \"label\": \"Strawberry\" }\n                                ]`}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>{`() => console.log(\"change value\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import RadioButton from \"common/table/RadioButton\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"useYn\" / \"viewYn\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>value</th>\n                            <td>string</td>\n                            <td>\"Y\" / \"N\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>{`[{\"value\": \"Y\", \"label\": \"사용\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>handleChange</th>\n                            <td>function</td>\n                            <td>{`() => console.log(\"change value\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import TableButton from \"common/table/Button\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>disabled</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>pageType</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"\"</td>\n                            <td>\"edit\" / \"delete\" / \"add\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>text</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"수정\" / \"삭제\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>rowIndex</th>\n                            <td>number</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>row index</td>\n                        </tr>\n                        <tr>\n                            <th>onClick</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"clicked button inside table\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </code>\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Picker from \"@mui/lab/DatePicker\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction DatePicker({ name, value, handleDate }) {\n    return (\n        <Picker\n            mask=\"____-__-__\"\n            inputFormat=\"yyyy-MM-dd\"\n            views={[\"day\"]}\n            value={value}\n            onChange={(e) => handleDate(name, e)}\n            inputProps={{ \"aria-label\": { name }, placeholder: \"\" }}\n            renderInput={(props) => <TextField {...props} size=\"small\" />}\n        />\n    );\n}\n\nDatePicker.propTypes = {\n    value: PropTypes.instanceOf(Date),\n    name: PropTypes.string.isRequired,\n    handleDate: PropTypes.func.isRequired\n};\n\nexport default DatePicker;\n","import React from \"react\";\nimport useMenu from \"hooks/useMenu\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport theme from \"styles/theme/form\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport CheckBox from \"common/form/CheckBox\";\nimport DatePicker from \"common/form/DatePicker\";\nimport Input from \"common/form/Input\";\nimport RadioButton from \"common/form/RadioButton\";\nimport FormSelect from \"common/form/Select\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"100%\",\n        margin: \"0 auto\",\n        padding: 20,\n        background: \"#ffffff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: \"column\"\n    },\n    componentContainer: {\n        marginBottom: 30,\n        \"&:last-child\": {\n            marginBottom: 0\n        }\n    },\n    title: {\n        marginBottom: 20\n    },\n    spacer: {\n        marginRight: 20\n    },\n    margin: {\n        margin: \"20px 0\"\n    },\n    background: {\n        width: \"100%\",\n        marginBottom: 50,\n        borderRadius: 5,\n        fontSize: 16,\n        fontWeight: 600,\n        lineHeight: \"24px\",\n        color: \"black\"\n    },\n    table: {\n        width: \"100%\",\n        marginBottom: 80,\n        color: \"black\",\n        borderCollapse: \"collapse\",\n        \"& thead\": {\n            color: theme.palette.primary.main,\n            \"& th\": {\n                height: 40\n            }\n        },\n        \"& th\": {\n            fontWeight: 600,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`\n        },\n        \"& td\": {\n            height: 45,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`,\n            textAlign: \"center\"\n        },\n        \"& tbody th\": {\n            width: \"20%\"\n        },\n        \"& td:first-child\": {\n            width: \"20%\"\n        },\n        \"& td:last-child\": {\n            width: \"60%\"\n        }\n    }\n}));\n\nconst options = [\n    { value: \"Cupcake\", label: \"Cupcake\" },\n    { value: \"Cookie\", label: \"Cookie\" },\n    { value: \"Snack\", label: \"Snack\" }\n];\n\nexport default function Form() {\n    const classes = useStyles();\n    const { control, handleSubmit } = useForm();\n\n    useMenu({ page: \"Form Component Demo\", menu: \"components\", menuTitle: \"Form\", menuNum: 4 });\n\n    const handleDemo = () => {\n        alert(\"Form Demo\");\n    };\n\n    return (\n        <div className={classes.container}>\n            <ThemeProvider theme={theme}>\n                <form onSubmit={handleSubmit(handleDemo)} noValidate autoComplete=\"off\">\n                    <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                        Checkbox\n                    </Typography>\n                    <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\" direction=\"row\">\n                        <CheckBox\n                            options={[\n                                { name: \"checkbox1\", defaultValue: true, label: \"1\" },\n                                { name: \"checkbox2\", defaultValue: false, label: \"2\" },\n                                { name: \"checkbox3\", defaultValue: false, label: \"3\" }\n                            ]}\n                            control={control}\n                        />\n                    </Grid>\n                    <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                        Date Picker\n                    </Typography>\n                    <Grid className={classes.componentContainer}>\n                        <DatePicker name=\"startDate\" value={new Date()} handleDate={handleDemo} />\n                    </Grid>\n                    <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                        Radio Button\n                    </Typography>\n                    <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                        <RadioButton\n                            name=\"radio\"\n                            defaultValue={1}\n                            control={control}\n                            options={[\n                                { value: 1, label: \"1\" },\n                                { value: 2, label: \"2\" },\n                                { value: 3, label: \"3\" }\n                            ]}\n                        />\n                    </Grid>\n                    <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                        Select\n                    </Typography>\n                    <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                        <FormSelect name=\"dessert\" defaultValue={options[0]} control={control} options={options} />\n                    </Grid>\n                    <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                        Input\n                    </Typography>\n                    <Grid className={classes.componentContainer} spacing={2} direction=\"column\" container alignItems=\"center\" justifyContent=\"flex-start\">\n                        <Grid item>\n                            <Input inputType=\"text\" name=\"fat\" defaultValue=\"10.5\" control={control} classes={classes} />\n                        </Grid>\n                        <Grid item>\n                            <Input inputType=\"number\" name=\"calories\" defaultValue={12} control={control} classes={classes} />\n                        </Grid>\n                    </Grid>\n                </form>\n            </ThemeProvider>\n            <Typography className={classes.margin} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Form Props Guide\n            </Typography>\n            <code className={classes.background}>\n                import CheckBox from \"common/form/CheckBox\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>\n                                {`\n                                    [{ name: \"checkbox1\", defaultValue: true, label: \"1\" }]\n                                `}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>control</th>\n                            <td>object</td>\n                            <td>react-hook-form control</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import DatePicker from \"common/form/DatePicker\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>value</th>\n                            <td>new Date()</td>\n                            <td>\"2021-12-03\"</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"startDate\" / \"endDate\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>handleDate</th>\n                            <td>function</td>\n                            <td>{`(e) => handleDate(name, e)`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import RadioButton from \"common/form/RadioButton\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"useYn\" / \"viewYn\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>defaultValue</th>\n                            <td>string || number</td>\n                            <td>1 / \"Y\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>\n                                {`\n                                    [\n                                        { value: 1, label: \"1\" },\n                                        { value: 2, label: \"2\" },\n                                        { value: 3, label: \"3\" }\n                                    ]\n                                `}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>control</th>\n                            <td>object</td>\n                            <td>react-hook-form control</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import FormSelect from \"common/form/Select\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>isClearable</th>\n                            <td>boolean</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>isSearchable</th>\n                            <td>boolean</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"useYn\" / \"viewYn\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>defaultValue</th>\n                            <td>object</td>\n                            <td>{`{ value: 1, label: \"1\" }`}</td>\n                        </tr>\n                        <tr>\n                            <th>options</th>\n                            <td>array</td>\n                            <td>\n                                {`\n                                    [\n                                        { value: 1, label: \"1\" },\n                                        { value: 2, label: \"2\" },\n                                        { value: 3, label: \"3\" }\n                                    ]\n                                `}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>control</th>\n                            <td>object</td>\n                            <td>react-hook-form control</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import Input from \"common/form/Input\"; <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>fullWidth</th>\n                            <td>boolean</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>multiline</th>\n                            <td>boolean</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>rows</th>\n                            <td>number</td>\n                            <td>0 ~ </td>\n                        </tr>\n                        <tr>\n                            <th>inputType</th>\n                            <td>string</td>\n                            <td>\"text\" / \"number\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>name</th>\n                            <td>string</td>\n                            <td>\"name\" / \"quantity\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>defaultValue</th>\n                            <td>string || number</td>\n                            <td>\"Strawberry Chocolate Cupcake\" / 80 ...</td>\n                        </tr>\n                        <tr>\n                            <th>control</th>\n                            <td>object</td>\n                            <td>react-hook-form control</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </code>\n        </div>\n    );\n}\n","import React from \"react\";\nimport useMenu from \"hooks/useMenu\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport DefaultButton from \"common/button/DefaultButton\";\nimport ExcelButton from \"common/excel\";\nimport SubmitButton from \"common/button/SubmitButton\";\nimport TableButton from \"common/table/Button\";\nimport PageButton from \"common/button/PageButton\";\n\nimport { sampleRowData } from \"components/Data\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: \"100%\",\n        margin: \"0 auto\",\n        padding: 20,\n        background: theme.palette.neutral[\"white\"],\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: \"column\"\n    },\n    componentContainer: {\n        marginBottom: 30,\n        \"&:last-child\": {\n            marginBottom: 0\n        }\n    },\n    title: {\n        marginBottom: 20\n    },\n    spacer: {\n        marginRight: 20,\n        marginBottom: 20\n    },\n    background: {\n        width: \"100%\",\n        marginBottom: 50,\n        borderRadius: 5,\n        fontSize: 16,\n        fontWeight: 600,\n        lineHeight: \"24px\",\n        color: \"black\"\n    },\n    table: {\n        width: \"100%\",\n        marginBottom: 80,\n        color: theme.palette.neutral[\"dark\"],\n        borderCollapse: \"collapse\",\n        \"& thead\": {\n            color: theme.palette.primary.main,\n            \"& th\": {\n                height: 40\n            }\n        },\n        \"& th\": {\n            fontWeight: 600,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`\n        },\n        \"& td\": {\n            height: 45,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`,\n            textAlign: \"center\"\n        },\n        \"& tbody th\": {\n            width: \"10%\"\n        },\n        \"& td:nth-child(2n+1)\": {\n            width: \"10%\"\n        },\n        \"& td:nth-child(2n)\": {\n            width: \"10%\"\n        },\n        \"& td:last-child\": {\n            width: \"50%\"\n        }\n    }\n}));\n\nexport default function ButtonComponent() {\n    const classes = useStyles();\n\n    useMenu({ page: \"Button Component Demo\", menu: \"components\", menuTitle: \"Button\", menuNum: 7 });\n\n    const handleDemo = () => alert(\"Button Demo\");\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Default 버튼\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"flex-start\" justifyContent=\"center\" direction=\"column\">\n                <Grid item container spacing={2} alignItems=\"center\" flexWrap>\n                    <Grid item>\n                        <DefaultButton size=\"large\" disabled={false} text=\"Large Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"large\" disabled={true} text=\"Disabled Large Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"medium\" disabled={false} text=\"Medium Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"medium\" disabled={true} text=\"Disabled Medium Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"small\" disabled={false} text=\"Small Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"small\" disabled={true} text=\"Disabled Small Button\" onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item container spacing={2} flexWrap>\n                    <Grid item>\n                        <DefaultButton size=\"large\" color=\"primary\" variant=\"outlined\" disabled={false} text=\"Primary Color Outlined Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"large\" color=\"primary\" variant=\"contained\" disabled={false} text=\"Primary Color Contained Button\" onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <DefaultButton size=\"large\" color=\"secondary\" variant=\"outlined\" disabled={false} text=\"Secondary Color Outlined Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"large\" color=\"secondary\" variant=\"contained\" disabled={false} text=\"Secondary Color Contained Button\" onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <DefaultButton size=\"large\" color=\"error\" variant=\"outlined\" disabled={false} text=\"Error Color Outlined Button\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <DefaultButton size=\"large\" color=\"error\" variant=\"contained\" disabled={false} text=\"Error Color Contained Button\" onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Submit 버튼\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"flex-start\" justifyContent=\"center\" direction=\"column\">\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <SubmitButton type=\"submit\" color=\"primary\" text=\"Type Submit Button\" loading={false} disabled={false} />\n                    </Grid>\n                    <Grid item>\n                        <SubmitButton type=\"submit\" color=\"secondary\" text=\"Type Submit Button\" loading={false} disabled={false} />\n                    </Grid>\n                    <Grid item>\n                        <SubmitButton type=\"submit\" color=\"error\" text=\"Type Submit Button\" loading={false} disabled={false} />\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <SubmitButton type=\"button\" color=\"primary\" text=\"Type Button Button\" loading={false} disabled={false} onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <SubmitButton type=\"button\" color=\"secondary\" text=\"Type Button Button\" loading={false} disabled={false} onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <SubmitButton type=\"button\" color=\"error\" text=\"Type Button Button\" loading={false} disabled={false} onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <SubmitButton type=\"submit\" text=\"Disabled Submit Button\" loading={false} disabled={true} onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <SubmitButton type=\"submit\" text=\"Loading Submit Button\" loading={true} disabled={false} onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Page 버튼\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <PageButton disabled={false} text=\"목록\" pageType=\"search\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <PageButton disabled={true} text=\"목록\" pageType=\"search\" onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <PageButton color=\"primary\" disabled={false} text=\"수정하기\" pageType=\"edit\" onClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <PageButton color=\"primary\" disabled={true} text=\"수정하기\" pageType=\"edit\" onClick={handleDemo} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Excel 버튼\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item container spacing={2}>\n                    <Grid item>\n                        <ExcelButton menu=\"Dashboard\" loading={false} disabled={false} excelData={sampleRowData} onExcelClick={handleDemo} />\n                    </Grid>\n                    <Grid item>\n                        <ExcelButton menu=\"Dashboard\" loading={true} disabled={false} excelData={sampleRowData} onExcelClick={handleDemo} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Table 버튼\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <TableButton disabled={false} pageType=\"edit\" text=\"수정\" rowIndex={0} onClick={handleDemo} />\n                    <TableButton disabled={true} pageType=\"edit\" text=\"수정\" rowIndex={0} onClick={handleDemo} />\n                </Grid>\n                <div className={classes.spacer} />\n                <Grid item>\n                    <TableButton disabled={false} text=\"삭제\" rowIndex={0} onClick={handleDemo} />\n                    <TableButton disabled={true} text=\"삭제\" rowIndex={0} onClick={handleDemo} />\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Button Props Guide\n            </Typography>\n            <code className={classes.background}>\n                import Button from \"common/button/DefaultButton\"; <br />\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>size</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"large\"</td>\n                            <td>\"large\" || \"medium\" || \"small\"</td>\n                        </tr>\n                        <tr>\n                            <th>color</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"primary\"</td>\n                            <td>\"primary\" || \"secondary\" || \"error\"</td>\n                        </tr>\n                        <tr>\n                            <th>variant</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"outlined\"</td>\n                            <td>\"outlined\" || \"contained\"</td>\n                        </tr>\n                        <tr>\n                            <th>disabled</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>text</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"추가\" / \"닫기\" / \"수정\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>onClick</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(button click)`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import SubmitButton from \"common/button/SubmitButton\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>type</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"button\"</td>\n                            <td>\"button\" || \"submit\"</td>\n                        </tr>\n                        <tr>\n                            <th>type</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"secondary\"</td>\n                            <td>\"primary\" || \"secondary\" || \"error\"</td>\n                        </tr>\n                        <tr>\n                            <th>loading</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>disabled</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>text</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"추가\" / \"수정\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>onClick</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"type=\"button\" click\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import PageButton from \"common/button/PageButton\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>color</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"primary\"</td>\n                            <td>\"primary\" || \"secondary\" || \"error\"</td>\n                        </tr>\n                        <tr>\n                            <th>disabled</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>text</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td></td>\n                            <td>\"목록\" / \"수정\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>pageType</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"search\"</td>\n                            <td>\"search\" / \"edit\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>onClick</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td></td>\n                            <td>{`() => history.push(\"/\")`})</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import ExcelButton from \"common/excel\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>menu</th>\n                            <td>string</td>\n                            <td>\"Dashboard\" / \"Example\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>loading</th>\n                            <td>boolean</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>disabled</th>\n                            <td>boolean</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>excelData</th>\n                            <td>array</td>\n                            <td>{`[{\"no\": 1 , \"name\": \"test\"}]`}</td>\n                        </tr>\n                        <tr>\n                            <th>onExcelClick</th>\n                            <td>function</td>\n                            <td>{`() => console.log(\"downloading excel file\")`})</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import TableButton from \"common/table/Button\";\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>isRequired</th>\n                            <th>Default</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>disabled</th>\n                            <td>boolean</td>\n                            <td>No</td>\n                            <td>false</td>\n                            <td>false || true</td>\n                        </tr>\n                        <tr>\n                            <th>pageType</th>\n                            <td>string</td>\n                            <td>No</td>\n                            <td>\"\"</td>\n                            <td>\"edit\" / \"delete\" / \"add\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>text</th>\n                            <td>string</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>\"수정\" / \"삭제\" ...</td>\n                        </tr>\n                        <tr>\n                            <th>rowIndex</th>\n                            <td>number</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>row index</td>\n                        </tr>\n                        <tr>\n                            <th>onClick</th>\n                            <td>function</td>\n                            <td>Yes</td>\n                            <td>-</td>\n                            <td>{`() => console.log(\"clicked button inside table\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </code>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useMenu from \"hooks/useMenu\";\n\nimport { setMessage, setDetail, setClose } from \"slices/modalSlice\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport DetailModal from \"common/modal/DetailModal\";\nimport MessageModal from \"common/modal/MessageModal\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: \"100%\",\n        margin: \"0 auto\",\n        padding: 20,\n        background: \"#ffffff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: \"column\"\n    },\n    componentContainer: {\n        marginBottom: 30,\n        \"&:last-child\": {\n            marginBottom: 0\n        }\n    },\n    title: {\n        marginBottom: 20\n    },\n    spacer: {\n        marginRight: 20\n    },\n    cursor: {\n        cursor: \"pointer\",\n        textDecoration: \"underline\"\n    },\n    background: {\n        width: \"100%\",\n        marginBottom: 50,\n        fontSize: 16,\n        fontWeight: 600,\n        lineHeight: \"24px\",\n        color: \"black\"\n    },\n    table: {\n        width: \"100%\",\n        marginBottom: 80,\n        color: \"black\",\n        borderCollapse: \"collapse\",\n        \"& thead\": {\n            color: theme.palette.primary.main,\n            \"& th\": {\n                height: 40\n            }\n        },\n        \"& th\": {\n            fontWeight: 600,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`\n        },\n        \"& td\": {\n            height: 45,\n            padding: \"5px 20px\",\n            borderBottom: `1px solid ${theme.palette.border[\"opacity0.2\"]}`,\n            textAlign: \"center\"\n        },\n        \"& tbody th\": {\n            width: \"20%\"\n        },\n        \"& td:first-child\": {\n            width: \"20%\"\n        },\n        \"& td:last-child\": {\n            width: \"60%\"\n        }\n    }\n}));\n\nexport default function Modal() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    // 페이지(메뉴) 설정하기\n    useMenu({ page: \"Modal Component Demo\", menu: \"components\", menuTitle: \"Modal\", menuNum: 5 });\n\n    // 선택한 데이터 삭제하기\n    const handleDelete = () => {\n        dispatch(setClose());\n        dispatch(setMessage({ open: true, message: \"삭제되었습니다.\" }));\n    };\n\n    // 메시지 모달 데모\n    const onMessage = () => dispatch(setMessage({ open: true, message: \"Alert!\" }));\n\n    // 확인 모달 데모\n    const onConfirmMsg = () => dispatch(setMessage({ open: true, type: \"confirm\", message: \"Confirm Message?\" }));\n\n    const onDetail = () => dispatch(setDetail({ open: true, data: { title: \"Detail Modal Demo\", type: \"quantity\", quantity: 7777777 } }));\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                메시지 모달\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography className={classes.cursor} variant=\"body2\" color=\"inherit\" onClick={onMessage}>\n                        Message\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Confirm 모달\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography className={classes.cursor} variant=\"body2\" color=\"inherit\" onClick={onConfirmMsg}>\n                        Confirm\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                상세 모달\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography className={classes.cursor} variant=\"body2\" color=\"inherit\" onClick={() => onDetail(\"quantity\")}>\n                        상세 조회\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h3\" component=\"h3\" color=\"inherit\">\n                Modal Props Guide\n            </Typography>\n            <code className={classes.background}>\n                import MessageModal from \"common/modal/MessageModal\"; <br />\n                {`const { msgOpen, messageType, message } = useSelector(modalSelector);`}\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>handleConfirm</th>\n                            <td>function</td>\n                            <td>{`() => console.log(\"deleting dessert\")`}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                import DetailModal from \"common/modal/DetailModal\"; <br />\n                {`const { detailOpen, detailData } = useSelector(modalSelector);`}\n                <br />\n                <table className={classes.table}>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>-</th>\n                            <td>-</td>\n                            <td>-</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </code>\n            <DetailModal />\n            <MessageModal handleConfirm={handleDelete} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport useMenu from \"hooks/useMenu\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"100%\",\n        margin: \"0 auto 30px\",\n        padding: 20,\n        background: \"#ffffff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexDirection: \"column\"\n    },\n    componentContainer: {\n        marginBottom: 30,\n        \"&:last-child\": {\n            marginBottom: 0\n        }\n    },\n    title: {\n        marginBottom: 20\n    },\n    usage: {\n        color: \"#039BE5\",\n        fontWeight: 600,\n        fontSize: 14\n    },\n    spacer: {\n        marginBottom: 5\n    }\n}));\n\nexport default function TypographyComponent() {\n    const classes = useStyles();\n\n    useMenu({ page: \"Typography Component Demo\", menu: \"components\", menuTitle: \"Typography\", menuNum: 6 });\n\n    return (\n        <div className={classes.container}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h3\" color=\"inherit\">\n                Typography variant h1\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography variant=\"h1\" component=\"h1\">\n                        LOGO\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h5\" component=\"h3\" color=\"inherit\">\n                Typography variant h2 <br />\n                <Typography variant=\"body1\" className={classes.usage}>\n                    Header\n                </Typography>\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography variant=\"h2\" component=\"h2\">\n                        Dashboard\n                    </Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"h2\" component=\"h2\">\n                        Summary\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h5\" component=\"h3\" color=\"inherit\">\n                Typography variant body1 <br />\n                <Typography variant=\"body1\" className={classes.usage}>\n                    MessageModal, MsgConfirmModal\n                </Typography>\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography variant=\"body1\" display=\"block\">\n                        해당 디저트를 삭제하시겠습니까?\n                    </Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"body1\" display=\"block\">\n                        로그인에 실패하였습니다.\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h5\" component=\"h3\" color=\"inherit\">\n                Typography variant body2 <br />\n                <Typography variant=\"body1\" className={classes.usage}>\n                    ChangeInfo, EditModal\n                </Typography>\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography variant=\"body2\" display=\"block\">\n                        이름\n                    </Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"body2\" display=\"block\">\n                        비밀번호\n                    </Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"body2\" display=\"block\">\n                        이메일\n                    </Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"body2\" display=\"block\">\n                        첨부파일\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h5\" component=\"h3\" color=\"inherit\">\n                Typography variant button <br />\n                <Typography variant=\"body1\" className={classes.usage}>\n                    로그인한 유저명, Filter의 확인 버튼\n                </Typography>\n            </Typography>\n            <Grid className={classes.componentContainer} container alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography variant=\"button\">블록오디세이님</Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"button\">확인</Typography>\n                </Grid>\n            </Grid>\n            <Typography className={classes.title} variant=\"h5\" component=\"h3\" color=\"inherit\">\n                Typography variant caption <br />\n                <Typography variant=\"body1\" className={classes.usage}>\n                    검색\n                </Typography>\n            </Typography>\n            <Grid className={classes.componentContainer} container direction=\"row\" alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item>\n                    <Typography variant=\"caption\">기간</Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"caption\">성별</Typography>\n                    <div className={classes.spacer} />\n                    <Typography variant=\"caption\">조회조건</Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport withContainer from \"layout/container/Container\";\nimport withPageContainer from \"layout/container/PageContainer\";\n\nimport Dashboard from \"features/summary/Dashboard\";\nimport DashboardDetail from \"features/summary/DashboardDetail\";\nimport DashboardUpload from \"features/summary/DashboardUpload\";\nimport DashboardEdit from \"features/summary/DashboardEdit\";\n\nimport Example from \"features/example/Example\";\n\nimport Chart from \"features/chart/Chart\";\nimport ChartTable from \"features/chart/ChartTable\";\n\nimport ChangeInfo from \"features/admin/ChangeInfo\";\nimport ChangePassword from \"features/admin/ChangePassword\";\n\nimport Page404 from \"features/404\";\n\nimport SearchComponent from \"features/components/Search\";\nimport TableComponent from \"features/components/Table\";\nimport FormComponent from \"features/components/Form\";\nimport ButtonComponent from \"features/components/Button\";\nimport ModalComponent from \"features/components/Modal\";\nimport TypographyComponent from \"features/components/Typography\";\n\nexport default function Router() {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={withContainer(Dashboard)} />\n            <Route path=\"/upload\" exact component={withPageContainer(DashboardUpload)} />\n            <Route path=\"/edit/:idx\" exact component={withPageContainer(DashboardEdit)} />\n            <Route path=\"/detail/:idx\" exact component={withPageContainer(DashboardDetail)} />\n\n            <Route path=\"/example\" exact component={withContainer(Example)} />\n\n            <Route path=\"/chart\" exact component={withContainer(Chart)} />\n            <Route path=\"/chart-table\" exact component={withContainer(ChartTable)} />\n\n            <Route path=\"/info\" exact component={withPageContainer(ChangeInfo)} />\n            <Route path=\"/password\" exact component={withPageContainer(ChangePassword)} />\n\n            <Route path=\"/search\" exact component={withContainer(SearchComponent)} />\n            <Route path=\"/table\" exact component={withContainer(TableComponent)} />\n            <Route path=\"/form\" exact component={withContainer(FormComponent)} />\n            <Route path=\"/button\" exact component={withContainer(ButtonComponent)} />\n            <Route path=\"/modal\" exact component={withContainer(ModalComponent)} />\n            <Route path=\"/typography\" exact component={withContainer(TypographyComponent)} />\n\n            <Redirect path=\"/login\" to=\"/\" />\n            <Route path=\"*\" component={Page404} />\n        </Switch>\n    );\n}\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { loginSelector } from \"slices/loginSlice\";\r\n\r\nimport Login from \"features/login\";\r\nimport Router from \"routes/Router\";\r\n\r\nexport default function App() {\r\n    const { isLogin } = useSelector(loginSelector);\r\n\r\n    const PrivateRoutes = () => (\r\n        <HashRouter>\r\n            <Router />\r\n        </HashRouter>\r\n    );\r\n\r\n    const PublicRoutes = () => (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Redirect path=\"*\" to=\"/login\" />\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n\r\n    return isLogin ? <PrivateRoutes /> : <PublicRoutes />;\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport loginReducer from \"slices/loginSlice\";\nimport menuReducer from \"slices/menuSlice\";\nimport modalReducer from \"slices/modalSlice\";\nimport searchReducer from \"slices/searchSlice\";\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    menu: menuReducer,\n    modal: modalReducer,\n    search: searchReducer\n});\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"app/rootReducer\";\r\n\r\nconst reducer = (state, action) => {\r\n    // 로그아웃할 때 모든 state 초기화하기\r\n    if (action.type === \"login/setLogOut\") {\r\n        state = undefined;\r\n    }\r\n\r\n    return rootReducer(state, action);\r\n};\r\n\r\nexport default configureStore({\r\n    reducer: reducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n    devTools: process.env.NODE_ENV !== \"production\"\r\n});\r\n","import { createTheme } from \"@mui/material/styles\";\nimport { typography } from \"styles/theme/typography\";\nimport { palette } from \"styles/theme/palette\";\nimport { koKR } from \"@mui/material/locale\";\n\nconst theme = createTheme(\n    {\n        palette,\n        typography,\n        components: {\n            MuiCssBaseline: {\n                styleOverrides: {\n                    \"*\": {\n                        boxSizing: \"border-box\",\n                        margin: 0,\n                        padding: 0\n                    },\n                    html: {\n                        height: \"100%\",\n                        width: \"100%\"\n                    },\n                    body: {\n                        backgroundColor: palette.background[\"main\"],\n                        height: \"100%\",\n                        width: \"100%\"\n                    },\n                    a: {\n                        textDecoration: \"none\",\n                        color: \"inherit\"\n                    },\n                    \"#root\": {\n                        height: \"100%\",\n                        width: \"100%\"\n                    },\n                    table: {\n                        width: \"100%\",\n                        borderCollapse: \"collapse\",\n                        backgroundColor: palette.neutral[\"white\"],\n                        \"& th\": {\n                            height: 48,\n                            padding: \"0 20px\"\n                        },\n                        \"& td\": {\n                            height: 48,\n                            padding: \"0 20px\"\n                        }\n                    }\n                }\n            },\n            MuiList: {\n                styleOverrides: {\n                    padding: {\n                        paddingTop: 0,\n                        paddingBottom: 0\n                    }\n                }\n            },\n            MuiButton: {\n                styleOverrides: {\n                    sizeSmall: {\n                        padding: 5\n                    },\n                    sizeMedium: {\n                        height: 30,\n                        padding: 10,\n                        fontSize: 12\n                    },\n                    sizeLarge: {\n                        minWidth: 100,\n                        width: \"auto\",\n                        padding: 10\n                    }\n                }\n            },\n            MuiIconButton: {\n                styleOverrides: {\n                    root: {\n                        \"&:hover\": {\n                            backgroundColor: palette.neutral[\"white\"]\n                        }\n                    }\n                }\n            },\n            MuiOutlinedInput: {\n                styleOverrides: {\n                    root: {\n                        \"&&$focused fieldset\": {\n                            borderColor: palette.border[\"main\"],\n                            borderWidth: 1\n                        },\n                        \"&&:hover fieldset\": {\n                            borderColor: palette.border[\"main\"],\n                            borderWidth: 1\n                        }\n                    },\n                    notchedOutline: {\n                        borderColor: palette.border[\"main\"]\n                    }\n                }\n            },\n            MuiTableContainer: {\n                styleOverrides: {\n                    root: {\n                        overflowX: \"unset\"\n                    }\n                }\n            },\n            MuiTableRow: {\n                styleOverrides: {\n                    root: {\n                        height: 46\n                    },\n                    hover: {\n                        \"&&:hover\": {\n                            backgroundColor: palette.primary[\"light\"]\n                        }\n                    }\n                }\n            },\n            MuiTableHead: {\n                styleOverrides: {\n                    root: {\n                        height: 70,\n                        fontSize: 12,\n                        fontWeight: 500,\n                        borderBottom: `1px solid ${palette.border[\"light\"]}`\n                    }\n                }\n            },\n            MuiTableCell: {\n                styleOverrides: {\n                    root: {\n                        padding: 10,\n                        cursor: \"context-menu\",\n                        backgroundColor: palette.neutral[\"white\"]\n                    },\n                    head: {\n                        height: 70\n                    }\n                }\n            },\n            MuiTablePagination: {\n                styleOverrides: {\n                    root: {\n                        margin: \"0 20px\",\n                        borderRadius: 4,\n                        \"&:last-child\": {\n                            padding: \"20px 0\"\n                        }\n                    },\n                    spacer: {\n                        flex: \"1 1 100%\"\n                    }\n                }\n            },\n            MuiSvgIcon: {\n                styleOverrides: {\n                    root: {\n                        width: 20,\n                        height: 20\n                    }\n                }\n            },\n            MuiSelect: {\n                styleOverrides: {\n                    icon: {\n                        top: \"unset\"\n                    }\n                }\n            }\n        }\n    },\n    koKR\n);\n\nexport default theme;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"app/App\";\r\nimport store from \"app/store\";\r\n\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { StyledEngineProvider, ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport theme from \"styles/theme/theme\";\r\n\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\n\r\nimport * as serviceWorker from \"serviceWorker\";\r\n\r\nconst queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        queries: {\r\n            retry: false,\r\n            cacheTime: 0,\r\n            staleTime: 5 * 60 * 1000,\r\n            refetchOnWindowFocus: false,\r\n            refetchOnmount: true,\r\n            refetchOnReconnect: false\r\n        }\r\n    }\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme}>\r\n                <Provider store={store}>\r\n                    <CssBaseline />\r\n                    <QueryClientProvider client={queryClient}>\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <App />\r\n                        </LocalizationProvider>\r\n                    </QueryClientProvider>\r\n                </Provider>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}